/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.appliedolap.essbase.client.model.Limit;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Limits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-15T10:08:15.807377400-05:00[America/Chicago]")
public class Limits {
  public static final String SERIALIZED_NAME_CORE_FILE_SIZE = "coreFileSize";
  @SerializedName(SERIALIZED_NAME_CORE_FILE_SIZE)
  private Limit coreFileSize;

  public static final String SERIALIZED_NAME_DATA_SEGMENT_SIZE = "dataSegmentSize";
  @SerializedName(SERIALIZED_NAME_DATA_SEGMENT_SIZE)
  private Limit dataSegmentSize;

  public static final String SERIALIZED_NAME_MAX_MEMORY = "maxMemory";
  @SerializedName(SERIALIZED_NAME_MAX_MEMORY)
  private Limit maxMemory;

  public static final String SERIALIZED_NAME_OPEN_FILES = "openFiles";
  @SerializedName(SERIALIZED_NAME_OPEN_FILES)
  private Limit openFiles;

  public static final String SERIALIZED_NAME_USER_MAX_PROCESSES = "userMaxProcesses";
  @SerializedName(SERIALIZED_NAME_USER_MAX_PROCESSES)
  private Limit userMaxProcesses;

  public static final String SERIALIZED_NAME_VIRTUAL_MEMORY_SIZE = "virtualMemorySize";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MEMORY_SIZE)
  private Limit virtualMemorySize;

  public static final String SERIALIZED_NAME_WEB_LOGIC_HEAP_SIZE = "webLogicHeapSize";
  @SerializedName(SERIALIZED_NAME_WEB_LOGIC_HEAP_SIZE)
  private Limit webLogicHeapSize;


  public Limits coreFileSize(Limit coreFileSize) {
    
    this.coreFileSize = coreFileSize;
    return this;
  }

   /**
   * Get coreFileSize
   * @return coreFileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getCoreFileSize() {
    return coreFileSize;
  }


  public void setCoreFileSize(Limit coreFileSize) {
    this.coreFileSize = coreFileSize;
  }


  public Limits dataSegmentSize(Limit dataSegmentSize) {
    
    this.dataSegmentSize = dataSegmentSize;
    return this;
  }

   /**
   * Get dataSegmentSize
   * @return dataSegmentSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getDataSegmentSize() {
    return dataSegmentSize;
  }


  public void setDataSegmentSize(Limit dataSegmentSize) {
    this.dataSegmentSize = dataSegmentSize;
  }


  public Limits maxMemory(Limit maxMemory) {
    
    this.maxMemory = maxMemory;
    return this;
  }

   /**
   * Get maxMemory
   * @return maxMemory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getMaxMemory() {
    return maxMemory;
  }


  public void setMaxMemory(Limit maxMemory) {
    this.maxMemory = maxMemory;
  }


  public Limits openFiles(Limit openFiles) {
    
    this.openFiles = openFiles;
    return this;
  }

   /**
   * Get openFiles
   * @return openFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getOpenFiles() {
    return openFiles;
  }


  public void setOpenFiles(Limit openFiles) {
    this.openFiles = openFiles;
  }


  public Limits userMaxProcesses(Limit userMaxProcesses) {
    
    this.userMaxProcesses = userMaxProcesses;
    return this;
  }

   /**
   * Get userMaxProcesses
   * @return userMaxProcesses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getUserMaxProcesses() {
    return userMaxProcesses;
  }


  public void setUserMaxProcesses(Limit userMaxProcesses) {
    this.userMaxProcesses = userMaxProcesses;
  }


  public Limits virtualMemorySize(Limit virtualMemorySize) {
    
    this.virtualMemorySize = virtualMemorySize;
    return this;
  }

   /**
   * Get virtualMemorySize
   * @return virtualMemorySize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getVirtualMemorySize() {
    return virtualMemorySize;
  }


  public void setVirtualMemorySize(Limit virtualMemorySize) {
    this.virtualMemorySize = virtualMemorySize;
  }


  public Limits webLogicHeapSize(Limit webLogicHeapSize) {
    
    this.webLogicHeapSize = webLogicHeapSize;
    return this;
  }

   /**
   * Get webLogicHeapSize
   * @return webLogicHeapSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Limit getWebLogicHeapSize() {
    return webLogicHeapSize;
  }


  public void setWebLogicHeapSize(Limit webLogicHeapSize) {
    this.webLogicHeapSize = webLogicHeapSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Limits limits = (Limits) o;
    return Objects.equals(this.coreFileSize, limits.coreFileSize) &&
        Objects.equals(this.dataSegmentSize, limits.dataSegmentSize) &&
        Objects.equals(this.maxMemory, limits.maxMemory) &&
        Objects.equals(this.openFiles, limits.openFiles) &&
        Objects.equals(this.userMaxProcesses, limits.userMaxProcesses) &&
        Objects.equals(this.virtualMemorySize, limits.virtualMemorySize) &&
        Objects.equals(this.webLogicHeapSize, limits.webLogicHeapSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coreFileSize, dataSegmentSize, maxMemory, openFiles, userMaxProcesses, virtualMemorySize, webLogicHeapSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Limits {\n");
    sb.append("    coreFileSize: ").append(toIndentedString(coreFileSize)).append("\n");
    sb.append("    dataSegmentSize: ").append(toIndentedString(dataSegmentSize)).append("\n");
    sb.append("    maxMemory: ").append(toIndentedString(maxMemory)).append("\n");
    sb.append("    openFiles: ").append(toIndentedString(openFiles)).append("\n");
    sb.append("    userMaxProcesses: ").append(toIndentedString(userMaxProcesses)).append("\n");
    sb.append("    virtualMemorySize: ").append(toIndentedString(virtualMemorySize)).append("\n");
    sb.append("    webLogicHeapSize: ").append(toIndentedString(webLogicHeapSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

