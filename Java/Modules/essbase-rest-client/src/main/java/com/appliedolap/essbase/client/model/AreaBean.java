/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.appliedolap.essbase.client.model.MemberMappingBean;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AreaBean
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-30T09:44:26.987-07:00[America/Los_Angeles]")
public class AreaBean {
  public static final String SERIALIZED_NAME_SOURCE_AREA = "sourceArea";
  @SerializedName(SERIALIZED_NAME_SOURCE_AREA)
  private String sourceArea;

  public static final String SERIALIZED_NAME_TARGET_AREA = "targetArea";
  @SerializedName(SERIALIZED_NAME_TARGET_AREA)
  private String targetArea;

  public static final String SERIALIZED_NAME_SOURCE_CELL_COUNT = "sourceCellCount";
  @SerializedName(SERIALIZED_NAME_SOURCE_CELL_COUNT)
  private Long sourceCellCount;

  public static final String SERIALIZED_NAME_TARGET_CELL_COUNT = "targetCellCount";
  @SerializedName(SERIALIZED_NAME_TARGET_CELL_COUNT)
  private Long targetCellCount;

  public static final String SERIALIZED_NAME_SLICES = "slices";
  @SerializedName(SERIALIZED_NAME_SLICES)
  private List<MemberMappingBean> slices = null;


  public AreaBean sourceArea(String sourceArea) {
    
    this.sourceArea = sourceArea;
    return this;
  }

   /**
   * Get sourceArea
   * @return sourceArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSourceArea() {
    return sourceArea;
  }


  public void setSourceArea(String sourceArea) {
    this.sourceArea = sourceArea;
  }


  public AreaBean targetArea(String targetArea) {
    
    this.targetArea = targetArea;
    return this;
  }

   /**
   * Get targetArea
   * @return targetArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTargetArea() {
    return targetArea;
  }


  public void setTargetArea(String targetArea) {
    this.targetArea = targetArea;
  }


  public AreaBean sourceCellCount(Long sourceCellCount) {
    
    this.sourceCellCount = sourceCellCount;
    return this;
  }

   /**
   * Get sourceCellCount
   * @return sourceCellCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getSourceCellCount() {
    return sourceCellCount;
  }


  public void setSourceCellCount(Long sourceCellCount) {
    this.sourceCellCount = sourceCellCount;
  }


  public AreaBean targetCellCount(Long targetCellCount) {
    
    this.targetCellCount = targetCellCount;
    return this;
  }

   /**
   * Get targetCellCount
   * @return targetCellCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTargetCellCount() {
    return targetCellCount;
  }


  public void setTargetCellCount(Long targetCellCount) {
    this.targetCellCount = targetCellCount;
  }


  public AreaBean slices(List<MemberMappingBean> slices) {
    
    this.slices = slices;
    return this;
  }

  public AreaBean addSlicesItem(MemberMappingBean slicesItem) {
    if (this.slices == null) {
      this.slices = new ArrayList<MemberMappingBean>();
    }
    this.slices.add(slicesItem);
    return this;
  }

   /**
   * Get slices
   * @return slices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MemberMappingBean> getSlices() {
    return slices;
  }


  public void setSlices(List<MemberMappingBean> slices) {
    this.slices = slices;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AreaBean areaBean = (AreaBean) o;
    return Objects.equals(this.sourceArea, areaBean.sourceArea) &&
        Objects.equals(this.targetArea, areaBean.targetArea) &&
        Objects.equals(this.sourceCellCount, areaBean.sourceCellCount) &&
        Objects.equals(this.targetCellCount, areaBean.targetCellCount) &&
        Objects.equals(this.slices, areaBean.slices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceArea, targetArea, sourceCellCount, targetCellCount, slices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AreaBean {\n");
    sb.append("    sourceArea: ").append(toIndentedString(sourceArea)).append("\n");
    sb.append("    targetArea: ").append(toIndentedString(targetArea)).append("\n");
    sb.append("    sourceCellCount: ").append(toIndentedString(sourceCellCount)).append("\n");
    sb.append("    targetCellCount: ").append(toIndentedString(targetCellCount)).append("\n");
    sb.append("    slices: ").append(toIndentedString(slices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

