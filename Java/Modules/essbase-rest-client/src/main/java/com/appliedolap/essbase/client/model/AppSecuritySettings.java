/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AppSecuritySettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-15T10:08:15.807377400-05:00[America/Chicago]")
public class AppSecuritySettings {
  public static final String SERIALIZED_NAME_ALLOW_COMMANDS = "allowCommands";
  @SerializedName(SERIALIZED_NAME_ALLOW_COMMANDS)
  private Boolean allowCommands;

  public static final String SERIALIZED_NAME_ALLOW_CONNECTS = "allowConnects";
  @SerializedName(SERIALIZED_NAME_ALLOW_CONNECTS)
  private Boolean allowConnects;

  public static final String SERIALIZED_NAME_ALLOW_UPDATES = "allowUpdates";
  @SerializedName(SERIALIZED_NAME_ALLOW_UPDATES)
  private Boolean allowUpdates;


  public AppSecuritySettings allowCommands(Boolean allowCommands) {
    
    this.allowCommands = allowCommands;
    return this;
  }

   /**
   * Get allowCommands
   * @return allowCommands
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowCommands() {
    return allowCommands;
  }


  public void setAllowCommands(Boolean allowCommands) {
    this.allowCommands = allowCommands;
  }


  public AppSecuritySettings allowConnects(Boolean allowConnects) {
    
    this.allowConnects = allowConnects;
    return this;
  }

   /**
   * Get allowConnects
   * @return allowConnects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowConnects() {
    return allowConnects;
  }


  public void setAllowConnects(Boolean allowConnects) {
    this.allowConnects = allowConnects;
  }


  public AppSecuritySettings allowUpdates(Boolean allowUpdates) {
    
    this.allowUpdates = allowUpdates;
    return this;
  }

   /**
   * Get allowUpdates
   * @return allowUpdates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowUpdates() {
    return allowUpdates;
  }


  public void setAllowUpdates(Boolean allowUpdates) {
    this.allowUpdates = allowUpdates;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppSecuritySettings appSecuritySettings = (AppSecuritySettings) o;
    return Objects.equals(this.allowCommands, appSecuritySettings.allowCommands) &&
        Objects.equals(this.allowConnects, appSecuritySettings.allowConnects) &&
        Objects.equals(this.allowUpdates, appSecuritySettings.allowUpdates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowCommands, allowConnects, allowUpdates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppSecuritySettings {\n");
    sb.append("    allowCommands: ").append(toIndentedString(allowCommands)).append("\n");
    sb.append("    allowConnects: ").append(toIndentedString(allowConnects)).append("\n");
    sb.append("    allowUpdates: ").append(toIndentedString(allowUpdates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

