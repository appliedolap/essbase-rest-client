/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LayoutHeader
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-01T18:22:09.429372-05:00[America/Indiana/Indianapolis]")
public class LayoutHeader {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_DATABASE_DEFAULT = "databaseDefault";
  @SerializedName(SERIALIZED_NAME_DATABASE_DEFAULT)
  private Boolean databaseDefault;

  public static final String SERIALIZED_NAME_USER_DEFAULT = "userDefault";
  @SerializedName(SERIALIZED_NAME_USER_DEFAULT)
  private Boolean userDefault;

  public static final String SERIALIZED_NAME_SESSION = "session";
  @SerializedName(SERIALIZED_NAME_SESSION)
  private Boolean session;


  public LayoutHeader name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public LayoutHeader user(String user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUser() {
    return user;
  }


  public void setUser(String user) {
    this.user = user;
  }


  public LayoutHeader databaseDefault(Boolean databaseDefault) {
    
    this.databaseDefault = databaseDefault;
    return this;
  }

   /**
   * Get databaseDefault
   * @return databaseDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDatabaseDefault() {
    return databaseDefault;
  }


  public void setDatabaseDefault(Boolean databaseDefault) {
    this.databaseDefault = databaseDefault;
  }


  public LayoutHeader userDefault(Boolean userDefault) {
    
    this.userDefault = userDefault;
    return this;
  }

   /**
   * Get userDefault
   * @return userDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUserDefault() {
    return userDefault;
  }


  public void setUserDefault(Boolean userDefault) {
    this.userDefault = userDefault;
  }


  public LayoutHeader session(Boolean session) {
    
    this.session = session;
    return this;
  }

   /**
   * Get session
   * @return session
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSession() {
    return session;
  }


  public void setSession(Boolean session) {
    this.session = session;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LayoutHeader layoutHeader = (LayoutHeader) o;
    return Objects.equals(this.name, layoutHeader.name) &&
        Objects.equals(this.user, layoutHeader.user) &&
        Objects.equals(this.databaseDefault, layoutHeader.databaseDefault) &&
        Objects.equals(this.userDefault, layoutHeader.userDefault) &&
        Objects.equals(this.session, layoutHeader.session);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, user, databaseDefault, userDefault, session);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LayoutHeader {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    databaseDefault: ").append(toIndentedString(databaseDefault)).append("\n");
    sb.append("    userDefault: ").append(toIndentedString(userDefault)).append("\n");
    sb.append("    session: ").append(toIndentedString(session)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

