/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SmartList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-01T18:22:09.429372-05:00[America/Indiana/Indianapolis]")
public class SmartList {
  public static final String SERIALIZED_NAME_INCREMENTAL_NUMBER = "incrementalNumber";
  @SerializedName(SERIALIZED_NAME_INCREMENTAL_NUMBER)
  private Integer incrementalNumber;

  public static final String SERIALIZED_NAME_START_NUMBER = "startNumber";
  @SerializedName(SERIALIZED_NAME_START_NUMBER)
  private Integer startNumber;

  public static final String SERIALIZED_NAME_MISSING_NAME = "missingName";
  @SerializedName(SERIALIZED_NAME_MISSING_NAME)
  private String missingName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OUT_OF_RANGE_NAME = "outOfRangeName";
  @SerializedName(SERIALIZED_NAME_OUT_OF_RANGE_NAME)
  private String outOfRangeName;

  public static final String SERIALIZED_NAME_REMOVE_UNSPECIFIED = "removeUnspecified";
  @SerializedName(SERIALIZED_NAME_REMOVE_UNSPECIFIED)
  private Integer removeUnspecified;


  public SmartList incrementalNumber(Integer incrementalNumber) {
    
    this.incrementalNumber = incrementalNumber;
    return this;
  }

   /**
   * Get incrementalNumber
   * @return incrementalNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getIncrementalNumber() {
    return incrementalNumber;
  }


  public void setIncrementalNumber(Integer incrementalNumber) {
    this.incrementalNumber = incrementalNumber;
  }


  public SmartList startNumber(Integer startNumber) {
    
    this.startNumber = startNumber;
    return this;
  }

   /**
   * Get startNumber
   * @return startNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStartNumber() {
    return startNumber;
  }


  public void setStartNumber(Integer startNumber) {
    this.startNumber = startNumber;
  }


  public SmartList missingName(String missingName) {
    
    this.missingName = missingName;
    return this;
  }

   /**
   * Get missingName
   * @return missingName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMissingName() {
    return missingName;
  }


  public void setMissingName(String missingName) {
    this.missingName = missingName;
  }


  public SmartList name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SmartList outOfRangeName(String outOfRangeName) {
    
    this.outOfRangeName = outOfRangeName;
    return this;
  }

   /**
   * Get outOfRangeName
   * @return outOfRangeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOutOfRangeName() {
    return outOfRangeName;
  }


  public void setOutOfRangeName(String outOfRangeName) {
    this.outOfRangeName = outOfRangeName;
  }


  public SmartList removeUnspecified(Integer removeUnspecified) {
    
    this.removeUnspecified = removeUnspecified;
    return this;
  }

   /**
   * Get removeUnspecified
   * @return removeUnspecified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRemoveUnspecified() {
    return removeUnspecified;
  }


  public void setRemoveUnspecified(Integer removeUnspecified) {
    this.removeUnspecified = removeUnspecified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmartList smartList = (SmartList) o;
    return Objects.equals(this.incrementalNumber, smartList.incrementalNumber) &&
        Objects.equals(this.startNumber, smartList.startNumber) &&
        Objects.equals(this.missingName, smartList.missingName) &&
        Objects.equals(this.name, smartList.name) &&
        Objects.equals(this.outOfRangeName, smartList.outOfRangeName) &&
        Objects.equals(this.removeUnspecified, smartList.removeUnspecified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(incrementalNumber, startNumber, missingName, name, outOfRangeName, removeUnspecified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmartList {\n");
    sb.append("    incrementalNumber: ").append(toIndentedString(incrementalNumber)).append("\n");
    sb.append("    startNumber: ").append(toIndentedString(startNumber)).append("\n");
    sb.append("    missingName: ").append(toIndentedString(missingName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outOfRangeName: ").append(toIndentedString(outOfRangeName)).append("\n");
    sb.append("    removeUnspecified: ").append(toIndentedString(removeUnspecified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

