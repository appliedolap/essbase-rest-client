/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.appliedolap.essbase.client.model.ParametersBean;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * JobsInputBean
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-23T11:48:17.898-07:00[America/Los_Angeles]")
public class JobsInputBean {
  public static final String SERIALIZED_NAME_APPLICATION = "application";
  @SerializedName(SERIALIZED_NAME_APPLICATION)
  private String application;

  public static final String SERIALIZED_NAME_DB = "db";
  @SerializedName(SERIALIZED_NAME_DB)
  private String db;

  public static final String SERIALIZED_NAME_JOBTYPE = "jobtype";
  @SerializedName(SERIALIZED_NAME_JOBTYPE)
  private String jobtype;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private ParametersBean parameters;


  public JobsInputBean application(String application) {
    
    this.application = application;
    return this;
  }

   /**
   * Get application
   * @return application
  **/
  @ApiModelProperty(required = true, value = "")

  public String getApplication() {
    return application;
  }


  public void setApplication(String application) {
    this.application = application;
  }


  public JobsInputBean db(String db) {
    
    this.db = db;
    return this;
  }

   /**
   * Get db
   * @return db
  **/
  @ApiModelProperty(required = true, value = "")

  public String getDb() {
    return db;
  }


  public void setDb(String db) {
    this.db = db;
  }


  public JobsInputBean jobtype(String jobtype) {
    
    this.jobtype = jobtype;
    return this;
  }

   /**
   * Get jobtype
   * @return jobtype
  **/
  @ApiModelProperty(required = true, value = "")

  public String getJobtype() {
    return jobtype;
  }


  public void setJobtype(String jobtype) {
    this.jobtype = jobtype;
  }


  public JobsInputBean parameters(ParametersBean parameters) {
    
    this.parameters = parameters;
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ParametersBean getParameters() {
    return parameters;
  }


  public void setParameters(ParametersBean parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsInputBean jobsInputBean = (JobsInputBean) o;
    return Objects.equals(this.application, jobsInputBean.application) &&
        Objects.equals(this.db, jobsInputBean.db) &&
        Objects.equals(this.jobtype, jobsInputBean.jobtype) &&
        Objects.equals(this.parameters, jobsInputBean.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(application, db, jobtype, parameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsInputBean {\n");
    sb.append("    application: ").append(toIndentedString(application)).append("\n");
    sb.append("    db: ").append(toIndentedString(db)).append("\n");
    sb.append("    jobtype: ").append(toIndentedString(jobtype)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

