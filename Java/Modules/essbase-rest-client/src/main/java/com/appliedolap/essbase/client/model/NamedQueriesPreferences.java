/*
 * sometitle
 * The REST API for Essbase provides an automation framework for managing Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.appliedolap.essbase.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NamedQueriesPreferences
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-23T11:48:17.898-07:00[America/Los_Angeles]")
public class NamedQueriesPreferences {
  public static final String SERIALIZED_NAME_DATALESS = "dataless";
  @SerializedName(SERIALIZED_NAME_DATALESS)
  private Boolean dataless;

  public static final String SERIALIZED_NAME_HIDE_RESTRICTED_DATA = "hideRestrictedData";
  @SerializedName(SERIALIZED_NAME_HIDE_RESTRICTED_DATA)
  private Boolean hideRestrictedData;

  public static final String SERIALIZED_NAME_CELL_ATTRIBUTES = "cellAttributes";
  @SerializedName(SERIALIZED_NAME_CELL_ATTRIBUTES)
  private Boolean cellAttributes;

  public static final String SERIALIZED_NAME_FORMAT_STRING = "formatString";
  @SerializedName(SERIALIZED_NAME_FORMAT_STRING)
  private Boolean formatString;

  public static final String SERIALIZED_NAME_FORMAT_VALUES = "formatValues";
  @SerializedName(SERIALIZED_NAME_FORMAT_VALUES)
  private Boolean formatValues;

  public static final String SERIALIZED_NAME_MEANINGLESS_CELLS = "meaninglessCells";
  @SerializedName(SERIALIZED_NAME_MEANINGLESS_CELLS)
  private Boolean meaninglessCells;

  public static final String SERIALIZED_NAME_TEXT_LIST = "textList";
  @SerializedName(SERIALIZED_NAME_TEXT_LIST)
  private Boolean textList;

  public static final String SERIALIZED_NAME_URL_DRILL_THROUGH = "urlDrillThrough";
  @SerializedName(SERIALIZED_NAME_URL_DRILL_THROUGH)
  private Boolean urlDrillThrough;

  /**
   * Gets or Sets memberIdentifierType
   */
  @JsonAdapter(MemberIdentifierTypeEnum.Adapter.class)
  public enum MemberIdentifierTypeEnum {
    NAME("NAME"),
    
    ALIAS("ALIAS"),
    
    UNIQUE_NAME("UNIQUE_NAME");

    private String value;

    MemberIdentifierTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MemberIdentifierTypeEnum fromValue(String value) {
      for (MemberIdentifierTypeEnum b : MemberIdentifierTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MemberIdentifierTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MemberIdentifierTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MemberIdentifierTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MemberIdentifierTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MEMBER_IDENTIFIER_TYPE = "memberIdentifierType";
  @SerializedName(SERIALIZED_NAME_MEMBER_IDENTIFIER_TYPE)
  private MemberIdentifierTypeEnum memberIdentifierType;


  public NamedQueriesPreferences dataless(Boolean dataless) {
    
    this.dataless = dataless;
    return this;
  }

   /**
   * Get dataless
   * @return dataless
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDataless() {
    return dataless;
  }


  public void setDataless(Boolean dataless) {
    this.dataless = dataless;
  }


  public NamedQueriesPreferences hideRestrictedData(Boolean hideRestrictedData) {
    
    this.hideRestrictedData = hideRestrictedData;
    return this;
  }

   /**
   * Get hideRestrictedData
   * @return hideRestrictedData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHideRestrictedData() {
    return hideRestrictedData;
  }


  public void setHideRestrictedData(Boolean hideRestrictedData) {
    this.hideRestrictedData = hideRestrictedData;
  }


  public NamedQueriesPreferences cellAttributes(Boolean cellAttributes) {
    
    this.cellAttributes = cellAttributes;
    return this;
  }

   /**
   * Get cellAttributes
   * @return cellAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCellAttributes() {
    return cellAttributes;
  }


  public void setCellAttributes(Boolean cellAttributes) {
    this.cellAttributes = cellAttributes;
  }


  public NamedQueriesPreferences formatString(Boolean formatString) {
    
    this.formatString = formatString;
    return this;
  }

   /**
   * Get formatString
   * @return formatString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFormatString() {
    return formatString;
  }


  public void setFormatString(Boolean formatString) {
    this.formatString = formatString;
  }


  public NamedQueriesPreferences formatValues(Boolean formatValues) {
    
    this.formatValues = formatValues;
    return this;
  }

   /**
   * Get formatValues
   * @return formatValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFormatValues() {
    return formatValues;
  }


  public void setFormatValues(Boolean formatValues) {
    this.formatValues = formatValues;
  }


  public NamedQueriesPreferences meaninglessCells(Boolean meaninglessCells) {
    
    this.meaninglessCells = meaninglessCells;
    return this;
  }

   /**
   * Get meaninglessCells
   * @return meaninglessCells
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMeaninglessCells() {
    return meaninglessCells;
  }


  public void setMeaninglessCells(Boolean meaninglessCells) {
    this.meaninglessCells = meaninglessCells;
  }


  public NamedQueriesPreferences textList(Boolean textList) {
    
    this.textList = textList;
    return this;
  }

   /**
   * Get textList
   * @return textList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTextList() {
    return textList;
  }


  public void setTextList(Boolean textList) {
    this.textList = textList;
  }


  public NamedQueriesPreferences urlDrillThrough(Boolean urlDrillThrough) {
    
    this.urlDrillThrough = urlDrillThrough;
    return this;
  }

   /**
   * Get urlDrillThrough
   * @return urlDrillThrough
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUrlDrillThrough() {
    return urlDrillThrough;
  }


  public void setUrlDrillThrough(Boolean urlDrillThrough) {
    this.urlDrillThrough = urlDrillThrough;
  }


  public NamedQueriesPreferences memberIdentifierType(MemberIdentifierTypeEnum memberIdentifierType) {
    
    this.memberIdentifierType = memberIdentifierType;
    return this;
  }

   /**
   * Get memberIdentifierType
   * @return memberIdentifierType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MemberIdentifierTypeEnum getMemberIdentifierType() {
    return memberIdentifierType;
  }


  public void setMemberIdentifierType(MemberIdentifierTypeEnum memberIdentifierType) {
    this.memberIdentifierType = memberIdentifierType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NamedQueriesPreferences namedQueriesPreferences = (NamedQueriesPreferences) o;
    return Objects.equals(this.dataless, namedQueriesPreferences.dataless) &&
        Objects.equals(this.hideRestrictedData, namedQueriesPreferences.hideRestrictedData) &&
        Objects.equals(this.cellAttributes, namedQueriesPreferences.cellAttributes) &&
        Objects.equals(this.formatString, namedQueriesPreferences.formatString) &&
        Objects.equals(this.formatValues, namedQueriesPreferences.formatValues) &&
        Objects.equals(this.meaninglessCells, namedQueriesPreferences.meaninglessCells) &&
        Objects.equals(this.textList, namedQueriesPreferences.textList) &&
        Objects.equals(this.urlDrillThrough, namedQueriesPreferences.urlDrillThrough) &&
        Objects.equals(this.memberIdentifierType, namedQueriesPreferences.memberIdentifierType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataless, hideRestrictedData, cellAttributes, formatString, formatValues, meaninglessCells, textList, urlDrillThrough, memberIdentifierType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NamedQueriesPreferences {\n");
    sb.append("    dataless: ").append(toIndentedString(dataless)).append("\n");
    sb.append("    hideRestrictedData: ").append(toIndentedString(hideRestrictedData)).append("\n");
    sb.append("    cellAttributes: ").append(toIndentedString(cellAttributes)).append("\n");
    sb.append("    formatString: ").append(toIndentedString(formatString)).append("\n");
    sb.append("    formatValues: ").append(toIndentedString(formatValues)).append("\n");
    sb.append("    meaninglessCells: ").append(toIndentedString(meaninglessCells)).append("\n");
    sb.append("    textList: ").append(toIndentedString(textList)).append("\n");
    sb.append("    urlDrillThrough: ").append(toIndentedString(urlDrillThrough)).append("\n");
    sb.append("    memberIdentifierType: ").append(toIndentedString(memberIdentifierType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

