openapi: 3.0.1
info:
  description: The REST API for Essbase provides an automation framework for managing
    Essbase resources and operations. All requests and responses are communicated
    over secured HTTP.
  title: sometitle
  version: "1.0"
servers:
- url: /essbase/rest/v1
tags:
- name: Roles
- name: Files
- name: Application Configuration
- name: Application Connections
- name: Global Connections
- name: Application Data Sources
- name: Global Data Sources
- name: Drill Through Reports
- name: Email
- name: Workbook Utilities
- name: Filters
- name: Groups
- name: Jobs
- name: Location aliases
- name: Locks
- name: Application logs
- name: About Essbase
- name: Applications
- name: Audit Trail
- name: Batch Outline Editing
- name: Database Size Statistics
- name: Dimensions
- name: URLs
- name: File Scanner
- name: User Session
- name: Templates and Utilities
- name: ASO Load buffers
- name: Grid Preferences
- name: Grid
- name: Performance Analyzer
- name: Layouts
- name: Execute MDX
- name: Named Queries
- name: Database Settings and Statistics
- name: Application Settings and Statistics
- name: Outline Viewer
- name: Partitions
- name: Preferences
- name: Properties
- name: Group Provisioning Report
- name: Application Role Provisioning
- name: Service Role Provisioning
- name: User Provisioning Report
- name: Rules
- name: Sandbox Dimension
- name: Scenarios
- name: Scripts
- name: Sessions
- name: Streaming Data Load
- name: Streaming Dimension Build
- name: Users
- name: Server Variables
- name: Variables
- name: Platform Service Settings
paths:
  /roles:
    get:
      description: <p>Returns the roles available in Essbase. Valid type values are
        <code>application</code> and <code>server</code>. If type is empty, then both
        <code>application</code> and <code>server</code> roles are returned.</p>
      operationId: Roles.getRoles
      parameters:
      - description: <p>Valid type values are <code>application</code> and <code>server</code>.</p>
        in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
            application/xml:
              schema:
                $ref: '#/components/schemas/Roles'
          description: <p><Strong>OK</strong><p>Returns roles for the specified type.</p>
      summary: Essbase Roles
      tags:
      - Roles
      x-accepts: application/json
  /files/actions/copy:
    post:
      description: Copy a file from source to destination.
      operationId: Files.copyResource
      parameters:
      - description: <p>Overwrite existing file.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
        description: <p>File path details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>File copied successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy File
      tags:
      - Files
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /files/{path}:
    delete:
      description: <p>Delete the file or folder specified in the path.</p>
      operationId: Files.deleteFile
      parameters:
      - description: Path of file/folder to delete
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The file or folder was
            removed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete File or Folder
      tags:
      - Files
      x-accepts: application/json
    get:
      description: <p>Returns a list of files, or downloads the specified file. To
        list files, use <code>Accept='application/json'</code> for the Accept header.
        To download, use <code>Accept='application/octet-stream'</code> for the Accept
        header.</p>
      operationId: Files.listFiles
      parameters:
      - description: <p>Catalog path. If listing files, this is the folder path. If
          downloading files, this is the file path.</p>
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Number of items to omit from the start of the result set.
          Default value is 0. Applicable only for listing files.</p>
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: <p>Maximum number of files to return. Applicable only for listing
          files.</p>
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: <p>List files by type. If type is not specified, returns all
          files. Applicable only for listing files.</p>
        in: query
        name: type
        schema:
          type: string
      - description: <p>If true, overwrite files. If false, any existing file is validated
          but not overwritten. Applicable only with query parameters  <code>action=validateUpload</code>
          and <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>
          . Default value is false.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      - description: <p>Validates the upload. Supported action values are <code>validateUpload</code>
          and <code>'Accept=application/json'</code> or <code>'Accept=application/xml'</code>.</p>
        in: query
        name: action
        schema:
          type: string
      - description: <p>Validates whether enough free space is available. Applicable
          only with query parameters <code>action='validateUpload'</code> and <code>Accept='application/json'</code>
          or <code>Accept='application/xml'</code>.</p>
        in: query
        name: fileSize
        schema:
          format: int64
          type: integer
      - description: <p>Filter the list of files.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Recursive param to get search result as recursive.</p>
        in: query
        name: recursive
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionResponse'
          description: <p><strong>OK</strong></p><p> Response type can be either JSON/XML
            or stream, depending on the Accept header. If <code>Accept=application/json</code>
            or <code>Accept=application/xml</code>, the response lists files and current
            folder details. If <code>Accept=application/octet-stream</code>, the response
            is returned as a stream. If query parameters include <code>action=validateUpload</code>
            and <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,
            the response is empty.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions, or the file may already exist when query
            parameters include <code>action=validateUpload</code> and <code>Accept='application/json'</code>
            or <code>Accept='application/xml'</code>.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List or Download Files
      tags:
      - Files
      x-accepts: application/json
    put:
      description: <p>Uploads a file to Essbase.</p><p>Supported file types include
        text files, rules files, calculation script files, and MaxL script files.</p>.
        <p>If there is no content type, and a folder name is specified in the URL,
        a folder is created.</p>
      operationId: Files.addFile
      parameters:
      - description: <p>Catalog path. If <code>Content-Type=application/octet-stream</code>,
          this is a file name. Otherwise, it is a folder name.</p>
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Applicable only for adding a file. Overwriting folders is
          not supported.</p>
        in: query
        name: overwrite
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericEntity'
          description: <p><strong>OK</strong></p><p>The file uploaded successfully
            (if Content-Type is <code>application/octet-stream</code>), or the folder
            was created successfully (if there is no Content-Type).
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions, or the file or folder may already exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Upload File or Create Folder
      tags:
      - Files
      x-accepts: application/json
  /files:
    get:
      description: <p>List catalog root folders.</p>
      operationId: Files.listRootFolders
      parameters:
      - description: <p>Filter the list of files.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Recursive param to get search result as recursive.</p>
        in: query
        name: recursive
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionResponse'
          description: <p><strong>OK</strong></p><p>Folder list.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Invalid path.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Root Folders
      tags:
      - Files
      x-accepts: application/json
  /files/homepath:
    get:
      description: <p>Get user home path.</p>
      operationId: Files.getUserHomePath
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>User home path.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Home Path
      tags:
      - Files
      x-accepts: application/json
  /files/sharedpath:
    get:
      description: <p>Get user shared path.</p>
      operationId: Files.getSharedPath
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>The shared path was returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Shared Path
      tags:
      - Files
      x-accepts: application/json
  /files/actions/move:
    post:
      description: <p>Either moves a file from source to destination, or renames a
        file or folder. Moving a folder is not supported. Renaming a folder is supported
        only if the folder is not in the applications directory.</p>
      operationId: Files.moveResource
      parameters:
      - description: <p>Overwrite existing file. Only applicable for moving or renaming
          a file.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
        description: <p>File path details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The file operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Move or Rename File
      tags:
      - Files
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /files/actions/extract:
    post:
      description: <p>Extract a zip file on same location. Applications, Users and
        Shared folders are supported to extract zip.</p>
      operationId: Files.extract
      parameters:
      - description: <p>Overwrite existing file. Not applicable for folder.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZipFileDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/ZipFileDetails'
        description: <p>Zip file path details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The file operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Contains an invalid special
            character.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Extract the zip file.
      tags:
      - Files
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/configurations/{configId}:
    delete:
      description: <p>Deletes the specified configuration property from the specified
        application.</p>
      operationId: ApplicationConfiguration.deleteConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Configuration property name.</p>
        in: path
        name: configId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The configuration was
            deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            configuration. The application name or configuration property is invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Application Configuration
      tags:
      - Application Configuration
      x-accepts: application/json
    get:
      description: <p>Returns configuration (based on configuration property name)
        from the specified application.</p>
      operationId: ApplicationConfiguration.getConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Configuration property name.</p>
        in: path
        name: configId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
          description: <p><strong>OK</strong></p><p>The configuration was retrieved
            successfully. Returns the configuration details and the links to get,
            edit, or delete the configuration.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the configuration
            information. The application name or configuration property is invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Configuration Property
      tags:
      - Application Configuration
      x-accepts: application/json
    put:
      description: <p>Updates the application configuration and returns the updated
        configuration details.</p>
      operationId: ApplicationConfiguration.setConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Configuration property name.</p>
        in: path
        name: configId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
        description: <p>Configuration property value entry.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
          description: <p><strong>OK</strong></p><p>The configuration was updated
            successfully. Returns the configuration details and the links to get,
            edit, or delete the configuration.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            configuration. The application name or configuration property is invalid,
            or the specified configuration property has not been added to the application.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Application Configuration
      tags:
      - Application Configuration
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/configurationkeys:
    get:
      description: <p>Returns all the configuration properties currently set for the
        specified application, with option to filter by configured value.</p>
      operationId: ApplicationConfiguration.getConfigurationKeys
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Filter key to refine the configuration property results.</p>
        in: query
        name: key
        schema:
          default: '*'
          type: string
      - description: <p>Specify <code>all</code> to return all configured properties.
          Specify <code>true</code> to return enabled configuration properties. Specify
          <code>false</code> to return configuration properties that are turned off.</p>
        in: query
        name: configured
        schema:
          default: all
          enum:
          - all
          - "true"
          - "false"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationConfigList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationConfigList'
                type: array
          description: <p><strong>OK</strong></p><p>The configuration properties were
            retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the configuration
            properties. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Configuration (Filtered)
      tags:
      - Application Configuration
      x-accepts: application/json
  /applications/{applicationName}/configurations:
    get:
      description: <p>Returns all the configuration properties currently set for the
        specified application.</p>
      operationId: ApplicationConfiguration.getConfigurations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationConfigList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationConfigList'
                type: array
          description: <p><strong>OK</strong></p><p>Configuration properties retrieved
            successfully. Returns all the configuration properties which are set for
            the application, and the links to get, edit, or delete each property.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the configuration
            properties. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Configuration
      tags:
      - Application Configuration
      x-accepts: application/json
    post:
      description: <p>Adds the configuration property to the application and returns
        the added configuration property name.</p>
      operationId: ApplicationConfiguration.addConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
        description: <p>Configuration property entry.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
          description: <p><strong>OK</strong></p><p>Configuration property added successfully.
            Returns the configuration details and the links to get, edit, or delete
            the configuration.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add the configuration
            property. The application name or the configuration property JSON could
            be incorrect, or the configuration property might already have been added
            to the application.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Application Configuration
      tags:
      - Application Configuration
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: <p>Updates the application configurations and returns the updated
        configuration details.</p>
      operationId: ApplicationConfiguration.setConfigurations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ApplicationConfigEntry'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ApplicationConfigEntry'
              type: array
        description: <p>Configuration property value entries.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigList'
          description: <p><strong>OK</strong></p><p>Configurations were updated successfully.
            Returns the configuration details and the links to get, edit, or delete
            the configurations.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            configurations. The application name or configuration entries is invalid,
            or the given configuration property has not been added to the application.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Updates Application Configurations
      tags:
      - Application Configuration
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/connections/{connectionName}/actions/test:
    post:
      description: <p>Tests the saved application-level connection with the specified
        name.</p>
      operationId: ApplicationConnections.testConnectionExisting
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Saved connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Error occurred
            while testing connection.</p>
      summary: Test Saved Application Connection
      tags:
      - Application Connections
      x-accepts: application/json
  /applications/{applicationName}/connections/actions/test:
    post:
      description: <p>Tests a new or updated application connection, using specified
        inputs, without saving it.</p>
      operationId: ApplicationConnections.testConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Error occurred
            while testing connection.</p>
      summary: Test New Application Connection
      tags:
      - Application Connections
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/connections/{connectionName}:
    delete:
      description: <p>Delete a saved application connection by name.</p>
      operationId: ApplicationConnections.deleteConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The connection was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to delete
            connection.</p>
      summary: Delete Application Connection
      tags:
      - Application Connections
      x-accepts: application/json
    get:
      description: <p>Returns details about the specified application-level connection.</p>
      operationId: ApplicationConnections.getConnectionDetails
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>If set to true, the encrypted password is returned in the
          result.</p>
        in: query
        name: password
        schema:
          type: boolean
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            connection details.</p>
      summary: Get Application Connection
      tags:
      - Application Connections
      x-accepts: application/json
    put:
      description: <p>Update the named application connection. If successful, returns
        details of the updated connection. <code>type</code> is a required input for
        all connections. Other required inputs differ, depending on the type of the
        connection.</p>
      operationId: ApplicationConnections.updateConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to update
            connection.</p>
      summary: Update Application Connection
      tags:
      - Application Connections
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/connections:
    get:
      description: <p>Returns a list of connections for the application, including
        details such as name, description, and type.</p>
      operationId: ApplicationConnections.getConnections
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Number of connections to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of connections to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
          description: <p><strong>OK</strong></p><p>List of connections returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to list
            connections.</p>
      summary: List Application Connections
      tags:
      - Application Connections
      x-accepts: application/json
    post:
      description: <p>Creates an application-level connection based on specified inputs.
        <code>name</code> and <code>type</code> are required inputs for all types
        of connections. Other required inputs differ based on the type of the connection.</p>
      operationId: ApplicationConnections.createConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Connection created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to create
            connection.</p>
      summary: Create Application Connection
      tags:
      - Application Connections
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/connections/{connectionName}/wallet:
    put:
      description: Upload a connection wallet file.
      operationId: ApplicationConnections.wallets
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletLocation'
            application/xml:
              schema:
                $ref: '#/components/schemas/WalletLocation'
          description: <p><strong>OK</strong></p><p>Return the wallet file location
            in catalog.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Unable to process
            wallet file.</p>
      summary: Upload a connection wallet file
      tags:
      - Application Connections
      x-accepts: application/json
  /connections/{connectionName}/actions/test:
    post:
      description: <p>Tests a saved global connection by name.</p>
      operationId: GlobalConnections.testConnectionExisting
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Error occurred
            while testing connection.</p>
      summary: Test Saved Connection
      tags:
      - Global Connections
      x-accepts: application/json
  /connections/actions/test:
    post:
      description: <p>Tests a new or updated global connection, using specified inputs,
        without saving it.</p>
      operationId: GlobalConnections.testConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Error occurred
            while testing connection.</p>
      summary: Test New Connection
      tags:
      - Global Connections
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /connections/{connectionName}:
    delete:
      description: <p>Deletes a named global connection.</p>
      operationId: GlobalConnections.deleteConnection
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The connection was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            connection.</p>
      summary: Delete Connection
      tags:
      - Global Connections
      x-accepts: application/json
    get:
      description: <p>Returns details about the specified global connection.</p>
      operationId: GlobalConnections.getConnectionDetails
      parameters:
      - description: <p>If set to true, the encrypted password is returned in the
          result.</p>
        in: query
        name: password
        schema:
          type: boolean
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            connection details.</p>
      summary: Get Connection
      tags:
      - Global Connections
      x-accepts: application/json
    put:
      description: <p>Update the named global connection. If the update is successful,
        returns details about the updated connection. <code>type</code> is a required
        input for all types of connections. Other required inputs differ based on
        the type of the connection.</p>
      operationId: GlobalConnections.updateConnection
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to update
            connection.</p>
      summary: Update Connection
      tags:
      - Global Connections
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /connections:
    get:
      description: <p>Returns global connections list, including details such as name,
        description, and type.</p>
      operationId: GlobalConnections.getConnections
      parameters:
      - description: <p>Number of connections to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of connections to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
          description: <p><strong>OK</strong></p><p>List of connections returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to list
            connections.</p>
      summary: List Connections
      tags:
      - Global Connections
      x-accepts: application/json
    post:
      description: <p>Creates a connection based on specified inputs. <code>name</code>
        and <code>type</code> are required inputs for all types of connections. Other
        required inputs differ based on the type of connection.</p>
      operationId: GlobalConnections.createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Connection created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to create
            connection.</p>
      summary: Create Connection
      tags:
      - Global Connections
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /connections/{connectionName}/wallet:
    put:
      description: Upload a connection wallet file
      operationId: GlobalConnections.wallets
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletLocation'
            application/xml:
              schema:
                $ref: '#/components/schemas/WalletLocation'
          description: <p><strong>OK</strong></p><p>Return the wallet file location
            in catalog.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Unable to process
            wallet file.</p>
      summary: Upload a connection wallet file
      tags:
      - Global Connections
      x-accepts: application/json
  /applications/{applicationName}/datasources:
    get:
      description: <p>Returns a list of application-level data sources, including
        details such as name, description, connection, and type.</p>
      operationId: ApplicationDatasources.getDatasources
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Number of data sources to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of data sources to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
          description: <p><strong>OK</strong></p><p>List of data sources returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            data sources.</p>
      summary: Get Application Data Sources
      tags:
      - Application Data Sources
      x-accepts: application/json
    post:
      description: <p>Creates an application-level data source based on specified
        inputs. <code>name</code>, <code>connection</code>, and <code>type</code>
        are required inputs for all types of data sources. Other required inputs differ
        based on the type of data source.</p>
      operationId: ApplicationDatasources.createDatasource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Data source details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Data source created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to create
            data source.</p>
      summary: Create Application Data Source
      tags:
      - Application Data Sources
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/datasources/{datasouceName}:
    get:
      description: <p>Returns details about the specified application-level data source.</p>
      operationId: ApplicationDatasources.getDatasourceDetails
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Data source name</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Data source details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            data source details.</p>
      summary: Get Application Data Source
      tags:
      - Application Data Sources
      x-accepts: application/json
    put:
      description: <p>Update the named application-level data source. If the update
        is successful, returns details about the updated data source. <code>type</code>
        and <code>connection</code> are required inputs for all types of data sources.
        Other required inputs differ based on the type of the data source.</p>
      operationId: ApplicationDatasources.updateDatasource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Data source name.</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Updated data source details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Data source was updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to update
            the data source.</p>
      summary: Update Application Data Source
      tags:
      - Application Data Sources
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/datasources/{datasourceName}:
    delete:
      description: <p>Deletes the named application-level data source.</p>
      operationId: ApplicationDatasources.deleteDatasource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Data source name.</p>
        in: path
        name: datasourceName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Data source was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to delete
            data source.</p>
      summary: Delete Application Data Source
      tags:
      - Application Data Sources
      x-accepts: application/json
  /applications/{applicationName}/datasources/query/stream:
    post:
      description: <p>Returns results in stream from a application-level data source</p>
      operationId: ApplicationDatasources.getDataStream
      parameters:
      - description: <p>Include headers.</p>
        in: query
        name: includeHeaders
        schema:
          default: false
          type: boolean
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to stream
            results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Data Source Results
      tags:
      - Application Data Sources
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /datasources:
    get:
      description: <p>Returns a list of global-level data sources, including details
        such as name, description, connection, and type.</p>
      operationId: GlobalDatasources.getDatasources
      parameters:
      - description: <p>Number of data sources to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of data sources to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
          description: <p><strong>OK</strong></p><p>List of data sources returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            data sources.</p>
      summary: Get Global Data Sources
      tags:
      - Global Data Sources
      x-accepts: application/json
    post:
      description: <p>Creates a global-level data source based on specified inputs.
        <code>name</code>, <code>connection</code>, and <code>type</code> are required
        inputs for all types of data sources. Other required inputs differ based on
        the type of data source.</p>
      operationId: GlobalDatasources.createDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Data source details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Data source created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to create
            data source.</p>
      summary: Create Global Data Source
      tags:
      - Global Data Sources
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /datasources/{datasouceName}:
    get:
      description: <p>Returns details about the specified global data source.</p>
      operationId: GlobalDatasources.getDatasourceDetails
      parameters:
      - description: <p>Data source name.</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Data source details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            data source details.</p>
      summary: Get Global Data Source
      tags:
      - Global Data Sources
      x-accepts: application/json
    put:
      description: <p>Update the named global-level data source. If the update is
        successful, returns details about the updated data source. <code>type</code>
        and <code>connection</code> are required inputs for all types of data sources.
        Other required inputs differ based on the type of the data source.</p>
      operationId: GlobalDatasources.updateDatasource
      parameters:
      - description: <p>Data source name.</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Updated data source details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Data source was updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to update
            the data source.</p>
      summary: Update Global Data Source
      tags:
      - Global Data Sources
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /datasources/{datasourceName}:
    delete:
      description: <p>Deletes the named global-level data source.</p>
      operationId: GlobalDatasources.deleteDatasource
      parameters:
      - description: <p>Data source name.</p>
        in: path
        name: datasourceName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Data source was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to delete
            data source.</p>
      summary: Delete Global Data Source
      tags:
      - Global Data Sources
      x-accepts: application/json
  /datasources/query/stream:
    post:
      description: <p>Returns results in stream from a global-level data source.</p>
      operationId: GlobalDatasources.getDataStream
      parameters:
      - description: <p>Include headers.</p>
        in: query
        name: includeHeaders
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to stream
            results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Data Source Results
      tags:
      - Global Data Sources
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /datasources/query/data/{streamId}:
    get:
      description: <p>Returns results from a global-level data source associated with
        the specified stream id.</p>
      operationId: GlobalDatasources.getData
      parameters:
      - description: <p>Stream id.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to stream
            results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Data Source Results
      tags:
      - Global Data Sources
      x-accepts: application/json
  /datasources/query:
    post:
      description: <p>Returns column headers of the data source, and a link to fetch
        the streamed results in CSV (comma-separated) or TSV (tab-separated) formats.</p>
      operationId: GlobalDatasources.getResults
      parameters:
      - description: <p>Number of records to return. If not passed, all records are
          returned.</p>
        in: query
        name: pageSize
        schema:
          default: -1
          format: int32
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultBean'
          description: <p><strong>OK</strong></p><p>Streaming information returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            streaming information.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Stream Data Source Results
      tags:
      - Global Data Sources
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/reports:
    get:
      description: <p>Returns all the drill through reports from the specified application
        and database.</p>
      operationId: DrillThroughReports.getReports
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReportList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ReportList'
                type: array
          description: <p><strong>OK</strong></p><p>The drill through reports were
            retrieved successfully. Returns the links to get, edit, or delete the
            reports.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the drill
            through reports. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Drill Through Reports
      tags:
      - Drill Through Reports
      x-accepts: application/json
    post:
      description: <p>Creates a drill through report in the specified application
        and database, and returns details about the report.</p>
      operationId: DrillThroughReports.create
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
        description: <p>Drill through report details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
          description: <p><strong>OK</strong></p><p>The drill through report was created
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create the
            drill through report. The application or database name may be incorrect,
            or the report may already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Drill Through Report
      tags:
      - Drill Through Reports
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/reports/{name}:
    delete:
      description: <p>Deletes the specified drill through report from the specified
        application and database.</p>
      operationId: DrillThroughReports.delete
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drill through report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The drill through report
            was deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            drill through report. The report name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Drill Through Report
      tags:
      - Drill Through Reports
      x-accepts: application/json
    get:
      description: <p>Returns the specified drill through report from the specified
        application and database.<p>
      operationId: DrillThroughReports.getReport
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drill through report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
          description: <p><strong>OK</strong></p><p>The drill through report was retrieved
            successfully. Returns the links to get, edit, or delete the report.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the report.
            The application name, database name, or report name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Drill Through Report
      tags:
      - Drill Through Reports
      x-accepts: application/json
    put:
      description: <p>Updates the drill through report in the specified application
        and database, and returns details of the updated report.</p>
      operationId: DrillThroughReports.updateReport
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drill through report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
        description: <p>Drill through report details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
          description: <p><strong>OK</strong></p><p>The drill through report was updated
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            report. The application name, database name, or report name may be incorrect,
            or the specified report name may not exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Drill Through Reoprt
      tags:
      - Drill Through Reports
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /email/smtp:
    delete:
      description: <p>Deletes the SMTP server configuration details. SMTP is the protocol
        Essbase uses to send e-mails related to scenario management workflow and approval.</p>
      operationId: Email.deleteSMTPDetails
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The e-mail configuration
            was deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete SMTP Configuration
      tags:
      - Email
      x-accepts: application/json
    get:
      description: <p>Returns SMTP server configuration details. SMTP is the protocol
        Essbase uses for sending e-mails related to scenario management workflow and
        approval.</p>
      operationId: Email.getSMTPServerDetail
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The e-mail configuration
            is not present.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get SMTP Configuration
      tags:
      - Email
      x-accepts: application/json
    put:
      description: <p>Configure SMTP e-mail server information. SMTP is the protocol
        Essbase uses for sending e-mails related to scenario management workflow and
        approval.</p>
      operationId: Email.addSMTPDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
        description: <p>SMTP server configuration details. Provide the host name,
          port, user e-mail address, and encoded password.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was updated
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add SMTP Configuration
      tags:
      - Email
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /email/imap:
    delete:
      description: <p>Deletes the IMAP server configuration details. IMAP is the protocol
        used for receiving e-mails related to scenario management workflow and approval.</p>
      operationId: Email.deleteIMAPDetails
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The e-mail configuration
            was deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete IMAP Configuration
      tags:
      - Email
      x-accepts: application/json
    get:
      description: <p>Returns IMAP server configuration details. IMAP is the protocol
        used for receiving e-mails related to scenario management workflow and approval.</p>
      operationId: Email.getIMAPServerDetail
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The e-mail configuration
            is not present.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get IMAP Configuration
      tags:
      - Email
      x-accepts: application/json
    put:
      description: <p>Configure IMAP e-mail server information. IMAP is the protocol
        used for receiving e-mails related to scenario management workflow and approval.</p>
      operationId: Email.addIMAPDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
        description: <p>IMAP server configuration details. Provide the host name,
          port, user e-mail address, and encoded password.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was updated
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add IMAP Configuration
      tags:
      - Email
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /email:
    get:
      description: <p>Returns a URL to access the saved SMTP and IMAP server details.
        SMTP is the protocol Essbase uses for sending e-mails related to scenario
        management. IMAP is the protocol for receiving e-mails.</p>
      operationId: Email.getEmailLinks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get E-mail Configuration
      tags:
      - Email
      x-accepts: application/json
  /excel/utils/dataformat:
    get:
      description: '<p>Returns details about the application workbook: application
        name, cube name, and whether the workbook''s format is structured or unstructured
        (tabular).</p>'
      operationId: ExcelUtilities.analyzeDataFormat
      parameters:
      - description: <p>Catalog path of the workbook file.</p>
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The workbook information was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the workbook
            details. The file path may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Workbook Format
      tags:
      - Workbook Utilities
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters:
    get:
      description: <p>Returns all the filters from the specified application and database.</p>
      operationId: Filters.listFilters
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/FilterList'
                type: array
          description: <p><strong>OK</strong></p><p>Filters were retrieved successfully.
            Returns filter details and links to get, edit, or delete the filters,
            and to get the filter rows.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get filters.
            The application name or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filters
      tags:
      - Filters
      x-accepts: application/json
    post:
      description: <p>Creates the filter in the specified application and database
        and returns the created filter</p>
      operationId: Filters.createFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterBean'
        description: <p>Filter details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: <p><strong>OK</strong></p><p>Filter was created successfully.
            Returns filter details and links to get, edit, or delete the filter, and
            to get the filter rows.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create filter.
            The application name or database name may be incorrect, or the filter
            may already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/filterops/copy:
    post:
      description: <p>Copies a filter in the specified application and database and
        returns the new filter.</p>
      operationId: Filters.copyFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterCopy'
        description: Filter copy details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: <p><strong>OK</strong></p><p>The filter was copied successfully.
            Returns filter details and links to get, edit, or delete the filter, and
            to get the filter rows.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to copy the filter.
            The application name, database name, or filter name may be incorrect,
            or a filter with the specified name already exists.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}:
    delete:
      description: <p>Deletes the named filter in the specified application and database.</p>
      operationId: Filters.deleteFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The filter was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            filter. The application name, database name, or filter name may be incorrect,
            or the named filter may not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Filter
      tags:
      - Filters
      x-accepts: application/json
    get:
      description: <p>Returns the named filter from the specified application and
        database.<p>
      operationId: Filters.getFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: <p><strong>OK</strong></p><p>The filter was retrieved successfully,
            with links to get, edit, or delete the filter, and to get the filter rows.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the filter.
            The application name, database name, or filter name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filter
      tags:
      - Filters
      x-accepts: application/json
    put:
      description: <p>Updates the named filter in the specified application and database,
        and returns the updated filter.</p>
      operationId: Filters.editFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterBean'
        description: <p>Filter details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: <p><strong>OK</strong></p><p>The filter was updated successfully,
            with links to get, edit, or delete the filter, and to get the filter rows.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            filter. The application name, database name, or filter name may be incorrect,
            or the named filter may not exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}/permissions:
    get:
      description: <p>Retrieves permissions associated with the named filter.</p>
      operationId: Filters.getFilterPermissions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
          description: <p><strong>OK</strong></p><p>The filter permissions were retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the filter
            permissions. The application name, database name, or filter name may be
            incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Permissions
      tags:
      - Filters
      x-accepts: application/json
    post:
      description: <p>Adds permissions, in the named filter, for the named user or
        group.</p>
      operationId: Filters.addFilterPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: <p>User or group details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>The filter permissions were added
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add the filter
            permissions. The application name, database name, filter name, or user
            or group name may be incorrect, or the specified user or group may not
            have enough privileges.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Permissions
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: <p>Replaces all the users and groups assigned to the filter with
        a new list of users and groups.</p>
      operationId: Filters.replaceFilterPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfoList'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfoList'
        description: <p>User or group details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>The filter permissions were edited
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to modify the
            filter permissions. The application name, database name, filter name,
            or user or group name may be incorrect, or the specified user or group
            may not have enough privileges.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Edit Permissions
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}/permissions/{userGroupId}:
    delete:
      description: <p>Removes permissions from a filter for the specified user or
        group.</p>
      operationId: Filters.removeFilterPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      - description: <p>True if the userGroupId refers to a group; false if it refers
          to a user.</p>
        in: query
        name: group
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The permission was removed
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to remove permission
            from the filter. An input parameter may have been specified incorrectly.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Permission
      tags:
      - Filters
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/filterops/rename:
    post:
      description: Renames the filter in the specified application and database and
        returns the created filter
      operationId: Filters.renameFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterCopy'
        description: <p>Filter rename details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: <p><strong>OK</strong></p><p>Filter was renamed successfully.
            Returns filter details and links to get, edit, or delete the filter, and
            to get the filter rows.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to rename filter.
            The application name or database name may be incorrect, or a filter with
            that name may already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/filterops/validate:
    post:
      description: <p>Validates the filter in the specified application and database.</p>
      operationId: Filters.validateFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterBean'
        description: <p>Filter details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The filter was validated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to validate the
            filter. The application name or database name may be incorrect, or the
            filter rows may be incomplete.
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Validate Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}/rows:
    get:
      description: <p>Returns the access definition rows from the specified filter.</p>
      operationId: Filters.getFilterRows
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterRowList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterRowList'
          description: <p><strong>OK</strong></p><p>Filter rows were retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get filter
            rows. The application name, database name, or filter name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filter Rows
      tags:
      - Filters
      x-accepts: application/json
  /groups/{id}/members/groups:
    get:
      description: Get group members of a group
      operationId: Groups.getGroupMembersOfGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
            application/xml:
              schema:
                $ref: '#/components/schemas/Groups'
          description: Returns list of group members of a group
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get groups of group
      tags:
      - Groups
      x-accepts: application/json
    post:
      description: Add multiple group members to a group
      operationId: Groups.addGroupMembersToGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: <p>Array of group ID</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully. Returns
            link to get group members of a group</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add groups to group
      tags:
      - Groups
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /groups/{id}/members/users:
    get:
      description: Get user members of a group
      operationId: Groups.getUserMembersOfGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
            application/xml:
              schema:
                $ref: '#/components/schemas/Users'
          description: Returns list of user members of a group
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get users of group
      tags:
      - Groups
      x-accepts: application/json
    post:
      description: Add multiple user members to a group
      operationId: Groups.addUserMembersToGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: <p>Array of user ID</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully. Returns
            link to get user members of a group</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add users to group
      tags:
      - Groups
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /groups/actions/delete:
    post:
      description: Delete the groups specified in the text file
      operationId: Users.deleteGroups
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: OK
        "400":
          content: {}
          description: Validation fails. For example, logged in user doesn't have
            appropriate service role
        "500":
          content: {}
          description: Internal server error.
      summary: Delete the groups specified in the text file
      tags:
      - Groups
      x-accepts: application/octet-stream
  /groups/{id}:
    delete:
      description: Delete a group.
      operationId: Groups.delete
      parameters:
      - description: ID of group.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>No Content</strong></p><p>Group deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Group
      tags:
      - Groups
      x-accepts: application/json
    get:
      description: <p>Get group details.</p>
      operationId: Groups.get
      parameters:
      - description: <p>Group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupBean'
          description: <p>Group details</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Group
      tags:
      - Groups
      x-accepts: application/json
    put:
      description: Update a group.
      operationId: Groups.edit
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupBean'
        description: <p>Group details to update.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Group
      tags:
      - Groups
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /groups:
    get:
      description: <p>Get a list of groups based on search results, or export groups
        as CSV file.</p>
      operationId: Groups.search
      parameters:
      - description: <p>Group ID wildcard pattern. Filter by name of groups if header
          <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Maximum number of groups to return, if header <code>Accept='application/json'</code>
          or <code>Accept='application/xml'</code>.</p>
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>all</code>, meaning service role and parent groups are returned
          for each group. If <code>none</code> is specified, service role and parent
          groups are not returned.</p>
        in: query
        name: expand
        schema:
          default: all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
            application/xml:
              schema:
                $ref: '#/components/schemas/Groups'
          description: <p><strong>OK</strong></p><p>List of groups matching search
            criteria. Response type can be either JSON, XML, or CSV stream, depending
            on the Accept header. If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,
            the search result is returned in the response. If <code>Accept='application/octet-stream'</code>,
            search result is returned as stream (not shown due to a Swagger limitation).</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search or Export Groups
      tags:
      - Groups
      x-accepts: application/json
    post:
      description: Add/Import group(s)
      operationId: Groups.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupBean'
        description: Group details to add group if header Content-Type='application/json'
          or 'application/xml' else CSV file to import group(s) if header Content-Type='application/octet-stream'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupBean'
          description: Group added successfully. If Content-Type='application/json'
            or 'application/xml', then result will be returned in group added successfully
            as shown below else in case of Content-Type='application/octet-stream',
            result will be returned as group imported successfully, which is not shown
            due to a Swagger limitation.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add or Import Group(s)
      tags:
      - Groups
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /groups/{id}/members:
    get:
      description: List links to get user and group members of a group
      operationId: Groups.getMembers
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: Return links to get user and group members of a group
      summary: Group members
      tags:
      - Groups
      x-accepts: application/json
  /jobs/{id}:
    get:
      description: Returns the job information for job ID passed. Informations like
        job status, job type, job input info, job output info are returned
      operationId: Jobs.getJobInfo
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
          description: Returns complete job information for the job id specified.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Get Job
      tags:
      - Jobs
      x-accepts: application/json
    post:
      description: Rerun the job and returns the job information with new job ID currently
        executing
      operationId: Jobs.executeByJobId
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
          description: Returns the information for newly created Job ID
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception. Job ID is incorrect or invalid.</p>
      summary: Rerun Job
      tags:
      - Jobs
      x-accepts: application/json
  /jobs:
    get:
      description: Returns the list of jobs for the query parameters provided. Informations
        like job status, job type, job input info, job output info are returned
      operationId: Jobs.getAllJobRecords
      parameters:
      - description: keyword to filter job records on ID, Script, database or user
        in: query
        name: keyword
        schema:
          type: string
      - description: application name for which job records to retrieved
        in: query
        name: fullAppName
        schema:
          type: string
      - description: Order By
        in: query
        name: orderBy
        schema:
          default: job_ID:desc
          type: string
      - description: <p>Number of jobs to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: <p>Maximum number of jobs to fetch. Default is 20.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: <p>Include backup jobs in jobs records.</p>
        in: query
        name: systemjobs
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordPaginatedResultWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobRecordPaginatedResultWrapper'
          description: <p>Returns the job records for specified query parameter provided.
            If no query parameter is specified, returns a list of all the jobs.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Get Job List
      tags:
      - Jobs
      x-accepts: application/json
    post:
      description: <p>Execute the job and return the record containing job information,
        such as job ID, status, inputs, and output information for the current job.</p>
      operationId: Jobs.executeJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsInputBean'
        description: parameter provided as json string in the request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
          description: Request for job exceution submitted successfully and job started
            successfully. Returns job information in response.
        "400":
          content: {}
          description: 1. Application does not exits. If the 'application' parameter
            value is wrong.<p>2. Database does not exist. If 'db' parameter value
            is wrong.</p><p>3. NULL argument (3) passed to ESSAPI function EssGetObjectInfo</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Execute Job
      tags:
      - Jobs
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /jobs/statistics/{userId}:
    get:
      description: Returns the jobs statistics with the userid (logged in). Informations
        like below <p>1. no of error jobs.</p><p>2. no of successful jobs.</p><p>3.
        no of jobs with warnings.</p><p>4. no of running jobs</p>
      operationId: Jobs.getJobStatistics
      parameters:
      - description: User Id of the logged in user
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatisticsBean'
          description: Returns jobs statistics.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: Naming Exception or Server Exception
      summary: Get Job Statistics
      tags:
      - Jobs
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locationaliases:
    get:
      description: Get location alias details
      operationId: LocationAliases.getLocationAliases
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Number of location aliases to be returned
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Location alias target server name
        in: query
        name: serverName
        schema:
          type: string
      - description: Location alias target application name
        in: query
        name: applicationName
        schema:
          type: string
      - description: Location alias target database name
        in: query
        name: databaseName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAliasList'
            application/xml:
              schema:
                $ref: '#/components/schemas/LocationAliasList'
          description: Returns location alias details successfully
        "400":
          content: {}
          description: Failed to get location alias details
        "500":
          content: {}
          description: Internal server error
      summary: Get location alias details
      tags:
      - Location aliases
      x-accepts: application/json
    post:
      description: Creates new location alias in the given application and database
      operationId: LocationAliases.create
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
        description: Location alias details
        required: true
      responses:
        "204":
          content: {}
          description: Location alias created successfully
        "400":
          content: {}
          description: Failed to create location alias
        "500":
          content: {}
          description: Internal server error
      summary: Create location alias
      tags:
      - Location aliases
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locationaliases/{aliasName}:
    delete:
      description: Deletes the location alias with the given name from the application
        and database
      operationId: LocationAliases.delete
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Location alias name
        in: path
        name: aliasName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Deleted location alias successfully
        "400":
          content: {}
          description: Failed to delete location alias
        "500":
          content: {}
          description: Internal server error
      summary: Deletes location alias
      tags:
      - Location aliases
      x-accepts: application/json
    get:
      description: Returns the details of the given location alias name
      operationId: LocationAliases.getLocationAlias
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Location alias name
        in: path
        name: aliasName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAliasBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/LocationAliasBean'
          description: Returns location alias details successfully
        "400":
          content: {}
          description: Failed to get location alias details
        "500":
          content: {}
          description: Internal server error
      summary: Get location alias details
      tags:
      - Location aliases
      x-accepts: application/json
    patch:
      description: Updates location alias with new application and database. Not suupported
        when location alias is defined across essbase instances
      operationId: LocationAliases.update
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Location alias name
        in: path
        name: aliasName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
        description: Location alias details
        required: true
      responses:
        "204":
          content: {}
          description: Updated location alias successfully
        "400":
          content: {}
          description: Failed to update location alias
        "500":
          content: {}
          description: Internal server error
      summary: Update location alias
      tags:
      - Location aliases
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locks/objects:
    get:
      description: Returns all the locked objects from the specified application and
        database.
      operationId: Locks.getLockedObjects
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Number of items to omit from the start of the result set.
          Default value is 0.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of objects to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LockObjectList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LockObjectList'
                type: array
          description: Locked objects retrieved successfully. Gives the details of
            locked objects along with the links to lock/unlock the object
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the locked
            objects. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Locked Objects
      tags:
      - Locks
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locks:
    get:
      description: Returns links for locked objects and locked blocks from the specified
        application and database.
      operationId: Locks.getLocks
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/LockObject'
          description: <p>Locks listed successfully, including links to unlock.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Locks
      tags:
      - Locks
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locks/objects/unlock:
    post:
      description: Unlocks the object in the specified application and database
      operationId: Locks.unLockObject
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockObject'
        description: <p>Details about object to be unlocked.</p>
        required: true
      responses:
        "204":
          content: {}
          description: Object unlocked successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to unlock the
            object. The application, database, or object name may be incorrect, or
            the object type may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Unlock Object
      tags:
      - Locks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locks/blocks:
    get:
      description: Returns all the locked blocks from the specified application and
        database.
      operationId: Locks.getLockedBlocks
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Number of items to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: Maximum number of blocks to return. Default is 50.
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LockBlockList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LockBlockList'
                type: array
          description: <p>Locked blocks returned successfully, including details of
            locked blocks and links to unlock the objects.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the locked
            blocks. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Locked Blocks
      tags:
      - Locks
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locks/blocks/unlock:
    post:
      description: Unlocks the locked block in the specified application and database.
      operationId: Locks.unLockBlock
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockBlock'
        description: Block details to be unlocked
        required: true
      responses:
        "204":
          content: {}
          description: Block is unlocked successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the settings.
            The application or database name may be incorrect, or the JSON for the
            username in the block details may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Unlock Block
      tags:
      - Locks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/locks/objects/lock:
    post:
      description: Locks the object in the specified application and database and
        returns the details of the locked object
      operationId: Locks.lockObject
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockObject'
        description: Object details to be locked
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockObject'
          description: Object is locked successfully. Gives the details of locked
            object along with the links to lock/unlock the object
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to lock the object.
            The application, database, or object name may be incorrect, or the object
            type may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Lock Object
      tags:
      - Locks
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/logs/all:
    get:
      description: Returns or download zip file which contains all log files for the
        specific application
      operationId: ApplicationLogs.downloadAllLogFiles
      parameters:
      - description: Name of the application
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Logs returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return logs.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Download All Logs
      tags:
      - Application logs
      x-accepts: application/json
  /applications/{applicationName}/logs/latest:
    get:
      description: <p>Downloads the latest application log file as a text file.</p>
      operationId: ApplicationLogs.downloadLatestLogFile
      parameters:
      - description: <p>Name of the application.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Log file returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return log
            file.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Download Latest Log
      tags:
      - Application logs
      x-accepts: application/json
  /applications/{applicationName}/logs:
    get:
      description: <p>Returns links to download all log files as a zip file, and to
        download the latest log file.</p>
      operationId: ApplicationLogs.downloadAppLogFiles
      parameters:
      - description: <p>Name of the application.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
            application/xml:
              schema:
                $ref: '#/components/schemas/Link'
          description: <p><strong>OK</strong></p><p>List of URI links returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return downloadable
            log files.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Download Logs
      tags:
      - Application logs
      x-accepts: application/json
  /about:
    get:
      description: <p>Returns description, build, and version of Essbase.</p>
      operationId: About.getAbout
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About'
            application/xml:
              schema:
                $ref: '#/components/schemas/About'
          description: successful operation
      summary: About Essbase
      tags:
      - About Essbase
      x-accepts: application/json
  /about/instance:
    get:
      operationId: getInstanceDetails
      responses:
        default:
          content: {}
          description: successful operation
      tags:
      - About Essbase
      x-accepts: application/json
  /applications/actions/copy:
    post:
      description: Copies application. User need to provide source and destination
        application name.
      operationId: Applications.copyApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
        description: Source and destination application information
        required: true
      responses:
        "200":
          content: {}
          description: Application copied successfully.
        "400":
          content: {}
          description: Failed to copy application.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Application
      tags:
      - Applications
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/actions/copy:
    post:
      description: Copies database. User need to provide source and destination application
        and database name.
      operationId: Applications.copyDatabase
      parameters:
      - description: Source application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CubeCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CubeCopy'
        description: Source and destination database information
        required: true
      responses:
        "200":
          content: {}
          description: Database copied successfully.
        "400":
          content: {}
          description: Failed to copy database.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Database
      tags:
      - Applications
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/actions/rename:
    post:
      description: Renames application. User need to provide source and destination
        application name.
      operationId: Applications.renameApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
        description: Source and destination application information
        required: true
      responses:
        "200":
          content: {}
          description: Application renamed successfully.
        "400":
          content: {}
          description: Fails to rename application.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename application
      tags:
      - Applications
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/actions/rename:
    post:
      description: Renames database. User need to provide source and destination database
        name. Destination application name is not required
      operationId: Applications.renameDatabase
      parameters:
      - description: Source application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
        description: Source and destination database information
        required: true
      responses:
        "200":
          content: {}
          description: Database renamed successfully.
        "400":
          content: {}
          description: Fails to rename database.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename database
      tags:
      - Applications
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/calculationFunctions:
    get:
      description: Return list of common and database specific calculation functions
      operationId: Databases.getCalculationFunctions
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Return XML or JSON string containing list of calculation functions
        "500":
          content: {}
          description: Internal server error.
      summary: Get Calculation Functions
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/mdxFunctions:
    get:
      description: Return list of MDX functions
      operationId: Databases.getMdxFunctions
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Return XML or JSON string containing list of MDX functions
        "500":
          content: {}
          description: Internal server error.
      summary: Get MDX Functions
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}:
    delete:
      description: Delete database with specified name.
      operationId: Applications.deleteDatabase
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p>Database deleted successfully.</p>
        "400":
          content: {}
          description: <p>Failed to delete database.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Database
      tags:
      - Applications
      x-accepts: application/json
    get:
      description: Returns details of database with specified database name and application
        name.
      operationId: Applications.getCube
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cube'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cube'
          description: Returns database details.
        "400":
          content: {}
          description: Failed to get database.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database
      tags:
      - Applications
      x-accepts: application/json
    put:
      description: Performs specified action on specified application and database.
        Valid actions are 'Start' and 'Stop'
      operationId: Applications.performDbOperation
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Action
        in: query
        name: action
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Action performed successfully.
        "400":
          content: {}
          description: Failed to perform action.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start or Stop Database
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/databases:
    get:
      description: Returns the list of databases. Connection name and application
        name to list databases are optional parameters.  If user provides connection,
        connection created at specified application will be used to fetch databases.
      operationId: Applications.getCubes
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: query
        name: connectionName
        schema:
          type: string
      - description: Application name to list databases
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CubeList'
            application/xml:
              schema:
                $ref: '#/components/schemas/CubeList'
          description: Returns databases list.
        "400":
          content: {}
          description: Failed to get databases.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Databases
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}:
    delete:
      description: Delete application with specified name.
      operationId: Applications.deleteApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p>Application deleted successfully.</p>
        "400":
          content: {}
          description: <p>Failed to delete application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Application
      tags:
      - Applications
      x-accepts: application/json
    get:
      description: Returns details of application with specified name.
      operationId: Applications.getApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Role.</p>
        in: query
        name: role
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application'
          description: Returns application details.
        "400":
          content: {}
          description: Failed to get application.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application
      tags:
      - Applications
      x-accepts: application/json
    put:
      description: Performs specified action on specified application. Valid actions
        are 'Start' and 'Stop'
      operationId: Applications.performOperation
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Action
        in: query
        name: action
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Action performed successfully.
        "400":
          content: {}
          description: Failed to perform action.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start or Stop Application
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/provisionReport:
    get:
      description: Gets provisioning report at specified application for all the users
        and groups having at least one application role(direct/inherited through groups)
      operationId: Applications.getApplicationProvisionReport
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Provisioning report as excel stream  at specified application
            for all the users and groups having at least one application role(direct/inherited
            through groups). Logged in user should have at least 'Database Manager'
            role for specified application to invoke this API. Application roles will
            be included only when logged in user has 'Application Manager' role for
            specified application.
        "400":
          content: {}
          description: Validation fails. For example, logged in user doesn't have
            appropriate application role
        "500":
          content: {}
          description: Internal server error
      summary: Application Provisioning Report
      tags:
      - Applications
      x-accepts: application/json
  /applications:
    get:
      description: '<p>Returns the list of Essbase applications. Connection name and  application
        name for connection are optional parameters.</p> <p>If you provide only a
        connection name with no application name, this API fetches all applications
        using that named connection.</p> <p>If you provide a connection name and application
        name, this API fetches the specified applications using the specified connection.</p>
        <p>Use the <code>fields</code> parameter to return only required fields.</p>
        <p>Limitation: If application status is required in response, limit must be
        <= 100.</p>'
      operationId: Applications.getApplications
      parameters:
      - in: query
        name: filter
        schema:
          default: '*'
          type: string
      - description: <p>Number of applications to omit from the start of the result
          set. Default value is 0.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of applications to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      - description: <p>Connection name.</p>
        in: query
        name: connectionName
        schema:
          type: string
      - description: Application name for connection
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      - description: Comma separated list of fields to be returned in response fields.
          This query parameter is used to specify what fields should be returned.
          If not field is provided, it will return all fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: 'Returns applications list. '
        "400":
          content: {}
          description: Failed to get applications.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Applications
      tags:
      - Applications
      x-accepts: application/json
    post:
      description: Create application with specified details.
      operationId: Applications.createApplications
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateApplication'
        description: Application details
        required: true
      responses:
        "200":
          content: {}
          description: Application created successfully.
        "400":
          content: {}
          description: Failed to create application.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Application
      tags:
      - Applications
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/formulaFunctions:
    get:
      description: Return list of MDX functions for ASO cube and Calculation functions
        for BSO cube
      operationId: Databases.formulaFunctions
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Return XML or JSON string containing list of MDX functions
            or Calculation functions
        "500":
          content: {}
          description: Internal server error.
      summary: Get functions list for formula editor
      tags:
      - Applications
      x-accepts: application/json
  /applications/actions/tree:
    get:
      description: Get the list of applications and databases in a tree view
      operationId: Applications.getApplicationsTree
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: OK, Success
        "500":
          content: {}
          description: Internal Server Error
      summary: Get the list of applications and databases in a tree view
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/aliases/setActiveAlias:
    put:
      description: <p>Returns alias tables associated with the specified application
        and database.</p>
      operationId: Applications.setAliases
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - in: query
        name: aliasTableName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
          description: Returns aliases.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Aliases
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/aliases/getActiveAlias:
    get:
      description: <p>Returns alias tables associated with the specified application
        and database.</p>
      operationId: Applications.getActiveAlias
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: Returns aliases.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Aliases
      tags:
      - Applications
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/aliases:
    get:
      description: <p>Returns alias tables associated with the specified application
        and database.</p>
      operationId: Applications.getAliases
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
          description: Returns aliases.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Aliases
      tags:
      - Applications
      x-accepts: application/json
  /applications/{application}/databases/{database}/audittrail/data:
    delete:
      description: <p>Deletes audit trail data older than the specified time.</p>
      operationId: AuditTrail.purge
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Time in milliseconds.</p>
        in: query
        name: olderthan
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Audit data deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to delete
            audit data.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Audit Data
      tags:
      - Audit Trail
      x-accepts: application/json
    get:
      description: <p>Returns audit trail data in CSV string format if <code>Accept='text/csv'</code>
        or <code>Accept='text/plain'</code>. If <code>Accept='application/octet-stream'</code>,
        returns audit data as a CSV stream to download. If <code>Accept='application/json'</code>,
        returns the audit data list in JSON format.<p>
      operationId: AuditTrail.getDataAudit
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Audit trail data returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to return
            audit data.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Audit Data
      tags:
      - Audit Trail
      x-accepts: text/csv,text/plain
  /applications/{application}/databases/{database}/audittrail/metadata:
    delete:
      description: <p>Deletes audit trail metadata older than the specified time.</p>
      operationId: AuditTrail.purgeMetadataAudit
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Time in milliseconds.</p>
        in: query
        name: olderthan
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Audit metadata deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to delete
            audit metadata.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Audit Metadata
      tags:
      - Audit Trail
      x-accepts: application/json
    get:
      description: <p>Returns audit metadata in CSV string format if <code>Accept='text/csv'</code>
        or <code>Accept='text/plain'</code>. If <code>Accept='application/octet-stream'</code>,
        returns audit metadata as a CSV stream to download. If <code>Accept='application/json'</code>,
        returns the audit metadata list in JSON format.</p>
      operationId: AuditTrail.getMetadataAudit
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Audit trail metadata returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to return
            audit metadata.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Audit Metadata
      tags:
      - Audit Trail
      x-accepts: text/csv,text/plain
  /applications/{application}/databases/{database}/boe:
    post:
      description: <p>Executes batch outline editing process. Based on the XML or
        JSON body, adds or removes members from the outline in the active cube.</p>
      operationId: BatchOutlineEditing.execute
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtlEditMain'
          application/xml:
            schema:
              $ref: '#/components/schemas/OtlEditMain'
        description: Batch outline JSON/XML
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BOEOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/BOEOutput'
          description: <p><strong>OK</strong></p><p>The batch outline edit completed
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to complete batch
            outline editing. The output may be invalid, the sequence of metadata operations
            may be incorrect, or saving the outline may have failed.</p>
      summary: Run Batch Outline Edit
      tags:
      - Batch Outline Editing
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /databasesizestatistics:
    get:
      description: <p>Returns a list of databases and their page and index sizes.</p>
      operationId: DatabaseSizeStatistics.getDBSizes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSizeList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DBSizeList'
          description: <p><strong>OK</strong></p><p>Database size statistics returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get database
            size statistics.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database Size Statistics
      tags:
      - Database Size Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimensions:
    get:
      description: Returns all the dimensions from the specified application and database
      operationId: Dimensions.listDimensions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DimensionList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/DimensionList'
                type: array
          description: Dimensions are retrieved successfully. Gives the dimension
            details along with the links to get the generations and levels of each
            dimension
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the dimensions.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Dimensions
      tags:
      - Dimensions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/generations:
    get:
      description: Returns all the generations of a dimension from the specified application
        and database
      operationId: Dimensions.listDimGenerations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenerationLevelList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/GenerationLevelList'
                type: array
          description: Generations are retrieved successfully. Gives all generation
            details of a dimension along with the links to get/edit each generation
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the generations.
            The application, database, or dimension name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Generations
      tags:
      - Dimensions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/levels:
    get:
      description: Returns all the levels of a dimension from the specified application
        and database
      operationId: Dimensions.listDimLevels
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GenerationLevelList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/GenerationLevelList'
                type: array
          description: Levels are retrieved successfully. Gives all level details
            of a dimension along with the links to get/edit each level
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the levels.
            The application, database, or dimension name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Levels
      tags:
      - Dimensions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/generations/{generationNumber}:
    get:
      description: <p>Returns generation details of a dimension, based on the specified
        generation number, application, and database.</p>
      operationId: Dimensions.getDimGenerations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Generation number.</p>
        in: path
        name: generationNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: <p><strong>OK</strong></p><p>Generation details returned successfully,
            including links to get or edit the generation.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get generation.
            The application name, database name, dimension name, or generation number
            may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Generation
      tags:
      - Dimensions
      x-accepts: application/json
    put:
      description: <p>Updates and returns generation details of a dimension, based
        on the specified generation number, application, and database.</p>
      operationId: Dimensions.editDimGenerations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Generation number.</p>
        in: path
        name: generationNumber
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GenerationLevel'
        description: <p>Generation details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: <p><strong>OK</strong></p><p>Generation details updated successfully,
            including links to get or edit the generation.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            generation. The application name, database name, dimension name, or generation
            number may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Generation
      tags:
      - Dimensions
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/levels/{levelNumber}:
    get:
      description: <p>Returns level details of a dimension, based on the specified
        level number, application, and database.</p>
      operationId: Dimensions.getDimLevels
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Level number.</p>
        in: path
        name: levelNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: <p><strong>OK</strong></p><p>Level details returned successfully,
            including links to get or edit the level.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get level.
            The application name, database name, dimension name, or level number may
            be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Level
      tags:
      - Dimensions
      x-accepts: application/json
    put:
      description: <p>Updates and returns level details of a dimension, based on the
        specified level number, application, and database.</p>
      operationId: Dimensions.editDimLevels
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Level number.</p>
        in: path
        name: levelNumber
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GenerationLevel'
        description: <p>Level details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: <p><strong>OK</strong></p><p>Level details updated successfully,
            including links to get or edit the level.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            level. The application name, database name, dimension name, or level  number
            may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Level
      tags:
      - Dimensions
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /urls:
    get:
      description: Returns the list of available Essbase URLs
      operationId: URLs.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preference'
            application/xml:
              schema:
                $ref: '#/components/schemas/Preference'
          description: successful operation
      summary: Get Essbase URLs
      tags:
      - URLs
      x-accepts: application/json
  /filescanner/actions/validate:
    post:
      description: Validate the antivirus details
      operationId: FileScanner.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
        description: Anti virus details
        required: true
      responses:
        "200":
          content: {}
          description: Successful operation
        "400":
          content: {}
          description: Failed to validate the antivirus details
      summary: Validate Antivirus
      tags:
      - File Scanner
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /filescanner:
    delete:
      description: Removes the antivirus details for scanning files
      operationId: FileScanner.delete
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
          description: Successful operation
        "400":
          content: {}
          description: Failed to detete the antivirus details
      summary: Delete Antivirus
      tags:
      - File Scanner
      x-accepts: application/json
    get:
      description: Returns the current antivirus details
      operationId: FileScanner.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
          description: Successful operation
        "400":
          content: {}
          description: Failed to get the antivirus details
      summary: Get Antivirus
      tags:
      - File Scanner
      x-accepts: application/json
    put:
      description: Set the antivirus details for scanning files
      operationId: FileScanner.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
        description: Antivirus details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
          description: Successful operation
        "400":
          content: {}
          description: Failed to set the antivirus details
      summary: Set Antivirus
      tags:
      - File Scanner
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /session/password:
    put:
      description: Reset the password.
      operationId: UserSession.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResetPasswordBean'
        description: Reset password details.
        required: true
      responses:
        "200":
          content: {}
          description: Reset password is successful.
        "400":
          content: {}
          description: Reset password failed.
      summary: Reset Password.
      tags:
      - User Session
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /session:
    delete:
      description: Deactivates current session.
      operationId: UserSession.signoff
      responses:
        "200":
          content: {}
          description: Session deactivation is successful.
        "400":
          content: {}
          description: Session deactivation Failed.
      summary: Logout Session
      tags:
      - User Session
      x-accepts: application/json
    get:
      description: Returns logged in user information.
      operationId: UserSession.getSession
      parameters:
      - in: query
        name: token
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: Returns logged in user information.
        "400":
          content: {}
          description: Fails to get user information.
      summary: Get Session
      tags:
      - User Session
      x-accepts: application/json
  /utilities:
    get:
      description: 'Returns available utilities. For example: Export Utility, Smart
        View for Essbase.'
      operationId: Resources.getUtilities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResourceList'
          description: Returns available utilities.
        "400":
          content: {}
          description: Failed to get utilities.
      summary: List Utilities
      tags:
      - Templates and Utilities
      x-accepts: application/json
  /utilities/{id}:
    get:
      description: Returns utility with specified id as stream.
      operationId: Resources.downloadUtility
      parameters:
      - description: ID of the utility
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Utility with specified id found.
        "400":
          content: {}
          description: Failed to download utility with specified id.
      summary: Download Utility
      tags:
      - Templates and Utilities
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/asodataload/buffers:
    get:
      description: <p>Lists existing load buffers. This would return an error when
        called on a BSO database.</p>
      operationId: ASOLoadBuffers.listBuffers
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBuffersList'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoadBuffersList'
          description: 'Returns load buffers list. '
        "400":
          content: {}
          description: Failed to get load buffers.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Buffers
      tags:
      - ASO Load buffers
      x-accepts: application/json
    post:
      description: <p>Creates ASO load buffer with specified options.</p>
      operationId: ASOLoadBuffers.createBuffer
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLoadBuffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DataLoadBuffer'
        required: false
      responses:
        "200":
          content: {}
          description: 'Load buffer created successfully. '
        "400":
          content: {}
          description: Failed to create load buffer.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create buffer
      tags:
      - ASO Load buffers
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/asodataload/actions/merge:
    post:
      description: <p>Merges ASO database data. Merges incremental slices with the
        main slice.</p>
      operationId: ASOLoadBuffers.merge
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeSilceOption'
          application/xml:
            schema:
              $ref: '#/components/schemas/MergeSilceOption'
        required: false
      responses:
        "200":
          content: {}
          description: 'Data merged created successfully. '
        "400":
          content: {}
          description: Failed to merge data.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: ' Merges ASO database data.'
      tags:
      - ASO Load buffers
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /preferences/grid:
    get:
      description: Api returns the grid preference from session.
      operationId: GridPreferences.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
            application/xml:
              schema:
                $ref: '#/components/schemas/Preferences'
          description: Grid Preferences
        "400":
          content: {}
          description: Validation failed. For example, Invalid session.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Grid Preferences
      tags:
      - Grid Preferences
      x-accepts: application/json
    put:
      description: Api store the preferences in current session.
      operationId: GridPreferences.set
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Preferences'
        description: Preference to be store
        required: true
      responses:
        "200":
          content: {}
          description: ok
        "400":
          content: {}
          description: Validation failed. For example, Invalid session.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Set Grid Preferences
      tags:
      - Grid Preferences
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/grid/mdx:
    post:
      description: Returns an output grid from the specified MDX query.
      operationId: Grid.executeMDX
      parameters:
      - description: Application name for grid.
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database/Cube name for grid.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MDXOperation'
        description: MDX query for grid
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Resultant Grid
        "400":
          content: {}
          description: Validation failed. For example, database name not present or
            applicaion name not present.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute MDX Query
      tags:
      - Grid
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/grid/layout:
    post:
      description: Returns the layout grid for the current grid to be saved as layout
        for the specified cube.
      operationId: Grid.getLayoutGrid
      parameters:
      - description: Application name for default grid
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database/Cube name for default grid
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Grid'
        description: The current grid displayed
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Layout Grid
        "400":
          content: {}
          description: Validation failed. For example, database name not present or
            applicaion name not present.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Layout Grid
      tags:
      - Grid
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dvgrid:
    post:
      description: <p>Returns the grid for specified operation. Supported grid operations
        are Zoom In (zoomin), Zoom Out (zoomout), Refresh (refresh), Keep Only (keeponly),
        Remove Only (removeonly), Submit (submit), Pivot (pivot), and Pivot To POV
        (pivotToPOV).</p>
      operationId: Grid.executeDV
      parameters:
      - description: Application name for grid
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database/Cube name for grid
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DVGrid'
        description: Grid Operation to be performed.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Resultant Grid
        "400":
          content: {}
          description: Validation failed. For example, database name not present or
            applicaion name not present.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Grid Operation
      tags:
      - Grid
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/grid/layout/{layout}:
    get:
      description: Returns the grid for the specified layout.
      operationId: Grid.executeLayout
      parameters:
      - description: Application name for layout grid
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database/Cube name for layout grid
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Layout name to be executed
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: Owner of the layout
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Layout Grid
        "400":
          content: {}
          description: Validation failed. For example, database name not present or
            applicaion name not present.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Layout Grid
      tags:
      - Grid
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/grid:
    get:
      description: Returns the default grid from Essbase for the specified cube.
      operationId: Grid.getDefault
      parameters:
      - description: Application name for default grid
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database/Cube name for default grid
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Default Grid
        "400":
          content: {}
          description: Validation failed. For example, database name not present or
            applicaion name not present.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Default Grid
      tags:
      - Grid
      x-accepts: application/json
    post:
      description: <p>Returns the grid for specified operation. Supported grid operations
        are Zoom In (zoomin), Zoom Out (zoomout), Refresh (refresh), Keep Only (keeponly),
        Remove Only (removeonly), Submit (submit), Pivot (pivot), and Pivot To POV
        (pivotToPOV).</p>
      operationId: Grid.execute
      parameters:
      - description: Application name for grid
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database/Cube name for grid
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GridOperation'
        description: Grid Operation to be performed.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Resultant Grid
        "400":
          content: {}
          description: Validation failed. For example, database name not present or
            applicaion name not present.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Grid Operation
      tags:
      - Grid
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /performance/settings:
    get:
      description: Get the performance analyzer settings
      operationId: Performance.getConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPA'
            application/xml:
              schema:
                $ref: '#/components/schemas/HPA'
          description: OK
        "400":
          content: {}
          description: Bad Request. Failed to return performacne analyzer settings.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Get the performance analyzer settings
      tags:
      - Performance Analyzer
      x-accepts: application/json
    put:
      description: Set the performance analyzer settings
      operationId: Performance.setConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HPA'
        description: Config parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPA'
            application/xml:
              schema:
                $ref: '#/components/schemas/HPA'
          description: OK
        "400":
          content: {}
          description: Bad Request. Failed to store performacne analyzer settings.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Set the performance analyzer settings
      tags:
      - Performance Analyzer
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /performance/files:
    delete:
      description: Delete all the performance analyzer files.
      operationId: Performance.deleteall
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputStream'
            application/xml:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: OK
        "400":
          content: {}
          description: Bad Request. Failed to delete performance analyzer files.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Delete all the performance analyzer files.
      tags:
      - Performance Analyzer
      x-accepts: application/json
    get:
      description: Get the performance analyzer files
      operationId: Performance.getFiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceFiles'
            application/xml:
              schema:
                $ref: '#/components/schemas/PerformanceFiles'
          description: OK
        "400":
          content: {}
          description: Bad Request. Failed to get the performacne analyzer files.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Get the performance analyzer files
      tags:
      - Performance Analyzer
      x-accepts: application/json
  /performance/files/{file}:
    get:
      description: Get the specified performance analyzer file.
      operationId: Performance.download
      parameters:
      - description: File
        in: path
        name: file
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
            text/html:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: OK
        "400":
          content: {}
          description: Bad Request. Failed to store performance analyzer file.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Get the specified performance analyzer file.
      tags:
      - Performance Analyzer
      x-accepts: application/octet-stream,text/html
  /performance/files/actions/download:
    get:
      description: Get all the performance analyzer files as a compressed file.
      operationId: Performance.download2
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
            text/html:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: OK
        "400":
          content: {}
          description: Bad Request. Failed to get performance analyzer files.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Get all the performance analyzer files as a compressed file.
      tags:
      - Performance Analyzer
      x-accepts: application/octet-stream,text/html
  /applications/{application}/databases/{database}/layouts/{layout}/actions/markDefault:
    post:
      description: Mark layout as user default or database default
      operationId: markDefaultLayout
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Layout Name
        in: path
        name: layout
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultLayoutBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/DefaultLayoutBean'
        description: User default or database default details
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout marked as default successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>OK</strong></p><p>Failed to mark layout as user
            default or database default.</p><p><strong>OK</strong></p>
      summary: Mark layout as default
      tags:
      - Layouts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{application}/databases/{database}/layouts:
    get:
      description: List the available layouts. For admin user, list all the layouts
        including the ones created by normal users
      operationId: getLayouts
      parameters:
      - description: Application name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: database
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layouts'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layouts'
          description: <p><strong>OK</strong></p><p>List of layouts returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            layouts.</p>
      summary: List Layouts
      tags:
      - Layouts
      x-accepts: application/json
    post:
      description: Save the layout for specified cube
      operationId: saveLayout
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layout'
          application/xml:
            schema:
              $ref: '#/components/schemas/Layout'
        description: Grid to be saved as layout
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout saved successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>OK</strong></p><p>Failed to save layout.</p><p><strong>OK</strong></p>
      summary: Save layout
      tags:
      - Layouts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{application}/databases/{database}/layouts/{layout}:
    delete:
      description: Deletes the layout in specified cube
      operationId: deleteLayout
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Layout Name
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: User
        in: query
        name: user
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Layout deleted successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>OK</strong></p><p>Failed to delete layout.</p><p><strong>OK</strong></p>
      summary: Delete layout
      tags:
      - Layouts
      x-accepts: application/json
    get:
      description: Get the details for the specified layout
      operationId: getLayoutDetails
      parameters:
      - description: Application name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Layout name
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: User
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout details returned successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            layout details.</p>
      summary: Get layout details
      tags:
      - Layouts
      x-accepts: application/json
    put:
      description: Update the layout with provided details in spcified cube
      operationId: editLayout
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Layout Name
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: User
        in: query
        name: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layout'
          application/xml:
            schema:
              $ref: '#/components/schemas/Layout'
        description: layout details to be updated
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout updated successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>OK</strong></p><p>Failed to update layout.</p><p><strong>OK</strong></p>
      summary: Update layout
      tags:
      - Layouts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{application}/databases/{database}/mdx:
    post:
      description: Gets the mdx response in various formats like JSON,HTML,EXCEL and
        CSV
      operationId: MDX.executeMDX
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Cube Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Result Format
        in: query
        name: format
        schema:
          default: JSON
          enum:
          - XLSX
          - CSV
          - HTML
          - JSON
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MDXInput'
        description: Query and Preferences
        required: false
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
            text/html:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: Mostly OK. As this is streaming api, it may fail with 200 as
            well. Check for errorMessage tag in the response for any errros
        "400":
          content: {}
          description: Bad Request. Failed to get the data in required format.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Gets the mdx response in various formats.
      tags:
      - Execute MDX
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/octet-stream,text/html
  /applications/{application}/databases/{database}/mdx/{name}:
    get:
      description: GGets the named mdx result in various formats. like JSON,HTML,EXCEL
        and CSV
      operationId: MDX.executenq
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Cube Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Result Format
        in: query
        name: format
        schema:
          default: JSON
          enum:
          - XLSX
          - CSV
          - HTML
          - JSON
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: Mostly OK. As this is streaming api, it may fail with 200 as
            well. Check for errorMessage tag in the response for any errros
        "400":
          content: {}
          description: Bad Request. Failed to get the data in required format.
        "500":
          content: {}
          description: Internal Server Error.
      summary: Gets the named mdx result in various formats.
      tags:
      - Execute MDX
      x-accepts: application/octet-stream
  /applications/{application}/databases/{database}/queries:
    get:
      description: List all the saved named queries for specified cube.
      operationId: getNamedQueries
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queries'
            application/xml:
              schema:
                $ref: '#/components/schemas/Queries'
          description: <p><strong>OK</strong></p><p>List of named queries returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            named queries.</p>
      summary: List Named Queries
      tags:
      - Named Queries
      x-accepts: application/json
    post:
      description: Save named query for the specified cube
      operationId: saveNamedQuery
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedQuery'
          application/xml:
            schema:
              $ref: '#/components/schemas/NamedQuery'
        description: Details of query to be saved
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/NamedQuery'
          description: <p><strong>OK</strong></p><p>Named query saved successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>OK</strong></p><p>Failed to save named query.</p><p><strong>OK</strong></p>
      summary: Save named query
      tags:
      - Named Queries
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{application}/databases/{database}/queries/{query}:
    delete:
      description: Delete the named query for specified cube
      operationId: deleteNamedQuery
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Query Name
        in: path
        name: query
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Named query deleted successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to delete
            named query.</p>
      summary: Delete named query
      tags:
      - Named Queries
      x-accepts: application/json
    get:
      description: Get the details for the specified named query
      operationId: getNamedQueryDetails
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Query Name
        in: path
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/NamedQuery'
          description: <p><strong>OK</strong></p><p>Named query details returned successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to get
            named query details.</p>
      summary: Get named query details
      tags:
      - Named Queries
      x-accepts: application/json
    put:
      description: Update the named query for specified cube
      operationId: editNamedQuery
      parameters:
      - description: Application Name
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Database Name
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: Query Name
        in: path
        name: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/xml:
            schema:
              $ref: '#/components/schemas/Query'
        description: Details of query to be updated
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/NamedQuery'
          description: <p><strong>OK</strong></p><p>Named query updated successfully.</p><p><strong>OK</strong></p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to update
            named query.</p>
      summary: Update named query
      tags:
      - Named Queries
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings:
    get:
      description: <p>Returns general settings of the specified database. Additional
        settings can be retrieved using the <code>expand</code>  parameter.</p>
      operationId: DatabaseSettingsStatistics.getSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: '<p>Use <code>none</code> to show only general settings (this
          is the default). Other options available: <code>startup</code>, <code>calculation</code>,
          <code>buffers</code>, <code>caches</code>, <code>transactions</code>, <code>compression</code>,
          and <code>all</code>.</p>'
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - startup
          - calculation
          - buffers
          - caches
          - transactions
          - compression
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingsList'
          description: <p><strong>OK</strong></p><p>General database settings returned
            successfully, with links to get expanded settings.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get database
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get General Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
    patch:
      description: Updates the settings of the specified database.
      operationId: DatabaseSettingsStatistics.updateSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
        description: <p>Database settings patch list.</p>
        required: true
      responses:
        "204":
          content: {}
          description: Settings updated successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            settings. The application or database name may be incorrect, or the JSON
            for the settings may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Settings
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/startup:
    get:
      description: <p>Returns startup settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getStartupSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/StartupSettings'
          description: <p><strong>OK</strong></p><p>Startup settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong><p>Failed to return the startup
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Startup Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/statistics/storage:
    get:
      description: Returns storage statistics of the specified database
      operationId: DatabaseSettingsStatistics.getStorageStats
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/StorageStatistics'
          description: Storage statistics are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the storage
            statistics. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Storage Statistics
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/statistics/runtime:
    get:
      description: Returns runtime statistics of the specified database
      operationId: DatabaseSettingsStatistics.getRuntimeStats
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/RuntimeStatistics'
          description: Runtime statistics are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the runtime
            statistics. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Runtime Statistics
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/calculation:
    get:
      description: Returns calculation settings of the specified database
      operationId: DatabaseSettingsStatistics.getCalculationSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/CalculationSettings'
          description: Calculation settings are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the calculation
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Calculation Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/buffers:
    get:
      description: Returns buffer settings of the specified database
      operationId: DatabaseSettingsStatistics.getBuffersSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BufferSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/BufferSettings'
          description: Buffer settings are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the buffer
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Buffer Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/compression:
    get:
      description: Returns compression settings of the specified database
      operationId: DatabaseSettingsStatistics.getCompressSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompressionSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompressionSettings'
          description: Compression settings are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the compression
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Compression Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/caches:
    get:
      description: Returns cache settings of the specified database
      operationId: DatabaseSettingsStatistics.getCachesSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/CacheSettings'
          description: <p><strong>OK</strong></p><p>Cache settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the cache
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Cache Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/transactions:
    get:
      description: Returns transaction settings of the specified database
      operationId: DatabaseSettingsStatistics.getTransSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/TransactionSettings'
          description: Transaction settings are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the transaction
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Transaction Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/outline/attributes:
    get:
      description: Returns attribute settings of the outline from specified database
      operationId: DatabaseSettingsStatistics.getOutlineAttributesSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeOutlineSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AttributeOutlineSettings'
          description: Attribute settings are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the attribute
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Attribute Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/outline:
    get:
      description: <p>Returns outline settings of the specified database. Additional
        settings can be retrieved using the <code>expand</code> parameter.</p>
      operationId: DatabaseSettingsStatistics.getOutlineSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Use <code>none</code> to show only general outline settings
          (this is the default). Other options available are  <code>attribute</code>
          and <code>all</code>.
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - attributes
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineSettingsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OutlineSettingsList'
          description: <p><strong>OK</strong></p><p>Database outline settings returned
            successfully, with links to get expanded settings.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the settings.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Outline Settings
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
    patch:
      description: Updates the outline settings of the specified database
      operationId: DatabaseSettingsStatistics.updateOutlineSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
        description: Outline settings patch list
        required: true
      responses:
        "204":
          content: {}
          description: Outline settings updated successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            settings. The application or database name may be incorrect, or the JSON
            for the settings may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Outline Settings
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/outline/dateformats:
    get:
      description: Returns date formats of the outline from specified database
      operationId: DatabaseSettingsStatistics.getOutlineSettingsDateFormats
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineDateFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/OutlineDateFormat'
          description: Date formats are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the date
            formats. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Date Formats
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/querytracking/export:
    post:
      description: Export query data from an aggregate storage database to a text
        file. To do this operation query tracking must be enabled for given aggregate
        storage database.
      operationId: DatabaseSettingsStatistics.exportQueryData
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/QueryTrackingInputs'
        description: File Name
        required: true
      responses:
        "200":
          content: {}
          description: Query data exported successfully.
        "400":
          content: {}
          description: Fails to export query data.
        "500":
          content: {}
          description: Internal server error.
      summary: Export Query Tracking
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/settings/querytracking/import:
    post:
      description: Import query data, which was previously exported from an aggregate
        storage database to a text file, to an aggregate storage database. To do this
        operation query tracking must be enabled for given aggregate storage database.
      operationId: DatabaseSettingsStatistics.importQueryData
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/QueryTrackingInputs'
        description: File Name
        required: true
      responses:
        "200":
          content: {}
          description: Query data imported successfully.
        "400":
          content: {}
          description: Fails to import query data.
        "500":
          content: {}
          description: Internal server error.
      summary: Import Query Tracking
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/statistics:
    get:
      description: <p>Returns general statistics of the specified database. Additional
        statistics can be retrieved using the <code>expand</code>  parameter.</p>
      operationId: DatabaseSettingsStatistics.getStatistics
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: '<p>Use <code>none</code> to show only general statistics (this
          is the default). Other options available: <code>storage</code>, <code>runtime</code>,
          and <code>all</code>.'
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - storage
          - runtime
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatisticsList'
          description: <p><strong>OK</strong></p><p>General database statistics returned
            successfully, with links to get expanded statistics.</p>
        "400":
          content: {}
          description: <p>Failed to get the statistics. The application or database
            name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get General Statistics
      tags:
      - Database Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/settings:
    get:
      description: Returns general settings of the specified application. Additional
        settings can be retrieved using the <code>expand</code> parameter.
      operationId: ApplicationSettingsStatistics.getSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: '<p>Use <code>none</code> to show only general settings (this
          is the default). Other options available: <code>startup</code>, <code>security</code>,
          and <code>all</code>.</p>'
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - startup
          - security
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSettingsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppSettingsList'
          description: <p><strong>OK</strong></p><p>General application settings returned
            successfully, with links to get expanded settings and to edit settings.</p>
        "400":
          content: {}
          description: <p>Failed to get the settings. The application name may be
            incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application General Settings
      tags:
      - Application Settings and Statistics
      x-accepts: application/json
    patch:
      description: Updates the settings of the specified application.
      operationId: ApplicationSettingsStatistics.updateSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
        description: Application settings patch list
        required: true
      responses:
        "204":
          content: {}
          description: Settings are updated successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            settings. The application name may be incorrect, or the JSON for the settings
            may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Application Settings
      tags:
      - Application Settings and Statistics
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/settings/startup:
    get:
      description: Returns all the startup settings of the specified application.
      operationId: ApplicationSettingsStatistics.getStartupSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStartupSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppStartupSettings'
          description: Startup settings retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the startup
            settings. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Startup Settings
      tags:
      - Application Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/settings/security:
    get:
      description: Returns the security settings of the specified application.
      operationId: ApplicationSettingsStatistics.getSecuritySettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSecuritySettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppSecuritySettings'
          description: Security settings are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the security
            settings. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Security Settings
      tags:
      - Application Settings and Statistics
      x-accepts: application/json
  /applications/{applicationName}/statistics:
    get:
      description: Returns the statistics of the specified application.
      operationId: ApplicationSettingsStatistics.getStatistics
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationStatistics'
          description: Statistics are retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the statistics.
            The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Statistics
      tags:
      - Application Settings and Statistics
      x-accepts: application/json
  /outline/{app}/{cube}/xml:
    post:
      description: Export the outline to XML. If tree is true then aliasTable will
        be ignored. Tree mode exports only member names. If aliasTable is provided
        then only alias values of the members for specified alias table will be exported
      operationId: Outline.getOutlineXML
      parameters:
      - in: path
        name: app
        required: true
        schema:
          type: string
      - in: path
        name: cube
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExportOptions'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      summary: Export the outline to XML.
      tags:
      - Outline Viewer
      x-codegen-request-body-name: body
      x-contentType: '*/*'
      x-accepts: application/json
  /outline/{app}/{cube}/descendantsCount/{memberUniqueName}:
    get:
      description: Returns descendants count for the requested member
      operationId: Outline.getDescendantsCount
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: Member unique name (Fully qualified name)
        in: path
        name: memberUniqueName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: int32
                type: integer
          description: successfully returned descendants count
        "400":
          content: {}
          description: Failed to get descendants count
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Descendants Count
      tags:
      - Outline Viewer
      x-accepts: text/plain
  /outline/{app}/{cube}/{memberUniqueName}:
    get:
      description: Returns either all or requested member properties
      operationId: Outline.getMemberInfo
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: Member unique name (Fully qualified name)
        in: path
        name: memberUniqueName
        required: true
        schema:
          type: string
      - description: Comma separated list of member properties to fetch
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/MemberBean'
          description: Successfully returns member information
        "400":
          content: {}
          description: Failed to get member information
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Member Info
      tags:
      - Outline Viewer
      x-accepts: application/json
  /outline/{app}/{cube}/ancestors/{memberUniqueName}:
    get:
      description: Returns all ancestors of the requested member
      operationId: Outline.getAncestorsMemberInfo
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: Member unique name (Fully qualified name)
        in: path
        name: memberUniqueName
        required: true
        schema:
          type: string
      - description: Comma separated list of member properties to fetch
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/MemberBean'
          description: Successfully returned list of Ancestors
        "400":
          content: {}
          description: Failed to get ancestors
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Member Ancestors
      tags:
      - Outline Viewer
      x-accepts: application/json
  /outline/{app}/{cube}/settings/smartlist:
    get:
      operationId: getAllSmartList
      parameters:
      - in: path
        name: app
        required: true
        schema:
          type: string
      - in: path
        name: cube
        required: true
        schema:
          type: string
      - in: header
        name: accept
        schema:
          default: application/json
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      tags:
      - Outline Viewer
      x-accepts: application/json
  /outline/{app}/{cube}:
    get:
      description: <p>Returns a list of dimensions when no parameters are provided.
        Returns a list of child members when <i>parent</i> or <i>parentUniqueName</i>
        parameters are provided. Returns search results when a search keyword parameter
        is used.</p>
      operationId: Outline.getMembers
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: <p>Keyword to search for member.</p>
        in: query
        name: keyword
        schema:
          type: string
      - description: <p>Match member name with keyword.</p>
        in: query
        name: matchWholeWord
        schema:
          default: false
          type: boolean
      - description: <p>Parent name.</p>
        in: query
        name: parent
        schema:
          type: string
      - description: <p>Parent unique name (fully qualified).</p>
        in: query
        name: parentUniqueName
        schema:
          type: string
      - description: Parent ID
        in: query
        name: isMbrId
        schema:
          type: string
      - description: <p>Comma-separated list of member properties to fetch.</p>
        in: query
        name: fields
        schema:
          type: string
      - description: <p>Number of members to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of members to return.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RestCollectionResponse'
          description: Returns either list of dimensions or children or search results.
        "400":
          content: {}
          description: Failed to get members or search results
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Dimensions, Children, or Search
      tags:
      - Outline Viewer
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/partitions/lock:
    post:
      description: Lock partition object. For non federated partition, both source
        and target partition objects will be locked<p>a) FEDERATED partition - Partition
        type, datasource name, measures dimension name and optional application level
        datasource are required</p><p>b) TRANSPARENT/REPLICATED/LAZY_TRANSPARENT Others
        - partition type, source server,source application and source database are
        required</p>
      operationId: Partition.lockPartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Partition type
        in: query
        name: type
        required: true
        schema:
          enum:
          - TRANSPARENT
          - REPLICATED
          - FEDERATED
          - LAZY_TRANSPARENT
          type: string
      - description: Partition source server name
        in: query
        name: serverName
        schema:
          type: string
      - description: Partition source application name
        in: query
        name: applicationName
        schema:
          type: string
      - description: Partition source database name
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Data source name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: Specify whether the datasource is defined at application level
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: Lock successful
        "400":
          content: {}
          description: Failed to lock partition
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Lock Partition
      tags:
      - Partitions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/partitions/unlock:
    post:
      description: Unlock partition object. For non federated partition, both source
        and target partition objects will be unlocked<p>a) FEDERATED partition - Partition
        type, datasource name, measures dimension name and optional application level
        datasource are required</p><p>b) TRANSPARENT/REPLICATED/LAZY_TRANSPARENT Others
        - partition type, source server,source application and source database are
        required</p>
      operationId: Partition.unlockPartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Partition type
        in: query
        name: type
        required: true
        schema:
          enum:
          - TRANSPARENT
          - REPLICATED
          - FEDERATED
          - LAZY_TRANSPARENT
          type: string
      - description: Partition source server name
        in: query
        name: serverName
        schema:
          type: string
      - description: Partition source application name
        in: query
        name: applicationName
        schema:
          type: string
      - description: Partition source database name
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Data source name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: Specify whether the datasource is defined at application level
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: Unlock successful
        "400":
          content: {}
          description: Failed to unlock partition
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Unlock Partition
      tags:
      - Partitions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/partitions/replicatedata:
    post:
      description: Replicate data from source for a replicated partition
      operationId: Partition.replicateDataFromSource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Partition source server name
        in: query
        name: serverName
        schema:
          type: string
      - description: Partition source application name
        in: query
        name: applicationName
        required: true
        schema:
          type: string
      - description: Partition source database name
        in: query
        name: databaseName
        required: true
        schema:
          type: string
      - allowEmptyValue: true
        description: Replicate data options
        in: query
        name: replicateOption
        schema:
          default: UPDATED_CELLS
          enum:
          - UPDATED_CELLS
          - ALL_CELLS
          type: string
      responses:
        "204":
          content: {}
          description: Replicate data successful
        "400":
          content: {}
          description: Either unsupported partition type or failed to replicate data
            from source
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Replicate Data
      tags:
      - Partitions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/partitions:
    delete:
      description: Delete a partition based on appropriate query parameters<p>a) To
        delete TRANSPARENT/REPLICATED/LAZY_TRANSPARENT partition, partition type,
        source server,source application and source database are required</p><p>b)
        To delete FEDERATED partition, partition type, datasource name, measures dimension
        name and optional application level datasource are required</p>
      operationId: Partition.deletePartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Partition type
        in: query
        name: type
        required: true
        schema:
          enum:
          - TRANSPARENT
          - REPLICATED
          - FEDERATED
          - LAZY_TRANSPARENT
          type: string
      - description: Partition source server name
        in: query
        name: serverName
        schema:
          type: string
      - description: Partition source application name
        in: query
        name: applicationName
        schema:
          type: string
      - description: Partition source database name
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Data source name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: Specify whether the datasource is defined at application level
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: Delete successful
        "400":
          content: {}
          description: Failed to delete partition
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Partition
      tags:
      - Partitions
      x-accepts: application/json
    get:
      description: '<p>Returns a list of partitions defined on the database, or a
        specific partition.</p> <ul><li>With no parameters: Returns all available
        partitions.</li><li>With <code>type</code> parameter: Returns filtered partitions
        list.</li><li>With partition type, source server, source application, and
        source database parameters: Returns existing TRANSPARENT/REPLICATED/LAZY_TRANSPARENT
        partition</li></ul>'
      operationId: Partition.getPartitions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - allowEmptyValue: true
        description: Partition type. Multiple types can be added with a comma separator.
        explode: true
        in: query
        name: type
        schema:
          items:
            enum:
            - TRANSPARENT
            - REPLICATED
            - FEDERATED
            - LAZY_TRANSPARENT
            type: string
          type: array
        style: form
      - description: <p>Number of partitions to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: <p>Maximum number of partitions to return.</p>
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Partition source server name.
        in: query
        name: serverName
        schema:
          type: string
      - description: Partition source application name.
        in: query
        name: applicationName
        schema:
          type: string
      - description: Partition source database name.
        in: query
        name: databaseName
        schema:
          type: string
      - description: Datasource name
        in: query
        name: datasourceName
        schema:
          type: string
      - description: Measures dimension name
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: Specify whether the datasource is defined at application level
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartitionList'
          description: Returns either a list of partitions or specific partition details.
        "400":
          content: {}
          description: Failed to get partitions
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Partitions
      tags:
      - Partitions
      x-accepts: application/json
    patch:
      description: Updates an existing partition
      operationId: Partition.updatePartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: Partition information
        required: true
      responses:
        "204":
          content: {}
          description: Update successful
        "400":
          content: {}
          description: Failed to update partition
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Partition
      tags:
      - Partitions
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      description: "Create a new partition<p>\t For partitions across instances, connectionName\
        \ must be provided.</p><p>\t If the connection is defined at application level\
        \ then, the property 'applicationLevelConnection' as true must be specified</p><p>\t\
        \ If the datasource is defined at application level then, the property 'applicationLevelDatasource'\
        \ as true must be specified</p><p> Example (with minimum required properties)</p><p>\t\
        a)TRANSPARENT/REPLICATED/LAZY_TRANSPARENT - (change type appropriately)</p><p>{'type':'TRANSPARENT','isNew':true,'sourceInfo':{'applicationName':'Sample_2','databaseName':'Basic'},'areas':[{'sourceArea':'Jan','targetArea':'Jan','slices':[]}],'mappings':[]}</p><p>\t\
        b)FEDERATED - <p>{'type':'FEDERATED','isNew':true,'sourceInfo':{'datasourceName':'federatedDatasourceExcel1','measuresDimensionName':'Measures','essbaseToColumnMap':{'arr':[{'essbaseName':'Caffeinated','columnName':''},{'essbaseName':'Ounces','columnName':''},{'essbaseName':'Pkg\
        \ Type','columnName':''},{'essbaseName':'Population','columnName':''},{'essbaseName':'Intro\
        \ Date','columnName':''}]}},'areas':[{'sourceArea':'Jan','targetArea':'Jan','slices':[]}]}</p>"
      operationId: Partition.createPartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: Partition information
        required: true
      responses:
        "204":
          content: {}
          description: Partition created successful
        "400":
          content: {}
          description: Failed to create partition
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Partition
      tags:
      - Partitions
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/partitions/cellcount:
    post:
      description: Get source and target cell counts for all the area definitions.
      operationId: Partition.getPartitionCellCount
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: Partition information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartitionBean'
          description: Successful
        "400":
          content: {}
          description: Failed to get cell count
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Partition Cell Count
      tags:
      - Partitions
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/partitions/validate:
    post:
      description: Validate either new or existing partition
      operationId: Partition.validatePartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: Partition information
        required: true
      responses:
        "204":
          content: {}
          description: validation successful
        "400":
          content: {}
          description: Failed to validate partition
        "422":
          content: {}
          description: Partition validated with warnings
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Validate Partition
      tags:
      - Partitions
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /preferences:
    get:
      description: Returns the user preferences. This api returns the links to various
        preferences available in this release.
      operationId: Preferences.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preference'
            application/xml:
              schema:
                $ref: '#/components/schemas/Preference'
          description: successful operation
      summary: Get User Preferences
      tags:
      - Preferences
      x-accepts: application/json
  /properties/{propertyName}:
    delete:
      description: Deletes a property in the server
      operationId: Properties.deleteProperty
      parameters:
      - description: Property name
        in: path
        name: propertyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: successful operation
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: Property is deleted successfully. Returns the property details
            and the links to get/edit the property
        "400":
          content: {}
          description: Fails to delete a property. This happens when the property
            json is incorrect or when the given property name already added to the
            server
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content: {}
          description: Internal server error
      summary: Deletes a property in the server
      tags:
      - Properties
      x-accepts: application/json
    get:
      description: Returns property based on name from the server
      operationId: Properties.getProperty
      parameters:
      - description: Property name
        in: path
        name: propertyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: Property retrieved successfully. Returns property name and
            value from the server and links to get/edit the property
        "400":
          content: {}
          description: Failed to get the property.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Server Property
      tags:
      - Properties
      x-accepts: application/json
    put:
      description: Updates the property in the server and returns the updated property
      operationId: Properties.setProperty
      parameters:
      - description: Property name
        in: path
        name: propertyName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
        description: Property entry
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: Property is updated successfully. Returns the property details
            and the links to get/edit the property
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            property. The JSON for the property may be incorrect, or the specified
            property name may not have been added to the server.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Server Property
      tags:
      - Properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /properties:
    get:
      description: Returns all the properties from the server
      operationId: Properties.getProperties
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PropertyList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PropertyList'
                type: array
          description: Properties are retrieved successfully. Returns all the properties
            from server and the links to get/edit each property
        "400":
          content: {}
          description: Failed to get the properties.
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Server Properties
      tags:
      - Properties
      x-accepts: application/json
    post:
      description: Creates the property in the server and returns the created property
      operationId: Properties.addProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
        description: Property entry
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: Property is created successfully. Returns the property details
            and the links to get/edit the property
        "400":
          content: {}
          description: Fails to create the property. This happens when the property
            json is incorrect or when the given property name already added to the
            server
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content: {}
          description: Internal server error
      summary: Creates the property in the server
      tags:
      - Properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Updates the properties in the server and returns the list of updated
        properties
      operationId: Properties.setProperties
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PropertyEntry'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PropertyEntry'
              type: array
        description: List of Property entries
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: Properties are updated successfully. Returns the list of updated
            properties, its details and the links to get/edit the properties
        "400":
          content: {}
          description: Fails to update the property. This happens when the property
            json is incorrect or when the given property name is not added to the
            server
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Updates the property values in the server
      tags:
      - Properties
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /groups/{groupId}/provisionReport/applications/{application}/filters:
    get:
      description: <p>Get filters provisioning report for specified application. The
        logged in user must have at least Database Manager role for the application
        to get a provisioning report.</p>
      operationId: GroupProvisioningReport.getFilters
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get provisioning
            report. The logged in user may not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p>Group not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filters Provisioning Report
      tags:
      - Group Provisioning Report
      x-accepts: application/json
  /groups/{groupId}/provisionReport:
    get:
      description: <p>Get a full provisioning report for the service and all applications.
        Service roles are included in the response only if the logged in user has
        Service Administrator role. The logged in user must have at least Database
        Manager role for applications to get application provisioning reports. Application
        roles are included in the report only if the logged in user has at least Application
        Manager role for the application.
      operationId: GroupProvisioningReport.getFullReport
      parameters:
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: <p>Use <code>all</code> to get provisioning information for all
          applications.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "404":
          content: {}
          description: Group not found
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Full Provisioning Report
      tags:
      - Group Provisioning Report
      x-accepts: application/json
  /groups/{groupId}/provisionReport/applications:
    get:
      description: <p>Get a provisioning report for all applications. The logged in
        user must have at least Database Manager role for the application to get a
        provisioning report. Application roles are included in the report only if
        the logged in user has at least Application Manager role for the application.</p>
      operationId: GroupProvisioningReport.getReportForAllApplications
      parameters:
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: <p>Use <code>all</code> to get provisioning information for all
          applications.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report for applications
            returned successfully.</p>
        "404":
          content: {}
          description: Group not found
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get All Applications Provisioning Report
      tags:
      - Group Provisioning Report
      x-accepts: application/json
  /groups/{groupId}/provisionReport/applications/{application}:
    get:
      description: Get provisioning report for the specified application. The logged
        in user must have at least Database Manager role for the application to get
        a provisioning report. Application roles are included in the report only if
        the logged in user has at least Application Manager role for the application.
      operationId: GroupProvisioningReport.getReportForApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Group ID.
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>none</code>. When value is <code>none</code>, only links
          to roles, filters and scripts will be returned. When value is <code>all</code>,
          provisioning information for roles, filters, and scripts are returned.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: Group not found
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Provisioning Report
      tags:
      - Group Provisioning Report
      x-accepts: application/json
  /groups/{groupId}/provisionReport/applications/{application}/scripts:
    get:
      description: <p>Get the scripts provisioning report for the specified application.
        The logged in user must have at least Database Manager role for the application
        to get a provisioning report.</p>
      operationId: GroupProvisioningReport.getScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get provisioning
            report. The logged in user may not have the appropriate application role.</p>
        "404":
          content: {}
          description: Group not found
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scripts Provisioning Report
      tags:
      - Group Provisioning Report
      x-accepts: application/json
  /groups/{groupId}/provisionReport/applications/{application}/roles:
    get:
      description: Get roles provisioning report for specified application.
      operationId: GroupProvisioningReport.getRoles
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
          description: 'Roles provisioning report for specified application. Logged
            in user should have at least ''Application Manager'' role for specified
            application to invoke this API. '
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get provisioning
            report. The logged in user may not have the appropriate application role.</p>
        "404":
          content: {}
          description: Group not found
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Roles Provisioning Report
      tags:
      - Group Provisioning Report
      x-accepts: application/json
  /applications/{app}/permissions/{id}:
    delete:
      description: <p>Deprovision a single user or group on the specified application.</p>
      operationId: ApplicationRoleProvisioning.deprovision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: <p>If true, ID is for a group. If false, ID is for a user. Default
          is false (ID is considered to be for a user.)</p>
        in: query
        name: group
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Deprovisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Deprovision User or Group
      tags:
      - Application Role Provisioning
      x-accepts: application/json
    get:
      description: Get provisioning information on the specified application.
      operationId: ApplicationRoleProvisioning.getProvision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: <p>If true, ID is for a group. If false, ID is for a user. Default
          is false (ID is considered to be for a user.)</p>
        in: query
        name: group
        schema:
          default: false
          type: boolean
      - description: <p>If true, consider roles derived through parent groups. Default
          is false.</p>
        in: query
        name: inherited
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>Provisioning information returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Provision
      tags:
      - Application Role Provisioning
      x-accepts: application/json
    put:
      description: Provision a single user or group on the specified application.
      operationId: ApplicationRoleProvisioning.provision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: User or group ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: User or group provisioning information.
        required: false
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Provisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Provision User or Group
      tags:
      - Application Role Provisioning
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{app}/permissions:
    get:
      description: Search provisioning information on specified application.
      operationId: ApplicationRoleProvisioning.searchProvision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>User or group ID wildcard pattern. if specified, returns users
          and groups matching the pattern, if not specified, returns all the users
          and groups having some role. Users or groups having no role are not returned.</p>
        in: query
        name: id
        schema:
          default: '*'
          type: string
      - description: <p>Input may include <code>all</code>, <code>none</code>, or
          a comma-separated list of roles (for example, <code>app_manager</code>,
          <code>db_manager</code>, <code>db_update</code>,or <code>db_access</code>).
          Default value is <code>all</code>, so if this query parameter is not specified,
          all users and groups having some role are returned. If <code>none</code>
          is specified, only users and groups having no role will be returned. If
          named roles are specified, then only users and groups having any of the
          named roles are returned.</p>
        in: query
        name: role
        schema:
          default: all
          type: string
      - description: <p>Input may include <code>all</code>, <code>group</code>, or
          <code>user</code>. Default value is <code>all</code>, so if this query parameter
          is not specified, all users and groups are returned.</p>
        in: query
        name: filter
        schema:
          default: all
          type: string
      - description: <p>If true, consider roles derived through parent groups. Default
          is false.</p>
        in: query
        name: inherited
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
          description: <p><strong>OK</strong></p><p>Successfully returned provisioning
            information for users or groups matching search criteria.  Response type
            can be either JSON, XML, or CSV stream, depending on the Accept header.
            If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,
            the search result will be returned in the response body. If <code>Accept='application/octet-stream'</code>,
            the search result will be returned as a stream.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search Application Provisioning
      tags:
      - Application Role Provisioning
      x-accepts: application/json
    post:
      description: Import provisioning information for multiple users or groups on
        the specified application.
      operationId: ApplicationRoleProvisioning.importProvision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Provisioning imported successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Import Provision
      tags:
      - Application Role Provisioning
      x-accepts: application/json
  /permissions/{id}:
    delete:
      description: Deprovision single user or group from a service role.
      operationId: ServiceRoleProvisioning.deprovision
      parameters:
      - description: User or group ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: <p>If true, ID is for a group. If false, ID is for a user. Default
          is false (ID is considered to be for a user.)</p>
        in: query
        name: group
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Role deprovisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Deprovision
      tags:
      - Service Role Provisioning
      x-accepts: application/json
    get:
      description: <p>Get service role provisioning information.</p>
      operationId: ServiceRoleProvisioning.getProvision
      parameters:
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: <p>If true, ID is for a group. If false, ID is for a user. Default
          is false (ID is considered to be for a user.)</p>
        in: query
        name: group
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>Provisioning information returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Provision
      tags:
      - Service Role Provisioning
      x-accepts: application/json
    put:
      description: <p>Provision a single user or group for a service role.</p>
      operationId: ServiceRoleProvisioning.provision
      parameters:
      - description: User or group ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: User or group provisioning information.
        required: false
      responses:
        "204":
          content: {}
          description: Role provision is successful
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Provision User or Group
      tags:
      - Service Role Provisioning
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /permissions:
    get:
      description: Search provisioning information.
      operationId: ServiceRoleProvisioning.searchProvision
      parameters:
      - description: <p>User or group ID wildcard pattern. if specified, returns users
          and groups matching the pattern, if not specified, returns all the users
          and groups having some role. Users or groups having no role are not returned.</p>
        in: query
        name: id
        schema:
          default: '*'
          type: string
      - description: <p>Input may include <code>all</code>, <code>none</code>, or
          a comma-separated list of roles (for example, <code>service_administrator</code>,
          <code>power_user</code>, or <code>user</code>). Default value is <code>all</code>,
          so if this query parameter is not specified, all users and groups having
          some role are returned. If <code>none</code> is specified, only users and
          groups having no role will be returned. If named roles are specified, then
          only users and groups having any of the named roles are returned.</p>
        in: query
        name: role
        schema:
          default: all
          type: string
      - description: all/group/user. Default value is all so if this query parameter
          is not specified then all users/groups will be returned.
        in: query
        name: filter
        schema:
          default: all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
          description: provisioning information for users/groups matching with search
            parameters
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search Provision
      tags:
      - Service Role Provisioning
      x-accepts: application/json
  /users/{userId}/provisionReport/applications/{application}/filters:
    get:
      description: <p>Get a filters provisioning report for the specified application.
        The logged in user must have at least Database Manager role for the application
        to get a provisioning report.</p>
      operationId: UserProvisioningReport.getFilters
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filters Provisioning Report
      tags:
      - User Provisioning Report
      x-accepts: application/json
  /users/{userId}/provisionReport:
    get:
      description: Get a full provisioning report. Service roles are included in the
        response only if the logged in user has Service Administrator role. The logged
        in user must have at least Database Manager role for an application to get
        its provisioning report. Application roles are included in the report only
        if the logged in user has at least Application Manager role for the application.
      operationId: UserProvisioningReport.getFullReport
      parameters:
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>none</code>, meaning only links to applications are returned.
          If <code>all</code> is specified, provisioning information for all applications
          is returned.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
          description: <p><strong>OK</strong></p><p>Full provisioning report including
            service and all the applications.</p>
        "404":
          content: {}
          description: User not found
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Full Provisioning Report
      tags:
      - User Provisioning Report
      x-accepts: application/json
  /users/{userId}/provisionReport/applications:
    get:
      description: <p>Get a provisioning report for all the applications. The logged
        in user must have at least Database Manager role for the application to get
        a provisioning report. Application roles are included in the report only if
        the logged in user has at least Application Manager role for the application.</p>
      operationId: UserProvisioningReport.getReportForAllApplications
      parameters:
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>none</code>, meaning only links to applications are returned.
          If <code>all</code> is specified, provisioning information for all applications
          is returned.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Applications Provisioning Reports
      tags:
      - User Provisioning Report
      x-accepts: application/json
  /users/{userId}/provisionReport/applications/{application}:
    get:
      description: <p>Get a provisioning report for the specified application. The
        logged in user must have at least Database Manager role for the application
        to get a provisioning report. Application roles are included in the report
        only if the logged in user has at least Application Manager role for the application.</p>
      operationId: UserProvisioningReport.getReportForApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>none</code>, meaning only links to roles, filters, and scripts
          are returned. If <code>all</code> is specified, provisioning information
          for all roles, filters, and scripts in the application is returned.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Provisioning Report
      tags:
      - User Provisioning Report
      x-accepts: application/json
  /users/{userId}/provisionReport/applications/{application}/scripts:
    get:
      description: <p>Get a scripts provisioning report for the specified application.
        The logged in user must have at least Database Manager role for the application
        to get a provisioning report.</p>
      operationId: UserProvisioningReport.getScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the application service role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scripts Provisioning Report
      tags:
      - User Provisioning Report
      x-accepts: application/json
  /users/{userId}/provisionReport/applications/{application}/roles:
    get:
      description: <p>Get a roles provisioning report for the specified application.
        The logged in user must have at least Application Manager role for the application
        to get this provisioning report.</p>
      operationId: UserProvisioningReport.getRoles
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Roles Provisioning Report
      tags:
      - User Provisioning Report
      x-accepts: application/json
  /utils/rules/actions/import:
    post:
      description: Import a rules file.
      operationId: Rules.importRule
      parameters:
      - description: <p>Optional overwrite specification. Default value is false,
          meaning if the rules file already exists, an error is returned. When set
          to true, if the rule file already exists, it will be overwritten.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
        description: '<p>File path information: source and destination catalog paths.</p>'
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file imported successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to import rules
            file. The file path information may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Import Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /utils/rules/preview:
    post:
      description: <p>Applies a rules file to a two-dimensional array of data, and
        returns a previewed data load as two-dimensional array.</p>
      operationId: Rules.getPreviewData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulePreviewInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RulePreviewInput'
        description: <p>Rules file details and input two dimensional array.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePreviewOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/RulePreviewOutput'
          description: <p><strong>OK</strong></p><p>Data through rules file was previewed
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to preview this
            data through this rules file.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Preview Rules Data
      tags:
      - Rules
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /utils/rules:
    get:
      description: Gets rules file from file catalog path.
      operationId: Rules.get
      parameters:
      - description: <p>Catalog path.</p>
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rules'
          description: <p><strong>OK</strong></p><p>Successfully returned rules file.  Response
            type can be either JSON, XML, or JSON stream, depending on the Accept
            header. If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,
            the rules are returned in the response body. If <code>Accept='application/octet-stream'</code>,
            the rules are returned as a JSON stream.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed import rules file.
            The catalog path information may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Rules
      tags:
      - Rules
      x-accepts: application/json
    post:
      description: <p>Creates a rules file.</p>
      operationId: Rules.save
      parameters:
      - description: <p>Optional file catalog path.</p>
        in: query
        name: path
        schema:
          type: string
      - description: <p>Optional overwrite specification. Default value is false,
          meaning if the rules file already exists, an error is returned. When set
          to true, if the rule file already exists, it will be overwritten.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rules'
          application/xml:
            schema:
              $ref: '#/components/schemas/Rules'
        description: <p>Rules file details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create rules
            file. The catalog path information may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /utils/rules/verify:
    post:
      description: <p>Verifies a rules file.</p>
      operationId: Rules.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rules'
          application/xml:
            schema:
              $ref: '#/components/schemas/Rules'
        description: <p>Rules file details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file verified successfully.</p>
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
          description: <p><strong>Bad Request</strong></p><p>Rules verification failed.
            Response contains a list of verification errors.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Verify Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/sandbox/members:
    post:
      description: <p>Add members to an existing sandbox dimension.</p>
      operationId: SandboxDimension.addMembers
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
        description: <p>Size of sandbox dimension members. Default is 100 if body
          is empty.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
          description: <p><strong>OK</strong></p><p>Sandbox members added successfully;
            includes links to sandbox details.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add sandbox
            members. The application or database name may be incorrect, or scenarios
            may not be enabled.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Sandbox Members
      tags:
      - Sandbox Dimension
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/sandbox:
    delete:
      description: <p>Delete Sandbox and CellProperties dimensions from this cube.
        This action disables scenario management for the cube.</p>
      operationId: SandboxDimension.delete
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Sandbox deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete sandbox.
            The application or database name may be incorrect, or the logged in user
            may not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Sandbox
      tags:
      - Sandbox Dimension
      x-accepts: application/json
    get:
      description: <p>Return details about sandbox members.</p>
      operationId: SandboxDimension.get
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
          description: <p><strong>OK</strong></p><p>Sandbox details returned successfully;
            includes total sandbox members, available members, and assigned member.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get sandbox
            details. The application or database name may be incorrect, or the logged
            in user may not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Sandbox Details
      tags:
      - Sandbox Dimension
      x-accepts: application/json
    post:
      description: <p>Create Sandbox and CellProperties dimensions, while at the same
        time enabling scenario management for this cube.</p>
      operationId: SandboxDimension.create
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
        description: <p>Maximum count of sandbox dimension members. Default is 100
          if body is empty.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
          description: <p><strong>OK</strong></p><p>Sandbox created successfully;
            includes links to sandbox details.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed create sandbox.
            The application or database name may be incorrect, or the logged in user
            may not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Sandbox
      tags:
      - Sandbox Dimension
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios/{scenarioId}/participants:
    get:
      description: <p>Get scenario participants by scenario ID.</p>
      operationId: Scenarios.getParticipants
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ParticipantListResponse'
          description: <p><strong>OK</strong></p><p>Scenario participants returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            participants. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Participants
      tags:
      - Scenarios
      x-accepts: application/json
    post:
      description: <p>Add scenario participant to the specified scenario ID.</p>
      operationId: Scenarios.addParticipant
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ParticipantBean'
        description: Participant details.
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Scenario participant added successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add participant.
            The scenario ID may be invalid, or the scenario may already have been
            submitted for approval.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Participant
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios:
    get:
      description: <p>Get scenarios matching search criteria. Response includes links
        to all basic scenario attributes, excluding approvers, participants, comments,
        and scripts.</p>
      operationId: Scenarios.getScenarios
      parameters:
      - description: <p>Scenario name wildcard pattern.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Optional user role by which to filter the scenario list. Value
          can be <code>owner</code>, <code>participant</code>, or <code>approver</code>.
          If role is specified as <code>approver</code>, this API returns all scenarios
          for which the logged in user is the approver. By default, all scenarios
          are returned for which the logged in user is either an owner, a participant,
          or an approver.</p>
        in: query
        name: role
        schema:
          type: string
      - description: <p>If true, returns all scenarios past the due date. Default
          is false, meaning all scenarios are returned.</p>
        in: query
        name: overdue
        schema:
          type: boolean
      - description: <p>Scenario state.</p>
        in: query
        name: state
        schema:
          type: string
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      - description: <p>Scenario is in submitted state, and approval is pending from
          logged in user.</p>
        in: query
        name: approvalPending
        schema:
          default: false
          type: boolean
      - description: <p>Number of scenarios to omit from the start of the result set.
          Default is 0.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: <p>Maximum number of scenarios to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: '<p>Order-by field and order for the result set. The value of
          this parameter must follow the format of <code><i>fieldName</i>:asc|desc</code>.
          For example: <code>name:asc</code>. Default value is <code>createdTime:desc</code>,
          meaning that scenarios are listed with the most recently created scenarios
          first.</p>'
        in: query
        name: orderBy
        schema:
          default: createdTime:desc
          type: string
      - description: <p>If <code>true</code>, response contains only the count of
          scenarios, and not actual scenarios.</p>
        in: query
        name: count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioCollectionResponse'
          description: <p><strong>OK</strong></p><p>Scenario list and details returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenarios.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenarios
      tags:
      - Scenarios
      x-accepts: application/json
    post:
      description: <p>Creates a new scenario. A scenario is a private work area in
        which you can model different assumptions within the data without affecting
        the existing data.</p>
      operationId: Scenarios.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
        description: <p>Scenario details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create the
            scenario. Required fields such as scenario name or due date may be empty.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Scenario
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios/{scenarioId}/approvers:
    get:
      description: <p>Get scenario approvers.</p>
      operationId: Scenarios.getApprovers
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproverListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApproverListResponse'
          description: <p><strong>OK</strong></p><p>List of scenario approvers returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            approvers. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Approvers
      tags:
      - Scenarios
      x-accepts: application/json
    post:
      description: <p>Add a scenario approver. Approvers are optional, and must have
        Database Access or higher role. They monitor and approve or reject scenarios.
        If a scenario has multiple approvers, each one must approve before it can
        be submitted.</p>
      operationId: Scenarios.addApprover
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproverBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApproverBean'
        description: Approver details.
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Scenario approver added successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add approver.
            The scenario ID may be invalid, or the scenario may already have been
            submitted for approval.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Approver
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios/{scenarioId}/approvers/{userId}:
    delete:
      description: <p>Deletes a scenario approver.</p>
      operationId: Scenarios.deleteApprover
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: Approver ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario approver deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete scenario
            approver. The scenario ID may be invalid, or the scenario may already
            have been submitted for approval.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Approver
      tags:
      - Scenarios
      x-accepts: application/json
  /scenarios/{scenarioId}/participants/{userId}:
    delete:
      description: <p>Deletes a scenario participant.</p>
      operationId: Scenarios.deleteParticipant
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: Participant ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario participant deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete scenario
            participant. The scenario ID may be invalid, or the scenario may already
            have been submitted for approval.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Participant
      tags:
      - Scenarios
      x-accepts: application/json
  /scenarios/{id}:
    delete:
      description: Delete a scenario by ID.
      operationId: Scenarios.delete
      parameters:
      - description: Scenario ID.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete scenario.
            The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete a scenario by ID.
      tags:
      - Scenarios
      x-accepts: application/json
    get:
      description: Gets a scenario by ID.
      operationId: Scenarios.get
      parameters:
      - description: Scenario ID.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>none</code>, meaning only links are returned. If <code>all</code>
          is specified, then approvers, participants and scripts are included in the
          response.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            details. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenario
      tags:
      - Scenarios
      x-accepts: application/json
    patch:
      description: <p>Update basic information about a scenario, including description,
        due date, priority, and owner.</p>
      operationId: Scenarios.patch
      parameters:
      - description: Scenario ID.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioEditBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioEditBean'
        description: <p>Scenario details. Set only those fields which need to be updated.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            scenario. Required fields such as scenario name or due date may be empty.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Scenario Partially
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    post:
      description: <p>Performs the specified scenario workflow action. Common actions
        are <code>submit</code> to submit a scenario for approval, <code>approve</code>
        to approve a scenario, <code>reject</code> to reject it, and <code>apply</code>
        to overwrite the base data with the scenario data. Additional actions include
        <code>copy</code>, <code>refresh</code>, and <code>clear</code>.</p>
      operationId: Scenarios.performAction
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Valid values are <code>submit</code>, <code>approve</code>,
          <code>reject</code>, <code>apply</code>, <code>copy</code>, <code>refresh</code>,
          and <code>clear</code>.</p>
        in: query
        name: action
        schema:
          type: string
      - description: <p>Optional overwrite parameter, applicable only when <i>action</i>
          is <code>refresh</code>. If <code>true</code>, when the base and scenario
          data have different values, the base value overwrites the scenario changes.
          Default is <code>false</code>.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioActionPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioActionPayload'
        description: <p>Action parameters. Copy options are applicable only in case
          of copy. Comment is applicable only for workflow actions.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario action performed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to perform scenario
            action. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Perform Scenario Action
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: <p>Update in-depth details about a scenario.</p>
      operationId: Scenarios.update
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
        description: <p>Scenario details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            scenario. Required fields such as scenario name or due date may be empty,
            or the scenario may already have been submitted for approval.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Scenario Fully
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios/{scenarioId}/comments/{commentId}:
    delete:
      description: <p>Delete a scenario comment by ID.</p>
      operationId: Scenarios.deleteComment
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: Comment ID.
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario comment deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete scenario
            comment. The scenario ID or comment ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Comment
      tags:
      - Scenarios
      x-accepts: application/json
    get:
      description: <p>Get a scenario comment by ID.</p>
      operationId: Scenarios.getComment
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: Comment ID.
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommentBean'
          description: <p><strong>OK</strong></p><p>Scenario comment returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            comment. The scenario ID or comment ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Comment
      tags:
      - Scenarios
      x-accepts: application/json
    put:
      description: <p>Update a scenario comment by ID.</p>
      operationId: Scenarios.updateComment
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: Comment ID.
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CommentBean'
        description: Comment details.
        required: false
      responses:
        "204":
          content: {}
          description: <p>Scenario comment successfully updated.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update scenario
            comment. The scenario ID or comment ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Comment
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios/databases:
    get:
      description: <p>Get information about all the databases registered for scenario
        management.</p>
      operationId: Scenarios.getRegisteredCubes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioCubesList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioCubesList'
          description: <p><strong>OK</strong></p><p>Scenario-enabled cubes returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario-enabled
            cubes.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenario-Enabled Cubes
      tags:
      - Scenarios
      x-accepts: application/json
  /scenarios/{id}/changes:
    get:
      description: <p>Get scenario data changes. If you are the owner, approver, or
        participant for a given scenario, you can compare scenario and base models.</p>
      operationId: Scenarios.getChangeData
      parameters:
      - description: Scenario ID.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioChangesListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioChangesListResponse'
          description: p><strong>OK</strong></p><p>Scenario changes returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            changes. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Changes
      tags:
      - Scenarios
      x-accepts: application/json
  /scenarios/{scenarioId}/scripts:
    get:
      description: Get Scripts
      operationId: Scenarios.getScripts
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScriptListResponse'
          description: <p><strong>OK</strong></p><p>Scenario scripts returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            scripts. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scripts
      tags:
      - Scenarios
      x-accepts: application/json
  /scenarios/{scenarioId}/scripts/{scriptType}:
    put:
      description: <p>Updates scenario using script of specified type.</p>
      operationId: Scenarios.updateScript
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: '<p>Script type. Valid values are: <code>refresh</code> to revert
          to base, <code>apply</code> to commit to base, and <code>clear</code> to
          set to #Missing.</p>'
        in: path
        name: scriptType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptBean'
        description: <p>Script details.</p>
        required: false
      responses:
        "204":
          content: {}
          description: Update script is successful
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update with
            script. The scenario ID or script type may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update With Script
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /scenarios/{scenarioId}/comments:
    get:
      description: <p>Get comments for the specified scenario ID.</p>
      operationId: Scenarios.getComments
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
          description: <p><strong>OK</strong></p><p>Scenario comments returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            comments. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Comments
      tags:
      - Scenarios
      x-accepts: application/json
    post:
      description: <p>Add a comment to the specified scenario ID.</p>
      operationId: Scenarios.addComment
      parameters:
      - description: Scenario ID.
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CommentBean'
        description: Comment details.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommentBean'
          description: <p><strong>OK</strong></p><p>Scenario comment added successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add a comment.
            The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Comment
      tags:
      - Scenarios
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}:
    delete:
      description: Deletes the specified script in the specified application and database
      operationId: Scripts.deleteScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: Type of script file
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "204":
          content: {}
          description: Script is deleted successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            script. The application, database, or script name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Essbase Script
      tags:
      - Scripts
      x-accepts: application/json
    get:
      description: Returns the script from the specified application and database
        based on the script name
      operationId: Scripts.getScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: Type of script file
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
            application/xml:
              schema:
                $ref: '#/components/schemas/Script'
          description: Script is retrieved successfully. Returns the links to get/edit/delete
            the script and to get the script content
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the script.
            The application, database, or script name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script
      tags:
      - Scripts
      x-accepts: application/json
    put:
      description: Updates the specified script in the specified application and database
        and returns the updated script
      operationId: Scripts.editScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: Type of script file
        in: query
        name: file
        schema:
          default: calc
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
        description: Script details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
          description: Script is updated successfully. Has the script details and
            the links to get/edit/delete the script and to get the script content
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            script. The application or database name may be incorrect, the JSON for
            the script may be incorrect, or the specified script name may already
            exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/content:
    get:
      description: Returns the script contents of the specified script name from the
        specified application and database
      operationId: Scripts.getScriptContent
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: Type of script file
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "200":
          content: {}
          description: Script content is retrieved successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get script
            contents. The application, database, or script name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script Contents
      tags:
      - Scripts
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/scriptops/validate:
    post:
      description: Validates the specified script. Applicable only for calculation
        scripts.
      operationId: Scripts.validateScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: File
        in: query
        name: file
        schema:
          default: calc
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
          application/xml:
            schema:
              $ref: '#/components/schemas/Script'
        description: <p>Script details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: Script is validated successfully.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to validate the
            script. The application or database name may be incorrect, or the contents
            may be incomplete for the specified script name.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Validate Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts:
    get:
      description: Returns all the scripts from the specified application and database
      operationId: Scripts.listScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Type of script file
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScriptList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ScriptList'
                type: array
          description: Scripts are retrieved successfully. Gives the script details
            along with the links to get/edit/delete the script and to get the script
            content
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the scripts.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Essbase Scripts
      tags:
      - Scripts
      x-accepts: application/json
    post:
      description: Creates the script in the specified application and database and
        returns the created script
      operationId: Scripts.createScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Type of script file
        in: query
        name: file
        schema:
          default: calc
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
        description: Script details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
          description: Script is created successfully. Has the script details and
            the links to get/edit/delete the script and to get the script content
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create the
            script. The application or database name may be incorrect, the JSON for
            the script may be incorrect, or the specified script name may already
            exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/permissions:
    get:
      description: Retrieves permissions for the specified script. Applicable only
        for calculation scripts.
      operationId: Scripts.getScriptPermissions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
          description: Permissions are retrieved successfully for the script
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get permissions
            for the script. The application, database, or script name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script Permissions
      tags:
      - Scripts
      x-accepts: application/json
    post:
      description: Adds permissions to the specified script for the specified user
        or group. Applicable only for calculation scripts.
      operationId: Scripts.addScriptPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: User or group details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: Permission is added successfully to the script
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add permissions
            for the script. The application, database, or script name may be incorrect;
            the user or group ID may be incorrect; or the specified user or group
            may not have sufficient privileges.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Essbase Script Permissions
      tags:
      - Scripts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/permissions/{userGroupId}:
    delete:
      description: Removes permissions from the specified script for the specified
        user or group. Applicable only for calculation scripts.
      operationId: Scripts.removeScriptPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: Id of the user or group
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      - description: Says whether the userGroupId is a group or not
        in: query
        name: group
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: Permission is removed successfully from the script
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete permissions
            for the script. The application, database, or script name may be incorrect,
            or the user or group ID may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Remove Essbase Script Permissions
      tags:
      - Scripts
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/scriptops/rename:
    post:
      description: Renames the script in the specified application and database and
        returns the created script. Applicable only for calculation scripts.
      operationId: Scripts.renameScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
        description: Script rename details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
            application/xml:
              schema:
                $ref: '#/components/schemas/Script'
          description: Script is renamed successfully. Has the script details and
            the links to get/edit/delete the script and to get the script content
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to rename the
            script. The application, database, or script name may be incorrect, or
            the specified script name may already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/rtsv:
    get:
      description: Returns the script runtime substitution variables from specified
        script name
      operationId: Scripts.getRTSVsForScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Script name
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RTSVList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RTSVList'
                type: array
          description: List of RTSVs retrived successfully
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get script
            RTSVs. The application, database, or script name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script RTSVs
      tags:
      - Scripts
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/scripts/scriptops/copy:
    post:
      description: Copies the script in the specified application and database and
        returns the created script. Applicable only for calculation scripts.
      operationId: Scripts.copyScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
        description: Script copy details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
            application/xml:
              schema:
                $ref: '#/components/schemas/Script'
          description: Script is copied successfully. Has the script details and the
            links to get/edit/delete the script and to get the script content
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to copy the script.
            The application, database, or script name may be incorrect, or the specified
            script name may already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /sessions:
    delete:
      description: <p>Deletes all the sessions currently active, or kills all the
        requests currently processing.</p>
      operationId: Sessions.deleteAllActiveSessions
      parameters:
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      - description: <p>User ID.</p>
        in: query
        name: userId
        schema:
          type: string
      - description: <p>Disconnect value (Boolean). If false, the request is killed.
          Otherwise, the session is logged off.</p>
        in: query
        name: disconnect
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: '<p>1. Deletes all the sessions for the parameter ''application'',
            ''database'' and ''userid'' provided. If no parameters are specified,
            deletes all active sessions.</p><p>2. Cannot disconnect user. Essbase
            Error(1051041): Insufficient privilege for this operation.</p>'
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Essbase or platform security
            exception.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete All Sessions
      tags:
      - Sessions
      x-accepts: application/json
    get:
      description: Return list of session currently active for a user or request
      operationId: Sessions.getAllActiveSessions
      parameters:
      - description: application name on which request is performed
        in: query
        name: application
        schema:
          type: string
      - description: database name on which request is performed
        in: query
        name: database
        schema:
          type: string
      - description: user id for which we need all the active sessions. If not provided
          then by default all the sesions will be retrieved
        in: query
        name: userId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionAttributes'
            application/xml:
              schema:
                $ref: '#/components/schemas/SessionAttributes'
          description: returns list session attributes objects having 'user id', 'session
            id', 'login time' 'connection source' etc.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Essbase or platform security
            exception.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Sessions
      tags:
      - Sessions
      x-accepts: application/json
  /sessions/{sessionId}:
    delete:
      description: <p>Delete a particular session or kill a particular request using
        the session id.</p>
      operationId: Sessions.deleteSessionWithId
      parameters:
      - description: <p>Disconnection value. Default is false, meaning kill the request.
          If true, disconnect the user session.</p>
        in: query
        name: disconnect
        schema:
          default: false
          type: boolean
      - description: <p>sessionId of the session to be disconnected or request killed.</p>
        in: path
        name: sessionId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Session or request terminated
            successfully.</p>
        "400":
          content: {}
          description: '<p><strong>Bad Request</strong></p><ol><li>Essbase or platform
            security exception.</li><li>If the sessionId is incorrect, <code>Error:
            No session with specified login id.</code></li><li>Cannot disconnect user.
            Essbase Error(1051041): Insufficient privilege for this operation</li>'
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Session By ID
      tags:
      - Sessions
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dataload/{streamId}:
    delete:
      description: <p>Ends streaming data load.</p>
      operationId: Dataload.end
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
          description: <p><strong>OK</strong></p><p>Data load ended successfully;
            includes status.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to end data load.
            The stream ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: End Dataload
      tags:
      - Streaming Data Load
      x-accepts: application/json
    post:
      description: <p>Pushes data for data load. Data can be pushed in chunks in CSV
        format by repeating this request multiple times.</p>
      operationId: Dataload.streamData
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/csv:
            schema:
              type: string
        description: <p>CSV data.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: <p><strong>OK</strong></p><p>Data pushed successfully; includes
            links to push more data and end data load if  <code>links=true</code>
            parameter is passed.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to push data.
            The stream ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Push Data
      tags:
      - Streaming Data Load
      x-codegen-request-body-name: body
      x-contentType: text/plain
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dataload:
    post:
      description: <p>Starts streaming data load.</p>
      operationId: Dataload.start
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLoadStartPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/DataLoadStartPayload'
        description: <p>Data load options such as rule file name and delimiter.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: <p><strong>OK</strong></p><p>Data load started successfully;
            includes unique stream id which can be passed to subsequent requests.
            If <code>links=true</code> parameter is passed, also includes links to
            push more data and end the data load.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start Dataload
      tags:
      - Streaming Data Load
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimbuild/{streamId}/{ruleFileName}:
    delete:
      description: Ends dimension build for rule file
      operationId: DimensionBuild.endDimBuild
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Stream ID
        in: path
        name: streamId
        required: true
        schema:
          type: string
      - description: Rule File Name
        in: path
        name: ruleFileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
          description: Dimension build status and Links to restructure cube if links=true
            query parameter is passed
        "400":
          content: {}
          description: Validation failed. For example, specified stream id is invalid
            or dimension build is not started
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: End dimension build for rule file
      tags:
      - Streaming Dimension Build
      x-accepts: application/json
    post:
      description: Starts dimension build for rule file
      operationId: DimensionBuild.startDimBuild
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Stream ID
        in: path
        name: streamId
        required: true
        schema:
          type: string
      - description: Rule File Name
        in: path
        name: ruleFileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: Links to push data if links=true query parameter is passed
        "400":
          content: {}
          description: Validation failed. For example, specified stream id or rule
            file name is invalid
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start dimension build for rule file
      tags:
      - Streaming Dimension Build
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimbuild/{streamId}:
    delete:
      description: <p>Ends incremental dimension build and triggers a restructuring
        of the cube.</p>
      operationId: DimensionBuild.end
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
          description: <p><strong>OK</strong></p><p>Dimension build ended successfully;
            includes status.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to end dimension
            build. The stream ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: End Streaming Dimension Build
      tags:
      - Streaming Dimension Build
      x-accepts: application/json
    post:
      description: <p>Pushes data for streaming dimension build.</p>
      operationId: DimensionBuild.streamDimBuildData
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/csv:
            schema:
              type: string
        description: <p>CSV data.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: <p><strong>OK</strong></p><p>Data pushed successfully; includes
            links to push more data and end dimension build if <code>links=true</code>
            parameter is passed.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to push data.
            The stream ID may be invalid, or the dimension build may not have started.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Push Data
      tags:
      - Streaming Dimension Build
      x-codegen-request-body-name: body
      x-contentType: text/plain
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/dimbuild:
    post:
      description: <p>Starts an incremental dimension build.</p>
      operationId: DimensionBuild.start
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DimBuildStartPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/DimBuildStartPayload'
        description: <p>Dimension build attributes, such as the restructure option.
          If empty, the default value for restructure option is  <code>PRESERVE_ALL_DATA</code>.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: <p><strong>OK</strong></p><p>Dimension build started successfully;
            includes unique stream id which can be passed to subsequent requests.
            If <code>links=true</code> parameter is passed, also includes links to
            start dimension build with rules file.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start Streaming Dimension Build
      tags:
      - Streaming Dimension Build
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /users/actions/delete:
    post:
      description: Delete the users specified in the text file
      operationId: Users.deleteUsers
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: OK
        "400":
          content: {}
          description: Validation fails. For example, logged in user doesn't have
            appropriate service role
        "500":
          content: {}
          description: Internal server error.
      summary: Delete the users specified in the text file
      tags:
      - Users
      x-accepts: application/octet-stream
  /users/{id}:
    delete:
      description: Delete a user.
      operationId: Users.delete
      parameters:
      - description: ID of user.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>User deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete User
      tags:
      - Users
      x-accepts: application/json
    get:
      description: <p>Get details for a specified user ID.</p>
      operationId: Users.get
      parameters:
      - description: ID of user.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>User details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get User
      tags:
      - Users
      x-accepts: application/json
    put:
      description: Update a user.
      operationId: Users.PUT
      parameters:
      - description: ID of user.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserBean'
        description: Updated user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>User updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update User
      tags:
      - Users
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /users:
    get:
      description: <p>Get a list of users based on search results, or export users
        as CSV file.</p>
      operationId: Users.search
      parameters:
      - description: User ID wildcard pattern. Filter by name of user if header <code>Accept='application/json'</code>
          or <code>Accept='application/xml'</code>.
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Maximum number of users to return, if header <code>Accept='application/json'</code>
          or <code>Accept='application/xml'</code>.</p>
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: <p>Value can be <code>all</code> or <code>none</code>. Default
          value is <code>all</code>, meaning service role and groups are returned
          for each user. If <code>none</code> is specified, service role and groups
          are not returned.</p>
        in: query
        name: expand
        schema:
          default: all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
            application/xml:
              schema:
                $ref: '#/components/schemas/Users'
          description: <p>List of users matching search criteria. Response type can
            be either JSON, XML, or CSV stream, depending on the Accept header. If
            <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,
            the users are returned in the response body. If <code>Accept='application/octet-stream'</code>,
            the users are returned as a JSON stream.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search or Export Users
      tags:
      - Users
      x-accepts: application/json
    post:
      description: Add or Import user(s).
      operationId: Users.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserBean'
        description: <p>Users details to create, if <code>Accept='application/json'</code>
          or <code>Accept='application/xml'</code>. Or, CSV file from which to import
          users, if <code>Accept='application/octet-stream'</code>.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Successfully added user. If <code>Accept='application/json'</code>
            or <code>Accept='application/xml'</code>, the added users are returned
            in the response body. If <code>Accept='application/octet-stream'</code>,
            the added users are imported but not included in the response body.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add or Import User(s)
      tags:
      - Users
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /variables:
    get:
      description: Returns all the variables from the server
      operationId: Variables.listServerVariables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VariableList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VariableList'
                type: array
          description: Variables are retrieved successfully. Gives the variable details
            along with the links to get/edit/delete each variable
        "400":
          content: {}
          description: Fails to get the variables.
        "500":
          content: {}
          description: Internal server error
      summary: Retrieves Variables from server
      tags:
      - Server Variables
      x-accepts: application/json
    post:
      description: Creates the variable in the server and returns the created variable
      operationId: Variables.createServerVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Variable details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Variable is created successfully. Returns the variable details
            and the links to get/edit/delete the variable
        "400":
          content: {}
          description: Fails to create the variable. This happens when the variable
            json is incorrect or when the given variable name already exists
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content: {}
          description: Internal server error
      summary: Creates Variable in server
      tags:
      - Server Variables
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /variables/{variableName}:
    delete:
      description: Deletes the given variable in the server
      operationId: Variables.deleteServerVariable
      parameters:
      - description: Variable name
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Variable is deleted successfully.
        "400":
          content: {}
          description: Fails to delete the variable. This happens when the variable
            name is incorrect
        "500":
          content: {}
          description: Internal server error
      summary: Deletes Variable in server
      tags:
      - Server Variables
      x-accepts: application/json
    get:
      description: Returns the variable details from the server
      operationId: Variables.getServerVariable
      parameters:
      - description: Variable name
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Variable is retrieved successfully. Gives the variable details
            along with the links to get/edit/delete the variable
        "400":
          content: {}
          description: Fails to get the variable. This happens when the variable name
            is incorrect
        "500":
          content: {}
          description: Internal server error
      summary: Retrieves Variable from server
      tags:
      - Server Variables
      x-accepts: application/json
    put:
      description: Updates the variable in the server and returns the updated variable
      operationId: Variables.editServerVariable
      parameters:
      - description: Variable name
        in: path
        name: variableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Variable details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Variable is updated successfully. Returns the variable details
            and the links to get/edit/delete the variable
        "400":
          content: {}
          description: Fails to update the variable. This happens when the variable
            json is incorrect or when the given variable name does not exist
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content: {}
          description: Internal server error
      summary: Updates Variable in server
      tags:
      - Server Variables
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/variables:
    get:
      description: Returns all substitution variables from the specified application
        and database.
      operationId: Variables.listVariables
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VariableList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VariableList'
                type: array
          description: <p><strong>OK</strong></p><p>Variables returned successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variables.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database Variables
      tags:
      - Variables
      x-accepts: application/json
    post:
      description: Creates a substitution variable in the specified application and
        database, and returns the created variable.
      operationId: Variables.createVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Variable details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: <p><strong>OK</strong></p><p>Variable created successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create the
            variable. The application or database name may be incorrect, the JSON
            for the variable may be incorrect, or the specified variable name may
            already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Database Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/databases/{databaseName}/variables/{variableName}:
    delete:
      description: Deletes the specified substitution variable from the specified
        application and database.
      operationId: Variables.deleteVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Variable name.
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Variable deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            variable. The application, database, or variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Database Variable
      tags:
      - Variables
      x-accepts: application/json
    get:
      description: Returns the substitution variable details from the specified application
        and database.
      operationId: Variables.getVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Variable name.
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: <p><strong>OK</strong></p><p>Variable returned successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variable.
            The application, database, or variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database Variable
      tags:
      - Variables
      x-accepts: application/json
    put:
      description: Updates a substitution variable in the specified application and
        database, and returns the updated variable.
      operationId: Variables.editVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: Variable name.
        in: path
        name: variableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Variable details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: <p><strong>OK</strong></p><p>Variable updated successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            variable. The application or database name may be incorrect, the JSON
            for the variable may be incorrect, or the specified variable name may
            not exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Database Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/variables:
    get:
      description: Returns all substitution variables from the specified application.
      operationId: Variables.listAppVariables
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VariableList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VariableList'
                type: array
          description: <p><strong>OK</strong></p><p>Variables returned successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variables.
            The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Variables
      tags:
      - Variables
      x-accepts: application/json
    post:
      description: Creates a substitution variable in the specified application, and
        returns the created variable.
      operationId: Variables.createAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Variable details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: <p><strong>OK</strong></p><p>Variable created successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create the
            variable. The application or database name may be incorrect, the JSON
            for the variable may be incorrect, or the specified variable name may
            already exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Application Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /applications/{applicationName}/variables/{variableName}:
    delete:
      description: Deletes the specified substitution variable from the specified
        application.
      operationId: Variables.deleteAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Variable name.
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Variable deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            variable. The application name or variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Application Variable
      tags:
      - Variables
      x-accepts: application/json
    get:
      description: Returns substitution variable details from the specified application.
      operationId: Variables.getAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Variable name.
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: <p><strong>OK</strong></p><p>Variable returned successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variable.
            The application name or variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Variable
      tags:
      - Variables
      x-accepts: application/json
    put:
      description: Updates the substitution variable in the specified application,
        and returns the updated variable
      operationId: Variables.editAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Variable name.
        in: path
        name: variableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Variable details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: <p><strong>OK</strong></p><p>Variable updated successfully,
            with links to get, edit, or delete.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            variable. The application name may be incorrect, the JSON for the variable
            may be incorrect, or the specified variable name may not exist.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Application Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /settings/resources:
    get:
      description: Returns the platform service resource settings.
      operationId: PSMSettings.getResources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>OK</strong></p><p>Platform service resource settings
            returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get resource
            settings.</p>
      summary: Get Resource Settings
      tags:
      - Platform Service Settings
      x-accepts: application/json
    put:
      description: Save the platform service resource settings.
      operationId: PSMSettings.setResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Limits'
          application/xml:
            schema:
              $ref: '#/components/schemas/Limits'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>OK</strong></p><p>Platform service resource settings
            saved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to save resource
            settings.</p>
      summary: Store Resource Settings
      tags:
      - Platform Service Settings
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /settings/maintenance:
    get:
      description: Get the platform service maintenance settings, such as disk space
        and memory.
      operationId: PSMSettings.getSystemMaintenanceLimits
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>OK</strong></p><p>Saved platform service resource
            settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get resource
            settings.</p>
      summary: Get Maintenance Settings
      tags:
      - Platform Service Settings
      x-accepts: application/json
  /settings/database:
    get:
      description: Get the platform service database settings.
      operationId: PSMSettings.getDatabaseSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>OK</strong></p><p>Platform service database settings
            returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get resource
            settings.</p>
      summary: Get Database Settings
      tags:
      - Platform Service Settings
      x-accepts: application/json
    put:
      description: Save the platform service database settings.
      operationId: PSMSettings.setDatabaseSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/DatabaseSettings'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>Bad Request</strong></p><p>Failed to save resource
            settings.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to save resource
            settings.</p>
      summary: Store Database Settings
      tags:
      - Platform Service Settings
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /settings:
    get:
      description: Returns the platform service settings. This API returns the links
        to various settings available in this release.
      operationId: PSMSettings.getAll
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
            application/xml:
              schema:
                $ref: '#/components/schemas/Settings'
          description: successful operation
      summary: Get Available PSM Settings
      tags:
      - Platform Service Settings
      x-accepts: application/json
components:
  schemas:
    RoleBean:
      example:
        defaultRole: defaultRole
        roles:
        - roles
        - roles
        type: type
      properties:
        type:
          type: string
        roles:
          items:
            type: string
          type: array
        defaultRole:
          type: string
      type: object
    Roles:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - defaultRole: defaultRole
          roles:
          - roles
          - roles
          type: type
        - defaultRole: defaultRole
          roles:
          - roles
          - roles
          type: type
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/RoleBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    FilePathDetail:
      example:
        from: from
        to: to
      properties:
        to:
          type: string
        from:
          type: string
      type: object
    GenericEntity:
      example:
        type:
          typeName: typeName
        entity: '{}'
      properties:
        type:
          $ref: '#/components/schemas/Type'
        entity:
          properties: {}
          type: object
      type: object
    Type:
      example:
        typeName: typeName
      properties:
        typeName:
          type: string
      type: object
    CollectionResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - '{}'
        - '{}'
        properties:
          key: properties
      properties:
        count:
          format: int64
          type: integer
        items:
          items:
            properties: {}
            type: object
          type: array
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ZipFileDetails:
      example:
        path: path
      properties:
        path:
          type: string
      type: object
    ApplicationConfigEntry:
      example:
        configured: true
        description: description
        syntax: syntax
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        value: value
        key: key
        example: example
      properties:
        key:
          type: string
        description:
          type: string
        syntax:
          type: string
        example:
          type: string
        value:
          type: string
        configured:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    ApplicationConfigList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - configured: true
          description: description
          syntax: syntax
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
          key: key
          example: example
        - configured: true
          description: description
          syntax: syntax
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
          key: key
          example: example
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationConfigEntry'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Link:
      example:
        method: method
        rel: rel
        href: href
        type: type
      properties:
        rel:
          type: string
        href:
          type: string
        method:
          type: string
        type:
          type: string
      type: object
    Connection:
      example:
        schema: schema
        catalog: true
        description: description
        type: FILE
        walletPath: walletPath
        token: token
        sid: sid
        path: path
        password: password
        encrypted: true
        port: 0
        subtype: TEMPLATE
        service: service
        datasource: datasource
        name: name
        host: host
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        user: user
        dbURL: dbURL
        dbDriver: dbDriver
      properties:
        description:
          type: string
        name:
          type: string
        type:
          enum:
          - FILE
          - DB
          - ESSBASE
          - BI
          type: string
        path:
          type: string
        catalog:
          type: boolean
        host:
          type: string
        port:
          format: int32
          type: integer
        user:
          type: string
        password:
          type: string
        encrypted:
          type: boolean
        token:
          type: string
        sid:
          type: string
        service:
          type: string
        schema:
          type: string
        dbURL:
          type: string
        dbDriver:
          type: string
        datasource:
          type: string
        subtype:
          enum:
          - TEMPLATE
          - EXCELFILE
          - DB
          - DELIMITEDFILE
          - FIXEDWIDTHFILE
          - BI
          - ESSBASE
          - JDBC
          - SPARK
          - MS_SQL
          - MYSQL
          - DB2
          - ORACLE
          - FILE
          type: string
        walletPath:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - name
      - type
      type: object
      xml:
        name: connection
    ConnectionsList:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        count: 5
        hasMore: true
        items:
        - schema: schema
          catalog: true
          description: description
          type: FILE
          walletPath: walletPath
          token: token
          sid: sid
          path: path
          password: password
          encrypted: true
          port: 0
          subtype: TEMPLATE
          service: service
          datasource: datasource
          name: name
          host: host
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
          dbURL: dbURL
          dbDriver: dbDriver
        - schema: schema
          catalog: true
          description: description
          type: FILE
          walletPath: walletPath
          token: token
          sid: sid
          path: path
          password: password
          encrypted: true
          port: 0
          subtype: TEMPLATE
          service: service
          datasource: datasource
          name: name
          host: host
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
          dbURL: dbURL
          dbDriver: dbDriver
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    WalletLocation:
      example:
        path: path
      properties:
        path:
          type: string
      type: object
    ColumnType2:
      example:
        system: true
        nullable: true
        name: name
        format: format
        index: 0
        type: STRING
      properties:
        name:
          type: string
          xml:
            attribute: true
        type:
          enum:
          - STRING
          - DOUBLE
          - DATE
          - TIMESTAMP
          - LONG
          type: string
          xml:
            attribute: true
        nullable:
          type: boolean
          xml:
            attribute: true
        format:
          type: string
          xml:
            attribute: true
        index:
          format: int32
          type: integer
          xml:
            attribute: true
        system:
          type: boolean
          xml:
            attribute: true
      type: object
    ColumnsType:
      example:
        column:
        - system: true
          nullable: true
          name: name
          format: format
          index: 0
          type: STRING
        - system: true
          nullable: true
          name: name
          format: format
          index: 0
          type: STRING
      properties:
        column:
          items:
            $ref: '#/components/schemas/ColumnType2'
          type: array
          xml:
            name: Column
      required:
      - column
      type: object
    Datasource:
      example:
        headers:
        - name: name
          cell: cell
        - name: name
          cell: cell
        delimeter: delimeter
        startRow: 6
        headerRow: 5
        columns:
          column:
          - system: true
            nullable: true
            name: name
            format: format
            index: 0
            type: STRING
          - system: true
            nullable: true
            name: name
            format: format
            index: 0
            type: STRING
        query: query
        description: description
        endRow: 1
        widths:
        - 5
        - 5
        type: TEMPLATE
        customDelimiter: customDelimiter
        application: application
        queryParameters:
        - defaultValue: defaultValue
          name: name
          index: 2
          type: STRING
          required: true
        - defaultValue: defaultValue
          name: name
          index: 2
          type: STRING
          required: true
        name: name
        connection: connection
        sheet: sheet
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        cube: cube
        skipHiddenRows: true
        ignoreErrorRecords: true
      properties:
        type:
          enum:
          - TEMPLATE
          - EXCELFILE
          - DB
          - DELIMITEDFILE
          - FIXEDWIDTHFILE
          - BI
          - ESSBASE
          - JDBC
          - SPARK
          - MS_SQL
          - MYSQL
          - DB2
          - ORACLE
          - FILE
          type: string
        connection:
          type: string
        description:
          type: string
        columns:
          $ref: '#/components/schemas/ColumnsType'
        name:
          type: string
        ignoreErrorRecords:
          type: boolean
        delimeter:
          type: string
          xml:
            name: delimiter
        customDelimiter:
          type: string
        query:
          type: string
        application:
          type: string
        cube:
          type: string
        startRow:
          format: int64
          type: integer
        endRow:
          format: int64
          type: integer
        headerRow:
          format: int64
          type: integer
        sheet:
          type: string
        skipHiddenRows:
          type: boolean
        widths:
          items:
            format: int64
            type: integer
            xml:
              name: widths
          type: array
        queryParameters:
          items:
            $ref: '#/components/schemas/QueryParamsInfo'
          type: array
        headers:
          items:
            $ref: '#/components/schemas/HeaderType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - application
      - columns
      - connection
      - cube
      - description
      - query
      - sheet
      - startRow
      - type
      - widths
      type: object
      xml:
        name: datasource
    DatasourcesList:
      example:
        totalResults: 7
        offset: 3
        limit: 9
        count: 2
        hasMore: true
        items:
        - headers:
          - name: name
            cell: cell
          - name: name
            cell: cell
          delimeter: delimeter
          startRow: 6
          headerRow: 5
          columns:
            column:
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
          query: query
          description: description
          endRow: 1
          widths:
          - 5
          - 5
          type: TEMPLATE
          customDelimiter: customDelimiter
          application: application
          queryParameters:
          - defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          - defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          name: name
          connection: connection
          sheet: sheet
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          cube: cube
          skipHiddenRows: true
          ignoreErrorRecords: true
        - headers:
          - name: name
            cell: cell
          - name: name
            cell: cell
          delimeter: delimeter
          startRow: 6
          headerRow: 5
          columns:
            column:
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
          query: query
          description: description
          endRow: 1
          widths:
          - 5
          - 5
          type: TEMPLATE
          customDelimiter: customDelimiter
          application: application
          queryParameters:
          - defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          - defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          name: name
          connection: connection
          sheet: sheet
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          cube: cube
          skipHiddenRows: true
          ignoreErrorRecords: true
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Datasource'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    HeaderType:
      example:
        name: name
        cell: cell
      properties:
        name:
          type: string
          xml:
            attribute: true
        cell:
          type: string
          xml:
            attribute: true
      type: object
    QueryParamsInfo:
      example:
        defaultValue: defaultValue
        name: name
        index: 2
        type: STRING
        required: true
      properties:
        index:
          format: int32
          type: integer
        name:
          type: string
        defaultValue:
          type: string
        required:
          type: boolean
        type:
          enum:
          - STRING
          - DOUBLE
          - DATE
          - TIMESTAMP
          - LONG
          type: string
      type: object
    DatasourceQueryInfo:
      example:
        delimiter: delimiter
        query: query
        params:
          key: '{}'
      properties:
        query:
          type: string
        delimiter:
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    DSColumn:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
      xml:
        name: column
    ResultBean:
      example:
        columns:
        - name: name
          id: 0
        - name: name
          id: 0
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        columns:
          items:
            $ref: '#/components/schemas/DSColumn'
          type: array
      type: object
      xml:
        name: Results
    ReportBean:
      example:
        modifiedTime: 0
        sizeInBytes: 6
        lockedBy: lockedBy
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        locked: true
        lockedTime: 1
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        modifiedTime:
          format: int64
          type: integer
        sizeInBytes:
          format: int64
          type: integer
        lockedBy:
          type: string
        locked:
          type: boolean
        lockedTime:
          format: int64
          type: integer
        name:
          type: string
      type: object
    ReportList:
      example:
        totalResults: 5
        offset: 2
        limit: 5
        count: 7
        hasMore: true
        items:
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          lockedTime: 1
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          lockedTime: 1
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ReportBean'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    ColumnMappingInfo:
      example:
        generation: generation
        level: level
        generationNumber: 0
        type: DIMENSION
        dimension: dimension
      properties:
        dimension:
          type: string
        generation:
          type: string
        level:
          type: string
        type:
          enum:
          - DIMENSION
          - GENERATION
          - LEVEL0
          - PARENT_CHILD
          type: string
        generationNumber:
          format: int32
          type: integer
      type: object
    DrillthroughBean:
      example:
        columns:
        - columns
        - columns
        parameterMapping:
          key:
            generation: generation
            level: level
            generationNumber: 6
            type: DIMENSION
            dimension: dimension
        useTempTables: true
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        drillableRegions:
        - drillableRegions
        - drillableRegions
        type: type
        dataSourceName: dataSourceName
        url: url
        columnMapping:
          key:
            generation: generation
            level: level
            generationNumber: 0
            type: DIMENSION
            dimension: dimension
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        dataSourceName:
          type: string
        url:
          type: string
        columnMapping:
          additionalProperties:
            $ref: '#/components/schemas/ColumnMappingInfo'
          type: object
        columns:
          items:
            type: string
          type: array
        drillableRegions:
          items:
            type: string
          type: array
        parameterMapping:
          additionalProperties:
            $ref: '#/components/schemas/RunTimeParametersInfo'
          type: object
        useTempTables:
          type: boolean
        type:
          type: string
        name:
          type: string
      type: object
    RunTimeParametersInfo:
      example:
        generation: generation
        level: level
        generationNumber: 6
        type: DIMENSION
        dimension: dimension
      properties:
        dimension:
          type: string
        generation:
          type: string
        level:
          type: string
        type:
          enum:
          - DIMENSION
          - GENERATION
          - LEVEL0
          - PARENT_CHILD
          type: string
        generationNumber:
          format: int32
          type: integer
      type: object
    ServerConfiguration:
      example:
        password: password
        folder: folder
        port: 0
        messageAction: messageAction
        host: host
        messageLocation: messageLocation
        user: user
      properties:
        host:
          type: string
        port:
          format: int32
          type: integer
        user:
          type: string
        password:
          type: string
        folder:
          type: string
        messageAction:
          type: string
        messageLocation:
          type: string
      type: object
    ListLinkResponseObject:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    FilterBean:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        rows:
        - access: access
          mbrSpec: mbrSpec
        - access: access
          mbrSpec: mbrSpec
      properties:
        name:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/FilterRow'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    FilterList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          rows:
          - access: access
            mbrSpec: mbrSpec
          - access: access
            mbrSpec: mbrSpec
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          rows:
          - access: access
            mbrSpec: mbrSpec
          - access: access
            mbrSpec: mbrSpec
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/FilterBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    FilterRow:
      example:
        access: access
        mbrSpec: mbrSpec
      properties:
        access:
          type: string
        mbrSpec:
          type: string
      required:
      - access
      - mbrSpec
      type: object
    FilterCopy:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
      type: object
    UserGroupProvisionInfo:
      example:
        role: role
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        group: true
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        name:
          type: string
        role:
          type: string
        group:
          type: boolean
      type: object
      xml:
        name: permission
    UserGroupProvisionInfoList:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - role: role
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          group: true
        - role: role
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          group: true
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserGroupProvisionInfo'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: result
    FilterRowList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - access: access
          mbrSpec: mbrSpec
        - access: access
          mbrSpec: mbrSpec
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/FilterRow'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    GroupBean:
      example:
        role: role
        name: name
        description: description
        groups:
        - groups
        - groups
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        role:
          type: string
        description:
          type: string
        groups:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    Groups:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - role: role
          name: name
          description: description
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        - role: role
          name: name
          description: description
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/GroupBean'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    UserBean:
      example:
        password: password
        role: role
        name: name
        groups:
        - groups
        - groups
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        email: email
        token: token
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        token:
          type: string
        role:
          type: string
        groups:
          items:
            type: string
          type: array
        email:
          type: string
        password:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: User
    Users:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - password: password
          role: role
          name: name
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          email: email
          token: token
        - password: password
          role: role
          name: name
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          email: email
          token: token
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserBean'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    InputStream:
      type: object
    JobRecordBean:
      example:
        appName: appName
        jobfileName: jobfileName
        dbName: dbName
        userName: userName
        statusMessage: statusMessage
        job_ID: 0
        startTime: 6
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        endTime: 1
        jobInputInfo:
          key: '{}'
        jobType: jobType
        statusCode: 5
        jobOutputInfo:
          key: '{}'
      properties:
        job_ID:
          format: int64
          type: integer
        appName:
          type: string
        dbName:
          type: string
        jobType:
          type: string
        jobfileName:
          type: string
        userName:
          type: string
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          type: integer
        statusCode:
          format: int32
          type: integer
        statusMessage:
          type: string
        jobInputInfo:
          additionalProperties:
            properties: {}
            type: object
          type: object
        jobOutputInfo:
          additionalProperties:
            properties: {}
            type: object
          type: object
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    CompactDesignation:
      example:
        columnOffset: 0
        fastAnalysis: true
        minDate: 2000-01-23T04:56:07.000+00:00
        nr: 6
        nrh: 1
        excelSheetName: excelSheetName
        measureDimensionName: measureDimensionName
        query: query
        dateDimString: dateDimString
        dimDesignationMode: DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
        bsoLimitsExceeded: true
        tableName: tableName
        namingPriority: NONE
        dimCompactDesignationList:
        - uniqCount:
          - 9
          - 9
          genNames:
          - genNames
          - genNames
          colNames:
          - colNames
          - colNames
          headerText:
          - headerText
          - headerText
          columnTypes:
          - TEXT
          - TEXT
          query: query
          attNames:
          - attNames
          - attNames
          fkcolumnNumber: 3
          dimGenColumns:
          - 2
          - 2
          dimJoin: dimJoin
          essbaseConnection: essbaseConnection
          dimName: dimName
          attribute:
          - 7
          - 7
        - uniqCount:
          - 9
          - 9
          genNames:
          - genNames
          - genNames
          colNames:
          - colNames
          - colNames
          headerText:
          - headerText
          - headerText
          columnTypes:
          - TEXT
          - TEXT
          query: query
          attNames:
          - attNames
          - attNames
          fkcolumnNumber: 3
          dimGenColumns:
          - 2
          - 2
          dimJoin: dimJoin
          essbaseConnection: essbaseConnection
          dimName: dimName
          attribute:
          - 7
          - 7
        file: file
        dateFormatString: dateFormatString
        compactDesignationColumn:
        - externalDimName: externalDimName
          originalHeaderName: originalHeaderName
          objectName: objectName
          formula: formula
          referenceObjectName: referenceObjectName
          objectType: objectType
          dimensionAlias: dimensionAlias
          solveOrder: 5
        - externalDimName: externalDimName
          originalHeaderName: originalHeaderName
          objectName: objectName
          formula: formula
          referenceObjectName: referenceObjectName
          objectType: objectType
          dimensionAlias: dimensionAlias
          solveOrder: 5
        badRowListString: badRowListString
        dateColumnId: 5
        maxDate: 2000-01-23T04:56:07.000+00:00
        dateDimensionLeaves:
        - dateDimensionLeaves
        - dateDimensionLeaves
      properties:
        file:
          type: string
        excelSheetName:
          type: string
        columnOffset:
          format: int32
          type: integer
        badRowListString:
          type: string
        nr:
          format: int32
          type: integer
        nrh:
          format: int32
          type: integer
        compactDesignationColumn:
          items:
            $ref: '#/components/schemas/CompactDesignationColumn'
          type: array
        bsoLimitsExceeded:
          type: boolean
        fastAnalysis:
          type: boolean
        measureDimensionName:
          type: string
        dimDesignationMode:
          enum:
          - DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
          - DIM_DESIGNATION_MODE_ATTRIBS_AS_FLAT_DIMS
          - DIM_DESIGNATION_MODE_ALL_FLAT
          - DIM_DESIGNATION_MODE_OAV
          - DIM_DESIGNATION_MODE_OAV_DIM
          - CONVERT_TO_CSV
          - DIM_DESIGNATION_MODE_ATTRIBS_AS_ATTRIBS
          type: string
        namingPriority:
          enum:
          - NONE
          - GENERATIONS
          - DIMENSIONS
          type: string
        dateColumnId:
          format: int32
          type: integer
        dateFormatString:
          type: string
        dateDimString:
          type: string
        dateDimensionLeaves:
          items:
            type: string
          type: array
        maxDate:
          format: date-time
          type: string
        minDate:
          format: date-time
          type: string
        tableName:
          type: string
        dimCompactDesignationList:
          items:
            $ref: '#/components/schemas/DimCompactDesignation'
          type: array
        query:
          type: string
      type: object
    CompactDesignationColumn:
      example:
        externalDimName: externalDimName
        originalHeaderName: originalHeaderName
        objectName: objectName
        formula: formula
        referenceObjectName: referenceObjectName
        objectType: objectType
        dimensionAlias: dimensionAlias
        solveOrder: 5
      properties:
        originalHeaderName:
          type: string
        objectName:
          type: string
        referenceObjectName:
          type: string
        objectType:
          type: string
        formula:
          type: string
        dimensionAlias:
          type: string
        externalDimName:
          type: string
        solveOrder:
          format: int32
          type: integer
      type: object
    DimCompactDesignation:
      example:
        uniqCount:
        - 9
        - 9
        genNames:
        - genNames
        - genNames
        colNames:
        - colNames
        - colNames
        headerText:
        - headerText
        - headerText
        columnTypes:
        - TEXT
        - TEXT
        query: query
        attNames:
        - attNames
        - attNames
        fkcolumnNumber: 3
        dimGenColumns:
        - 2
        - 2
        dimJoin: dimJoin
        essbaseConnection: essbaseConnection
        dimName: dimName
        attribute:
        - 7
        - 7
      properties:
        query:
          type: string
        essbaseConnection:
          type: string
        genNames:
          items:
            type: string
          type: array
        colNames:
          items:
            type: string
          type: array
        dimGenColumns:
          items:
            format: int32
            type: integer
          type: array
        attribute:
          items:
            format: int32
            type: integer
          type: array
        dimJoin:
          type: string
        dimName:
          type: string
        attNames:
          items:
            type: string
          type: array
        columnTypes:
          items:
            enum:
            - TEXT
            - INTEGER
            - FLOAT
            - TIME
            - DATE
            - BOOLEAN
            - EMPTY
            - UNKNOWN
            - OUT_OF_RANGE
            type: string
          type: array
        uniqCount:
          items:
            format: int32
            type: integer
          type: array
        headerText:
          items:
            type: string
          type: array
        fkcolumnNumber:
          format: int32
          type: integer
      type: object
    JobsInputBean:
      example:
        application: application
        jobtype: jobtype
        parameters:
          filesystemcopy: filesystemcopy
          data: data
          analyzeFileName: analyzeFileName
          rtsv:
          - singleChoice: true
            name: name
            allowMissing: true
            limit: limit
            description: description
            type: STRING
            dimension: dimension
            value: '{}'
          - singleChoice: true
            name: name
            allowMissing: true
            limit: limit
            description: description
            type: STRING
            dimension: dimension
            value: '{}'
          password: password
          appId: appId
          loaddata: loaddata
          connection: connection
          overwrite: overwrite
          restructureOption: restructureOption
          targetApplicationName: targetApplicationName
          compress: compress
          executeScript: executeScript
          buildMethod: buildMethod
          deleteExcelOnSuccess: deleteExcelOnSuccess
          generateArtifactList: generateArtifactList
          script: script
          commitOption: commitOption
          unstructuredAnalysis:
            columnOffset: 0
            fastAnalysis: true
            minDate: 2000-01-23T04:56:07.000+00:00
            nr: 6
            nrh: 1
            excelSheetName: excelSheetName
            measureDimensionName: measureDimensionName
            query: query
            dateDimString: dateDimString
            dimDesignationMode: DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
            bsoLimitsExceeded: true
            tableName: tableName
            namingPriority: NONE
            dimCompactDesignationList:
            - uniqCount:
              - 9
              - 9
              genNames:
              - genNames
              - genNames
              colNames:
              - colNames
              - colNames
              headerText:
              - headerText
              - headerText
              columnTypes:
              - TEXT
              - TEXT
              query: query
              attNames:
              - attNames
              - attNames
              fkcolumnNumber: 3
              dimGenColumns:
              - 2
              - 2
              dimJoin: dimJoin
              essbaseConnection: essbaseConnection
              dimName: dimName
              attribute:
              - 7
              - 7
            - uniqCount:
              - 9
              - 9
              genNames:
              - genNames
              - genNames
              colNames:
              - colNames
              - colNames
              headerText:
              - headerText
              - headerText
              columnTypes:
              - TEXT
              - TEXT
              query: query
              attNames:
              - attNames
              - attNames
              fkcolumnNumber: 3
              dimGenColumns:
              - 2
              - 2
              dimJoin: dimJoin
              essbaseConnection: essbaseConnection
              dimName: dimName
              attribute:
              - 7
              - 7
            file: file
            dateFormatString: dateFormatString
            compactDesignationColumn:
            - externalDimName: externalDimName
              originalHeaderName: originalHeaderName
              objectName: objectName
              formula: formula
              referenceObjectName: referenceObjectName
              objectType: objectType
              dimensionAlias: dimensionAlias
              solveOrder: 5
            - externalDimName: externalDimName
              originalHeaderName: originalHeaderName
              objectName: objectName
              formula: formula
              referenceObjectName: referenceObjectName
              objectType: objectType
              dimensionAlias: dimensionAlias
              solveOrder: 5
            badRowListString: badRowListString
            dateColumnId: 5
            maxDate: 2000-01-23T04:56:07.000+00:00
            dateDimensionLeaves:
            - dateDimensionLeaves
            - dateDimensionLeaves
          enableSandboxing: enableSandboxing
          catalogExcelPath: catalogExcelPath
          analyzeSheetName: analyzeSheetName
          includeServerLevel: includeServerLevel
          force: force
          bufferId: 2
          dataLevel: dataLevel
          option: option
          discoverDimensionTables: discoverDimensionTables
          forceDimBuild: forceDimBuild
          termOption: termOption
          useConnection: useConnection
          rule: rule
          dimDesignationMode: dimDesignationMode
          basedOnQueryData: basedOnQueryData
          disasterRecovery: disasterRecovery
          skipdata: skipdata
          buildOption: buildOption
          backupType: backupType
          lcmImportFromStorage: lcmImportFromStorage
          recreateApplication: recreateApplication
          file: file
          enableAlternateRollups: enableAlternateRollups
          exportDynamicBlocks: exportDynamicBlocks
          columnFormat: columnFormat
          timestamp: timestamp
          abortOnError: abortOnError
          zipFileName: zipFileName
          threads: threads
          dbType: dbType
          verbose: verbose
          actionType: actionType
          bufferIds:
          - 4
          - 4
          selectedDimensions:
          - selectedDimensions
          - selectedDimensions
          createFiles: createFiles
          artifactList: artifactList
          calc: calc
          user: user
          importExcelFileName: importExcelFileName
          copyToStorage: copyToStorage
          partialDataExpression: partialDataExpression
          ratioToStop: ratioToStop
          maxParallel: maxParallel
        db: db
      properties:
        application:
          type: string
        db:
          type: string
        jobtype:
          type: string
        parameters:
          $ref: '#/components/schemas/ParametersBean'
      required:
      - application
      - db
      - jobtype
      type: object
    ParametersBean:
      example:
        filesystemcopy: filesystemcopy
        data: data
        analyzeFileName: analyzeFileName
        rtsv:
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: '{}'
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: '{}'
        password: password
        appId: appId
        loaddata: loaddata
        connection: connection
        overwrite: overwrite
        restructureOption: restructureOption
        targetApplicationName: targetApplicationName
        compress: compress
        executeScript: executeScript
        buildMethod: buildMethod
        deleteExcelOnSuccess: deleteExcelOnSuccess
        generateArtifactList: generateArtifactList
        script: script
        commitOption: commitOption
        unstructuredAnalysis:
          columnOffset: 0
          fastAnalysis: true
          minDate: 2000-01-23T04:56:07.000+00:00
          nr: 6
          nrh: 1
          excelSheetName: excelSheetName
          measureDimensionName: measureDimensionName
          query: query
          dateDimString: dateDimString
          dimDesignationMode: DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
          bsoLimitsExceeded: true
          tableName: tableName
          namingPriority: NONE
          dimCompactDesignationList:
          - uniqCount:
            - 9
            - 9
            genNames:
            - genNames
            - genNames
            colNames:
            - colNames
            - colNames
            headerText:
            - headerText
            - headerText
            columnTypes:
            - TEXT
            - TEXT
            query: query
            attNames:
            - attNames
            - attNames
            fkcolumnNumber: 3
            dimGenColumns:
            - 2
            - 2
            dimJoin: dimJoin
            essbaseConnection: essbaseConnection
            dimName: dimName
            attribute:
            - 7
            - 7
          - uniqCount:
            - 9
            - 9
            genNames:
            - genNames
            - genNames
            colNames:
            - colNames
            - colNames
            headerText:
            - headerText
            - headerText
            columnTypes:
            - TEXT
            - TEXT
            query: query
            attNames:
            - attNames
            - attNames
            fkcolumnNumber: 3
            dimGenColumns:
            - 2
            - 2
            dimJoin: dimJoin
            essbaseConnection: essbaseConnection
            dimName: dimName
            attribute:
            - 7
            - 7
          file: file
          dateFormatString: dateFormatString
          compactDesignationColumn:
          - externalDimName: externalDimName
            originalHeaderName: originalHeaderName
            objectName: objectName
            formula: formula
            referenceObjectName: referenceObjectName
            objectType: objectType
            dimensionAlias: dimensionAlias
            solveOrder: 5
          - externalDimName: externalDimName
            originalHeaderName: originalHeaderName
            objectName: objectName
            formula: formula
            referenceObjectName: referenceObjectName
            objectType: objectType
            dimensionAlias: dimensionAlias
            solveOrder: 5
          badRowListString: badRowListString
          dateColumnId: 5
          maxDate: 2000-01-23T04:56:07.000+00:00
          dateDimensionLeaves:
          - dateDimensionLeaves
          - dateDimensionLeaves
        enableSandboxing: enableSandboxing
        catalogExcelPath: catalogExcelPath
        analyzeSheetName: analyzeSheetName
        includeServerLevel: includeServerLevel
        force: force
        bufferId: 2
        dataLevel: dataLevel
        option: option
        discoverDimensionTables: discoverDimensionTables
        forceDimBuild: forceDimBuild
        termOption: termOption
        useConnection: useConnection
        rule: rule
        dimDesignationMode: dimDesignationMode
        basedOnQueryData: basedOnQueryData
        disasterRecovery: disasterRecovery
        skipdata: skipdata
        buildOption: buildOption
        backupType: backupType
        lcmImportFromStorage: lcmImportFromStorage
        recreateApplication: recreateApplication
        file: file
        enableAlternateRollups: enableAlternateRollups
        exportDynamicBlocks: exportDynamicBlocks
        columnFormat: columnFormat
        timestamp: timestamp
        abortOnError: abortOnError
        zipFileName: zipFileName
        threads: threads
        dbType: dbType
        verbose: verbose
        actionType: actionType
        bufferIds:
        - 4
        - 4
        selectedDimensions:
        - selectedDimensions
        - selectedDimensions
        createFiles: createFiles
        artifactList: artifactList
        calc: calc
        user: user
        importExcelFileName: importExcelFileName
        copyToStorage: copyToStorage
        partialDataExpression: partialDataExpression
        ratioToStop: ratioToStop
        maxParallel: maxParallel
      properties:
        rule:
          type: string
        file:
          type: string
        abortOnError:
          type: string
        restructureOption:
          type: string
        forceDimBuild:
          type: string
        script:
          type: string
        option:
          type: string
        loaddata:
          type: string
        useConnection:
          type: string
        connection:
          type: string
        user:
          type: string
        password:
          type: string
        calc:
          type: string
        buildMethod:
          type: string
        data:
          type: string
        zipFileName:
          type: string
        skipdata:
          type: string
        threads:
          type: string
        overwrite:
          type: string
        lcmImportFromStorage:
          type: string
        analyzeFileName:
          type: string
        analyzeSheetName:
          type: string
        deleteExcelOnSuccess:
          type: string
        catalogExcelPath:
          type: string
        importExcelFileName:
          type: string
        recreateApplication:
          type: string
        createFiles:
          type: string
        executeScript:
          type: string
        buildOption:
          type: string
        copyToStorage:
          type: string
        filesystemcopy:
          type: string
        dataLevel:
          type: string
        columnFormat:
          type: string
        targetApplicationName:
          type: string
        partialDataExpression:
          type: string
        includeServerLevel:
          type: string
          xml:
            attribute: true
            name: include-server-level
        enableSandboxing:
          type: string
        dbType:
          type: string
        dimDesignationMode:
          type: string
        unstructuredAnalysis:
          $ref: '#/components/schemas/CompactDesignation'
        ratioToStop:
          type: string
        basedOnQueryData:
          type: string
        enableAlternateRollups:
          type: string
        compress:
          type: string
        generateArtifactList:
          type: string
          xml:
            attribute: true
            name: generateartifactlist
        artifactList:
          type: string
        verbose:
          type: string
        disasterRecovery:
          type: string
        force:
          type: string
        backupType:
          type: string
        appId:
          type: string
        timestamp:
          type: string
        maxParallel:
          type: string
        selectedDimensions:
          items:
            type: string
          type: array
        rtsv:
          items:
            $ref: '#/components/schemas/RTSV'
          type: array
        bufferId:
          format: int32
          type: integer
        bufferIds:
          items:
            format: int32
            type: integer
          type: array
        commitOption:
          type: string
        actionType:
          type: string
        termOption:
          type: string
        discoverDimensionTables:
          type: string
        exportDynamicBlocks:
          type: string
      type: object
    RTSV:
      example:
        singleChoice: true
        name: name
        allowMissing: true
        limit: limit
        description: description
        type: STRING
        dimension: dimension
        value: '{}'
      properties:
        name:
          type: string
        description:
          type: string
        allowMissing:
          type: boolean
        dimension:
          type: string
        singleChoice:
          type: boolean
        type:
          enum:
          - STRING
          - NUMBER
          - DATE
          - MEMBER
          type: string
        value:
          properties: {}
          type: object
        limit:
          type: string
      type: object
    JobStatisticsBean:
      example:
        runningCt: 5
        errCt: 0
        succesCt: 6
        warningCt: 1
      properties:
        errCt:
          format: int64
          type: integer
        succesCt:
          format: int64
          type: integer
        warningCt:
          format: int64
          type: integer
        runningCt:
          format: int64
          type: integer
      type: object
    JobRecordPaginatedResultWrapper:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        hasMore: true
        count: 5
        items:
        - appName: appName
          jobfileName: jobfileName
          dbName: dbName
          userName: userName
          statusMessage: statusMessage
          job_ID: 0
          startTime: 6
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          endTime: 1
          jobInputInfo:
            key: '{}'
          jobType: jobType
          statusCode: 5
          jobOutputInfo:
            key: '{}'
        - appName: appName
          jobfileName: jobfileName
          dbName: dbName
          userName: userName
          statusMessage: statusMessage
          job_ID: 0
          startTime: 6
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          endTime: 1
          jobInputInfo:
            key: '{}'
          jobType: jobType
          statusCode: 5
          jobOutputInfo:
            key: '{}'
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/JobRecordBean'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    LocationAliasBean:
      example:
        aliasName: aliasName
        databaseName: databaseName
        applicationLevelConnection: true
        serverName: serverName
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        connectionName: connectionName
        userName: userName
        applicationName: applicationName
      properties:
        aliasName:
          type: string
        connectionName:
          type: string
        serverName:
          type: string
        userName:
          type: string
        applicationName:
          type: string
        databaseName:
          type: string
        applicationLevelConnection:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    LocationAliasList:
      example:
        totalResults: 1
        offset: 0
        limit: 6
        count: 5
        hasMore: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - aliasName: aliasName
          databaseName: databaseName
          applicationLevelConnection: true
          serverName: serverName
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          connectionName: connectionName
          userName: userName
          applicationName: applicationName
        - aliasName: aliasName
          databaseName: databaseName
          applicationLevelConnection: true
          serverName: serverName
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          connectionName: connectionName
          userName: userName
          applicationName: applicationName
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/LocationAliasBean'
          type: array
        offset:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    LockObject:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        time: 0
        type: OUTLINE
        user: user
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        user:
          type: string
        type:
          enum:
          - OUTLINE
          - CALCSCRIPT
          - REPORT
          - RULES
          - ALIAS
          - STRUCTURE
          - ASCBACKUP
          - BINBACKUP
          - EXCEL
          - XLSX
          - XLSM
          - MAXL
          - ZIP
          - CSV
          - LOTUS2
          - LOTUS3
          - TEXT
          - LOTUS4
          - WIZARD
          - PARTITION
          - SELECTION
          - LRO
          - EQD
          - XML
          - JAVA_CDF
          - MAX
          - BACKUP
          - WORKSHEET
          - DATA
          - ERROR
          - OUT
          - GROOVY
          - DRILLTHROUGH
          - ALL
          - MDX
          type: string
        time:
          format: int64
          type: integer
        name:
          type: string
      type: object
    LockObjectList:
      example:
        totalResults: 6
        offset: 5
        limit: 1
        count: 5
        hasMore: true
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          type: OUTLINE
          user: user
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          type: OUTLINE
          user: user
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/LockObject'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    LockBlock:
      example:
        duration: 6
        count: 0
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        user: user
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        user:
          type: string
        count:
          format: int32
          type: integer
        duration:
          format: int32
          type: integer
      type: object
    LockBlockList:
      example:
        totalResults: 1
        offset: 5
        limit: 5
        count: 2
        hasMore: true
        items:
        - duration: 6
          count: 0
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        - duration: 6
          count: 0
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/LockBlock'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    About:
      example:
        build: build
        name: name
        description: description
        version: version
      properties:
        name:
          type: string
        version:
          type: string
        build:
          type: string
        description:
          type: string
      type: object
      xml:
        name: about
    CopyRenameBean:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
      type: object
    CubeCopy:
      example:
        from: from
        to:
          database: database
          application: application
      properties:
        from:
          type: string
        to:
          $ref: '#/components/schemas/To'
      required:
      - from
      - to
      type: object
    To:
      example:
        database: database
        application: application
      properties:
        database:
          type: string
        application:
          type: string
      required:
      - database
      type: object
    Cube:
      example:
        owner: owner
        modifiedTime: 6
        applicationRole: applicationRole
        application: application
        creationTime: 0
        name: name
        description: description
        modifiedBy: modifiedBy
        startTime: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: ASO
        status: status
      properties:
        name:
          type: string
        application:
          type: string
        owner:
          type: string
        creationTime:
          format: int64
          type: integer
        modifiedBy:
          type: string
        modifiedTime:
          format: int64
          type: integer
        status:
          type: string
        startTime:
          format: int64
          type: integer
        description:
          type: string
        type:
          enum:
          - ASO
          - BSO
          type: string
        applicationRole:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    CubeList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - owner: owner
          modifiedTime: 6
          applicationRole: applicationRole
          application: application
          creationTime: 0
          name: name
          description: description
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: ASO
          status: status
        - owner: owner
          modifiedTime: 6
          applicationRole: applicationRole
          application: application
          creationTime: 0
          name: name
          description: description
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: ASO
          status: status
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Cube'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Application:
      example:
        owner: owner
        modifiedTime: 6
        role: role
        creationTime: 0
        name: name
        description: description
        modifiedBy: modifiedBy
        startTime: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: ASO
        status: status
        connectedUsersCount: 5
      properties:
        name:
          type: string
        owner:
          type: string
        creationTime:
          format: int64
          type: integer
        modifiedBy:
          type: string
        modifiedTime:
          format: int64
          type: integer
        status:
          type: string
        description:
          type: string
        type:
          enum:
          - ASO
          - BSO
          type: string
        startTime:
          format: int64
          type: integer
        connectedUsersCount:
          format: int32
          type: integer
        role:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    CreateApplication:
      example:
        databaseType: databaseType
        memberPrefix: memberPrefix
        databaseName: databaseName
        appType: NATIVE
        enableScenario: true
        memberCount: 0
        dbType: NORMAL
        allowDuplicates: true
        applicationName: applicationName
      properties:
        applicationName:
          type: string
        databaseName:
          type: string
        allowDuplicates:
          type: boolean
        enableScenario:
          type: boolean
        memberCount:
          format: int32
          type: integer
        databaseType:
          type: string
        dbType:
          enum:
          - NORMAL
          - CURRENCY
          - ASO
          type: string
        appType:
          enum:
          - NATIVE
          - UTF8
          type: string
        memberPrefix:
          type: string
      type: object
    ApplicationList:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        count: 5
        hasMore: true
        items:
        - owner: owner
          modifiedTime: 6
          role: role
          creationTime: 0
          name: name
          description: description
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: ASO
          status: status
          connectedUsersCount: 5
        - owner: owner
          modifiedTime: 6
          role: role
          creationTime: 0
          name: name
          description: description
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: ASO
          status: status
          connectedUsersCount: 5
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Application'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    StringCollectionResponse:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        count: 5
        hasMore: true
        items:
        - items
        - items
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            type: string
          type: array
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: Result
    BOEOutput:
      example:
        messages: messages
      properties:
        messages:
          type: string
      type: object
    JAXBElement:
      properties:
        name:
          $ref: '#/components/schemas/QName'
        value:
          properties: {}
          type: object
        nil:
          type: boolean
        globalScope:
          type: boolean
        typeSubstituted:
          type: boolean
      type: object
    JAXBElementObject:
      example:
        nil: true
        typeSubstituted: true
        globalScope: true
        name:
          localPart: localPart
          prefix: prefix
          namespaceURI: namespaceURI
        value: '{}'
      properties:
        name:
          $ref: '#/components/schemas/QName'
        value:
          properties: {}
          type: object
        nil:
          type: boolean
        globalScope:
          type: boolean
        typeSubstituted:
          type: boolean
      type: object
    OtlEditMain:
      example:
        keepTransaction: true
        validateFormulas: true
        jsonformatLog: true
        otlVersion: 0
        restructOption: ALL_DATA
        editActions:
        - nil: true
          typeSubstituted: true
          globalScope: true
          name:
            localPart: localPart
            prefix: prefix
            namespaceURI: namespaceURI
          value: '{}'
        - nil: true
          typeSubstituted: true
          globalScope: true
          name:
            localPart: localPart
            prefix: prefix
            namespaceURI: namespaceURI
          value: '{}'
        validate: true
      properties:
        editActions:
          items:
            $ref: '#/components/schemas/JAXBElementObject'
          type: array
        otlVersion:
          type: integer
          xml:
            attribute: true
        validate:
          type: boolean
          xml:
            attribute: true
        validateFormulas:
          type: boolean
          xml:
            attribute: true
        keepTransaction:
          type: boolean
          xml:
            attribute: true
        restructOption:
          enum:
          - ALL_DATA
          - NO_DATA
          - LOW_DATA
          - IN_DATA
          type: string
          xml:
            attribute: true
        jsonformatLog:
          type: boolean
      type: object
      xml:
        name: otlEditMain
        namespace: mbredit
    QName:
      example:
        localPart: localPart
        prefix: prefix
        namespaceURI: namespaceURI
      properties:
        namespaceURI:
          type: string
        localPart:
          type: string
        prefix:
          type: string
      type: object
    DBSizeList:
      example:
        totalResults: 1
        offset: 5
        limit: 5
        count: 2
        hasMore: true
        items:
        - name: name
          pageSize: 0
          indexSize: 6
        - name: name
          pageSize: 0
          indexSize: 6
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatabaseSizeStatistics'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    DatabaseSizeStatistics:
      example:
        name: name
        pageSize: 0
        indexSize: 6
      properties:
        name:
          type: string
        pageSize:
          format: int64
          type: integer
        indexSize:
          format: int64
          type: integer
      type: object
    DimensionBean:
      example:
        storedMembers: 6
        members: 0
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        members:
          format: int32
          type: integer
        storedMembers:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    DimensionList:
      example:
        totalResults: 5
        offset: 2
        count: 1
        hasMore: true
        limit: 5
        items:
        - storedMembers: 6
          members: 0
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: type
        - storedMembers: 6
          members: 0
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: type
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DimensionBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    GenerationLevel:
      example:
        actualName: actualName
        number: 0
        unique: true
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        name:
          type: string
        actualName:
          type: string
        number:
          format: int32
          type: integer
        unique:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    GenerationLevelList:
      example:
        totalResults: 1
        offset: 5
        count: 6
        hasMore: true
        limit: 5
        items:
        - actualName: actualName
          number: 0
          unique: true
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        - actualName: actualName
          number: 0
          unique: true
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/GenerationLevel'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Preference:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    AVClientInfo:
      example:
        port: 0
        host: host
        enabled: true
      properties:
        enabled:
          type: boolean
        host:
          type: string
        port:
          format: int32
          type: integer
      type: object
    ResetPasswordBean:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      type: object
    Resource:
      example:
        path: path
        provider: provider
        name: name
        description: description
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        mimeType: mimeType
        category: category
        url: url
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        provider:
          type: string
        path:
          type: string
        mimeType:
          type: string
        category:
          type: string
        url:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    ResourceList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - path: path
          provider: provider
          name: name
          description: description
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          mimeType: mimeType
          category: category
          url: url
        - path: path
          provider: provider
          name: name
          description: description
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          mimeType: mimeType
          category: category
          url: url
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    DataLoadBuffer:
      example:
        duplicateAggregationMethod: ADD
        resourceUsage: 6
        loadBufferOptions: IGNORE_NONE
        bufferId: 0
      properties:
        bufferId:
          format: int64
          type: integer
        duplicateAggregationMethod:
          enum:
          - ADD
          - ASSUME_EQUAL
          - USE_LAST
          type: string
        loadBufferOptions:
          enum:
          - IGNORE_NONE
          - IGNORE_MISSING_VALUES
          - IGNORE_ZERO_VALUES
          - IGNORE_MISSING_AND_ZERO_VALUES
          type: string
        resourceUsage:
          description: Percentage of the total load buffer resources that the load
            buffer will be allowed to use; must be within [0, 100], and the value
            of 0 is interpreted as default, which is currently 100.
          format: int64
          type: integer
      type: object
    LoadBuffersList:
      example:
        totalResults: 1
        offset: 2
        count: 5
        hasMore: true
        limit: 5
        items:
        - duplicateAggregationMethod: ADD
          resourceUsage: 6
          loadBufferOptions: IGNORE_NONE
          bufferId: 0
        - duplicateAggregationMethod: ADD
          resourceUsage: 6
          loadBufferOptions: IGNORE_NONE
          bufferId: 0
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DataLoadBuffer'
          type: array
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    MergeSilceOption:
      example:
        mergeOption: ALL
      properties:
        mergeOption:
          enum:
          - ALL
          - INCREMENTAL
          type: string
      type: object
    ColumnSuppression:
      example:
        zero: true
        emptyBlocks: true
        noAccess: true
        underScore: true
        invalid: true
        missing: true
        error: true
        derived: true
      properties:
        invalid:
          type: boolean
        derived:
          type: boolean
        missing:
          type: boolean
        zero:
          type: boolean
        underScore:
          type: boolean
        noAccess:
          type: boolean
        emptyBlocks:
          type: boolean
        error:
          type: boolean
      type: object
    FormulaRetention:
      example:
        retrive: true
        comments: true
        focus: true
        zoom: true
        fill: true
      properties:
        comments:
          type: boolean
        zoom:
          type: boolean
        focus:
          type: boolean
        retrive:
          type: boolean
        fill:
          type: boolean
      type: object
    Preferences:
      example:
        navigate: true
        cellText: true
        includeDescriptionLabel: true
        removeUnSelectedGroup: true
        zoomIn:
          mode: CHILDREN
          ancestor: TOP
        missingText: missingText
        repeatMemberLabels: true
        noAccessText: noAccessText
        maxColumns: 6
        maxRows: 0
        rowSupression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          invalid: true
          missing: true
          error: true
          derived: true
        indentation: NONE
        includeSelection: true
        withinSelectedGroup: true
        columnSupression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          invalid: true
          missing: true
          error: true
          derived: true
        formulaRetention:
          retrive: true
          comments: true
          focus: true
          zoom: true
          fill: true
      properties:
        maxRows:
          format: int64
          type: integer
        indentation:
          enum:
          - NONE
          - SUBITEMS
          - TOTALS
          type: string
        navigate:
          type: boolean
        includeSelection:
          type: boolean
        repeatMemberLabels:
          type: boolean
        withinSelectedGroup:
          type: boolean
        removeUnSelectedGroup:
          type: boolean
        includeDescriptionLabel:
          type: boolean
        missingText:
          type: string
        noAccessText:
          type: string
        formulaRetention:
          $ref: '#/components/schemas/FormulaRetention'
        maxColumns:
          format: int64
          type: integer
        rowSupression:
          $ref: '#/components/schemas/RowSuppression'
        columnSupression:
          $ref: '#/components/schemas/ColumnSuppression'
        cellText:
          type: boolean
        zoomIn:
          $ref: '#/components/schemas/ZoomIn'
      type: object
    RowSuppression:
      example:
        zero: true
        emptyBlocks: true
        noAccess: true
        underScore: true
        invalid: true
        missing: true
        error: true
        derived: true
      properties:
        invalid:
          type: boolean
        derived:
          type: boolean
        missing:
          type: boolean
        zero:
          type: boolean
        underScore:
          type: boolean
        noAccess:
          type: boolean
        emptyBlocks:
          type: boolean
        error:
          type: boolean
      type: object
    ZoomIn:
      example:
        mode: CHILDREN
        ancestor: TOP
      properties:
        ancestor:
          enum:
          - TOP
          - BOTTOM
          type: string
        mode:
          enum:
          - CHILDREN
          - DESCENDENTS
          - BASE
          type: string
      type: object
    Data:
      example:
        ranges:
        - types:
          - types
          - types
          texts:
          - texts
          - texts
          dataFormats:
          - dataFormats
          - dataFormats
          values:
          - values
          - values
          start: 7
          statuses:
          - statuses
          - statuses
          enumIds:
          - enumIds
          - enumIds
          end: 9
          filters:
          - filters
          - filters
        - types:
          - types
          - types
          texts:
          - texts
          - texts
          dataFormats:
          - dataFormats
          - dataFormats
          values:
          - values
          - values
          start: 7
          statuses:
          - statuses
          - statuses
          enumIds:
          - enumIds
          - enumIds
          end: 9
          filters:
          - filters
          - filters
      properties:
        ranges:
          items:
            $ref: '#/components/schemas/GridRange'
          type: array
      type: object
    Grid:
      example:
        slice:
          dirtyTexts:
          - 5
          - 5
          data:
            ranges:
            - types:
              - types
              - types
              texts:
              - texts
              - texts
              dataFormats:
              - dataFormats
              - dataFormats
              values:
              - values
              - values
              start: 7
              statuses:
              - statuses
              - statuses
              enumIds:
              - enumIds
              - enumIds
              end: 9
              filters:
              - filters
              - filters
            - types:
              - types
              - types
              texts:
              - texts
              - texts
              dataFormats:
              - dataFormats
              - dataFormats
              values:
              - values
              - values
              start: 7
              statuses:
              - statuses
              - statuses
              enumIds:
              - enumIds
              - enumIds
              end: 9
              filters:
              - filters
              - filters
          columns: 5
          dirtyCells:
          - 2
          - 2
          rows: 1
        alias: alias
        dimensions:
        - expanded: true
          hidden: true
          pov: pov
          displayName: displayName
          column: 0
          name: name
          row: 6
        - expanded: true
          hidden: true
          pov: pov
          displayName: displayName
          column: 0
          name: name
          row: 6
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/GridDimension'
          type: array
        alias:
          type: string
        slice:
          $ref: '#/components/schemas/Slice'
      type: object
    GridDimension:
      example:
        expanded: true
        hidden: true
        pov: pov
        displayName: displayName
        column: 0
        name: name
        row: 6
      properties:
        column:
          format: int32
          type: integer
        row:
          format: int32
          type: integer
        pov:
          type: string
        expanded:
          type: boolean
        displayName:
          type: string
        hidden:
          type: boolean
        name:
          type: string
      type: object
    GridRange:
      example:
        types:
        - types
        - types
        texts:
        - texts
        - texts
        dataFormats:
        - dataFormats
        - dataFormats
        values:
        - values
        - values
        start: 7
        statuses:
        - statuses
        - statuses
        enumIds:
        - enumIds
        - enumIds
        end: 9
        filters:
        - filters
        - filters
      properties:
        filters:
          items:
            type: string
          type: array
        types:
          items:
            type: string
          type: array
        enumIds:
          items:
            type: string
          type: array
        texts:
          items:
            type: string
          type: array
        start:
          format: int32
          type: integer
        statuses:
          items:
            type: string
          type: array
        dataFormats:
          items:
            type: string
          type: array
        values:
          items:
            type: string
          type: array
        end:
          format: int32
          type: integer
      type: object
    Slice:
      example:
        dirtyTexts:
        - 5
        - 5
        data:
          ranges:
          - types:
            - types
            - types
            texts:
            - texts
            - texts
            dataFormats:
            - dataFormats
            - dataFormats
            values:
            - values
            - values
            start: 7
            statuses:
            - statuses
            - statuses
            enumIds:
            - enumIds
            - enumIds
            end: 9
            filters:
            - filters
            - filters
          - types:
            - types
            - types
            texts:
            - texts
            - texts
            dataFormats:
            - dataFormats
            - dataFormats
            values:
            - values
            - values
            start: 7
            statuses:
            - statuses
            - statuses
            enumIds:
            - enumIds
            - enumIds
            end: 9
            filters:
            - filters
            - filters
        columns: 5
        dirtyCells:
        - 2
        - 2
        rows: 1
      properties:
        rows:
          format: int32
          type: integer
        columns:
          format: int32
          type: integer
        dirtyTexts:
          items:
            format: int32
            type: integer
          type: array
        dirtyCells:
          items:
            format: int32
            type: integer
          type: array
        data:
          $ref: '#/components/schemas/Data'
      type: object
    MDXOperation:
      example:
        query: query
      properties:
        query:
          type: string
      type: object
    DVGrid:
      example:
        columnHeaderLevels: 5
        columns: 0
        updatedCells:
        - rowHeaders:
          - rowHeaders
          - rowHeaders
          columnHeaders:
          - columnHeaders
          - columnHeaders
          value: value
        - rowHeaders:
          - rowHeaders
          - rowHeaders
          columnHeaders:
          - columnHeaders
          - columnHeaders
          value: value
        filters:
          key: filters
        rows: 6
        rowHeaderLevels: 1
        getnRowHeaderLevels: 5
        dimensions:
        - expanded: true
          hidden: true
          pov: pov
          displayName: displayName
          column: 0
          name: name
          row: 6
        - expanded: true
          hidden: true
          pov: pov
          displayName: displayName
          column: 0
          name: name
          row: 6
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/GridDimension'
          type: array
        columns:
          format: int32
          type: integer
        rows:
          format: int32
          type: integer
        filters:
          additionalProperties:
            type: string
          type: object
        updatedCells:
          items:
            $ref: '#/components/schemas/DVUpdatedCell'
          type: array
        rowHeaderLevels:
          format: int32
          type: integer
        columnHeaderLevels:
          format: int32
          type: integer
        getnRowHeaderLevels:
          format: int32
          type: integer
      type: object
    DVUpdatedCell:
      example:
        rowHeaders:
        - rowHeaders
        - rowHeaders
        columnHeaders:
        - columnHeaders
        - columnHeaders
        value: value
      properties:
        value:
          type: string
        rowHeaders:
          items:
            type: string
          type: array
        columnHeaders:
          items:
            type: string
          type: array
      type: object
    GridOperation:
      example:
        ranges:
        - - 6
          - 6
        - - 6
          - 6
        grid:
          slice:
            dirtyTexts:
            - 5
            - 5
            data:
              ranges:
              - types:
                - types
                - types
                texts:
                - texts
                - texts
                dataFormats:
                - dataFormats
                - dataFormats
                values:
                - values
                - values
                start: 7
                statuses:
                - statuses
                - statuses
                enumIds:
                - enumIds
                - enumIds
                end: 9
                filters:
                - filters
                - filters
              - types:
                - types
                - types
                texts:
                - texts
                - texts
                dataFormats:
                - dataFormats
                - dataFormats
                values:
                - values
                - values
                start: 7
                statuses:
                - statuses
                - statuses
                enumIds:
                - enumIds
                - enumIds
                end: 9
                filters:
                - filters
                - filters
            columns: 5
            dirtyCells:
            - 2
            - 2
            rows: 1
          alias: alias
          dimensions:
          - expanded: true
            hidden: true
            pov: pov
            displayName: displayName
            column: 0
            name: name
            row: 6
          - expanded: true
            hidden: true
            pov: pov
            displayName: displayName
            column: 0
            name: name
            row: 6
        coordinates:
        - 0
        - 0
        action: ZOOM_IN
        alias: alias
      properties:
        grid:
          $ref: '#/components/schemas/Grid'
        action:
          enum:
          - ZOOM_IN
          - ZOOM_OUT
          - KEEP_ONLY
          - REMOVE_ONLY
          - REFRESH
          - PIVOT
          - PIVOT_TO_POV
          - SUBMIT
          type: string
        alias:
          type: string
        coordinates:
          items:
            format: int32
            type: integer
          type: array
        ranges:
          items:
            items:
              format: int32
              type: integer
            type: array
          type: array
      type: object
    HPA:
      example:
        interval: 0
        enabled: true
      properties:
        interval:
          format: int64
          type: integer
        enabled:
          type: boolean
      type: object
    PerformanceFile:
      example:
        lastmodifiedMillis: 0
        size: 6
        name: name
      properties:
        name:
          type: string
        lastmodifiedMillis:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
      type: object
    PerformanceFiles:
      example:
        totalResults: 5
        offset: 2
        count: 1
        hasMore: true
        limit: 5
        items:
        - lastmodifiedMillis: 0
          size: 6
          name: name
        - lastmodifiedMillis: 0
          size: 6
          name: name
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/PerformanceFile'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Layout:
      example:
        header:
          userDefault: true
          session: true
          name: name
          databaseDefault: true
          user: user
        spec:
          preferences:
            navigate: true
            cellText: true
            rowSuppression:
              zero: true
              emptyBlocks: true
              noAccess: true
              underScore: true
              missing: true
              invalid: true
              error: true
              derived: true
            includeDescriptionLabel: true
            removeUnSelectedGroup: true
            zoomIn:
              mode: CHILDREN
              ancestor: TOP
            missingText: missingText
            columnSuppression:
              zero: true
              emptyBlocks: true
              noAccess: true
              underScore: true
              missing: true
              invalid: true
              error: true
              derived: true
            repeatMemberLabels: true
            noAccessText: noAccessText
            maxRows: 1
            indentation: NONE
            includeSelection: true
            withinSelectedGroup: true
            formulaRetention:
              retrive: true
              comments: true
              focus: true
              zoom: true
              fill: true
          grid:
            data:
              types:
              - - types
                - types
              - - types
                - types
              texts:
              - - texts
                - texts
              - - texts
                - texts
              values:
              - - values
                - values
              - - values
                - values
              dataFormats:
              - - dataFormats
                - dataFormats
              - - dataFormats
                - dataFormats
              statuses:
              - - statuses
                - statuses
              - - statuses
                - statuses
              enumIds:
              - - enumIds
                - enumIds
              - - enumIds
                - enumIds
              filters:
              - - filters
                - filters
              - - filters
                - filters
            alias: alias
            dimensions:
            - expanded: true
              hidden: true
              displayName: displayName
              name: name
              page: 0
              position: 6
              axis: COLUMN
            - expanded: true
              hidden: true
              displayName: displayName
              name: name
              page: 0
              position: 6
              axis: COLUMN
          description: description
      properties:
        header:
          $ref: '#/components/schemas/LayoutHeader'
        spec:
          $ref: '#/components/schemas/LayoutSpec'
      type: object
    LayoutData:
      example:
        types:
        - - types
          - types
        - - types
          - types
        texts:
        - - texts
          - texts
        - - texts
          - texts
        values:
        - - values
          - values
        - - values
          - values
        dataFormats:
        - - dataFormats
          - dataFormats
        - - dataFormats
          - dataFormats
        statuses:
        - - statuses
          - statuses
        - - statuses
          - statuses
        enumIds:
        - - enumIds
          - enumIds
        - - enumIds
          - enumIds
        filters:
        - - filters
          - filters
        - - filters
          - filters
      properties:
        values:
          items:
            items:
              type: string
            type: array
          type: array
        types:
          items:
            items:
              type: string
            type: array
          type: array
        texts:
          items:
            items:
              type: string
            type: array
          type: array
        dataFormats:
          items:
            items:
              type: string
            type: array
          type: array
        statuses:
          items:
            items:
              type: string
            type: array
          type: array
        filters:
          items:
            items:
              type: string
            type: array
          type: array
        enumIds:
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    LayoutDimension:
      example:
        expanded: true
        hidden: true
        displayName: displayName
        name: name
        page: 0
        position: 6
        axis: COLUMN
      properties:
        name:
          type: string
        displayName:
          type: string
        page:
          format: int32
          type: integer
        hidden:
          type: boolean
        expanded:
          type: boolean
        axis:
          enum:
          - COLUMN
          - ROW
          - POV
          type: string
        position:
          format: int32
          type: integer
      type: object
    LayoutGrid:
      example:
        data:
          types:
          - - types
            - types
          - - types
            - types
          texts:
          - - texts
            - texts
          - - texts
            - texts
          values:
          - - values
            - values
          - - values
            - values
          dataFormats:
          - - dataFormats
            - dataFormats
          - - dataFormats
            - dataFormats
          statuses:
          - - statuses
            - statuses
          - - statuses
            - statuses
          enumIds:
          - - enumIds
            - enumIds
          - - enumIds
            - enumIds
          filters:
          - - filters
            - filters
          - - filters
            - filters
        alias: alias
        dimensions:
        - expanded: true
          hidden: true
          displayName: displayName
          name: name
          page: 0
          position: 6
          axis: COLUMN
        - expanded: true
          hidden: true
          displayName: displayName
          name: name
          page: 0
          position: 6
          axis: COLUMN
      properties:
        alias:
          type: string
        dimensions:
          items:
            $ref: '#/components/schemas/LayoutDimension'
          type: array
        data:
          $ref: '#/components/schemas/LayoutData'
      type: object
    LayoutHeader:
      example:
        userDefault: true
        session: true
        name: name
        databaseDefault: true
        user: user
      properties:
        name:
          type: string
        user:
          type: string
        databaseDefault:
          type: boolean
        userDefault:
          type: boolean
        session:
          type: boolean
      type: object
    LayoutPreferences:
      example:
        navigate: true
        cellText: true
        rowSuppression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          missing: true
          invalid: true
          error: true
          derived: true
        includeDescriptionLabel: true
        removeUnSelectedGroup: true
        zoomIn:
          mode: CHILDREN
          ancestor: TOP
        missingText: missingText
        columnSuppression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          missing: true
          invalid: true
          error: true
          derived: true
        repeatMemberLabels: true
        noAccessText: noAccessText
        maxRows: 1
        indentation: NONE
        includeSelection: true
        withinSelectedGroup: true
        formulaRetention:
          retrive: true
          comments: true
          focus: true
          zoom: true
          fill: true
      properties:
        indentation:
          enum:
          - NONE
          - SUBITEMS
          - TOTALS
          type: string
        rowSuppression:
          $ref: '#/components/schemas/Suppression'
        columnSuppression:
          $ref: '#/components/schemas/Suppression'
        cellText:
          type: boolean
        zoomIn:
          $ref: '#/components/schemas/ZoomIn'
        navigate:
          type: boolean
        includeSelection:
          type: boolean
        repeatMemberLabels:
          type: boolean
        withinSelectedGroup:
          type: boolean
        removeUnSelectedGroup:
          type: boolean
        includeDescriptionLabel:
          type: boolean
        missingText:
          type: string
        noAccessText:
          type: string
        maxRows:
          format: int32
          type: integer
        formulaRetention:
          $ref: '#/components/schemas/FormulaRetention'
      type: object
    LayoutSpec:
      example:
        preferences:
          navigate: true
          cellText: true
          rowSuppression:
            zero: true
            emptyBlocks: true
            noAccess: true
            underScore: true
            missing: true
            invalid: true
            error: true
            derived: true
          includeDescriptionLabel: true
          removeUnSelectedGroup: true
          zoomIn:
            mode: CHILDREN
            ancestor: TOP
          missingText: missingText
          columnSuppression:
            zero: true
            emptyBlocks: true
            noAccess: true
            underScore: true
            missing: true
            invalid: true
            error: true
            derived: true
          repeatMemberLabels: true
          noAccessText: noAccessText
          maxRows: 1
          indentation: NONE
          includeSelection: true
          withinSelectedGroup: true
          formulaRetention:
            retrive: true
            comments: true
            focus: true
            zoom: true
            fill: true
        grid:
          data:
            types:
            - - types
              - types
            - - types
              - types
            texts:
            - - texts
              - texts
            - - texts
              - texts
            values:
            - - values
              - values
            - - values
              - values
            dataFormats:
            - - dataFormats
              - dataFormats
            - - dataFormats
              - dataFormats
            statuses:
            - - statuses
              - statuses
            - - statuses
              - statuses
            enumIds:
            - - enumIds
              - enumIds
            - - enumIds
              - enumIds
            filters:
            - - filters
              - filters
            - - filters
              - filters
          alias: alias
          dimensions:
          - expanded: true
            hidden: true
            displayName: displayName
            name: name
            page: 0
            position: 6
            axis: COLUMN
          - expanded: true
            hidden: true
            displayName: displayName
            name: name
            page: 0
            position: 6
            axis: COLUMN
        description: description
      properties:
        description:
          type: string
        grid:
          $ref: '#/components/schemas/LayoutGrid'
        preferences:
          $ref: '#/components/schemas/LayoutPreferences'
      type: object
    Suppression:
      example:
        zero: true
        emptyBlocks: true
        noAccess: true
        underScore: true
        missing: true
        invalid: true
        error: true
        derived: true
      properties:
        missing:
          type: boolean
        invalid:
          type: boolean
        derived:
          type: boolean
        zero:
          type: boolean
        underScore:
          type: boolean
        noAccess:
          type: boolean
        emptyBlocks:
          type: boolean
        error:
          type: boolean
      type: object
    DefaultLayoutBean:
      example:
        userDefault: true
        databaseDefault: true
      properties:
        userDefault:
          type: boolean
        databaseDefault:
          type: boolean
      type: object
    LayoutMetadata:
      example:
        userDefault: true
        name: name
        dbDefault: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        user: user
      properties:
        name:
          type: string
        user:
          type: string
        userDefault:
          type: boolean
        dbDefault:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    Layouts:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - userDefault: true
          name: name
          dbDefault: true
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        - userDefault: true
          name: name
          dbDefault: true
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        properties:
          key: properties
      properties:
        count:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/LayoutMetadata'
          type: array
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    MDXInput:
      example:
        preferences:
          formatString: true
          formatValues: true
          textList: true
          meaninglessCells: true
          memberIdentifierType: NAME
          hideRestrictedData: true
          cellAttributes: true
          urlDrillThrough: true
          dataless: true
        query: query
      properties:
        query:
          type: string
        preferences:
          $ref: '#/components/schemas/NamedQueriesPreferences'
      type: object
    NamedQueriesPreferences:
      example:
        formatString: true
        formatValues: true
        textList: true
        meaninglessCells: true
        memberIdentifierType: NAME
        hideRestrictedData: true
        cellAttributes: true
        urlDrillThrough: true
        dataless: true
      properties:
        dataless:
          type: boolean
        hideRestrictedData:
          type: boolean
        cellAttributes:
          type: boolean
        formatString:
          type: boolean
        formatValues:
          type: boolean
        meaninglessCells:
          type: boolean
        textList:
          type: boolean
        urlDrillThrough:
          type: boolean
        memberIdentifierType:
          enum:
          - NAME
          - ALIAS
          - UNIQUE_NAME
          type: string
      type: object
    Queries:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: MDX
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: MDX
        properties:
          key: properties
      properties:
        count:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/QueryMetadata'
          type: array
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    QueryMetadata:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: MDX
      properties:
        name:
          type: string
        type:
          enum:
          - MDX
          - DATA_SOURCE
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    NamedQuery:
      example:
        query:
          preferences:
            formatString: true
            formatValues: true
            textList: true
            meaninglessCells: true
            memberIdentifierType: NAME
            hideRestrictedData: true
            cellAttributes: true
            urlDrillThrough: true
            dataless: true
          description: description
          spec: spec
        name: name
        type: MDX
      properties:
        name:
          type: string
        type:
          enum:
          - MDX
          - DATA_SOURCE
          type: string
        query:
          $ref: '#/components/schemas/Query'
      type: object
    Query:
      example:
        preferences:
          formatString: true
          formatValues: true
          textList: true
          meaninglessCells: true
          memberIdentifierType: NAME
          hideRestrictedData: true
          cellAttributes: true
          urlDrillThrough: true
          dataless: true
        description: description
        spec: spec
      properties:
        description:
          type: string
        spec:
          type: string
        preferences:
          $ref: '#/components/schemas/NamedQueriesPreferences'
      type: object
    BufferSettings:
      example:
        dataRetrievalBufferSize: 0
        dataRetrievalSortBufferSize: 6
      properties:
        dataRetrievalBufferSize:
          format: int64
          type: integer
        dataRetrievalSortBufferSize:
          format: int64
          type: integer
      type: object
      xml:
        name: buffers
    CacheSettings:
      example:
        indexCacheSetting: 7
        dataCacheSetting: 4
        indexPageCurrentValue: 1
        indexPageSetting: 1
        dataFileCacheCurrentValue: 2
        indexCacheCurrentValue: 9
        dataFileCacheSetting: 3
        dataCacheCurrentValue: 7
        cacheMemoryLocking: true
      properties:
        cacheMemoryLocking:
          type: boolean
        indexCacheSetting:
          format: int64
          type: integer
        indexCacheCurrentValue:
          format: int64
          type: integer
        dataFileCacheSetting:
          format: int64
          type: integer
        dataFileCacheCurrentValue:
          format: int64
          type: integer
        dataCacheSetting:
          format: int64
          type: integer
        dataCacheCurrentValue:
          format: int64
          type: integer
        indexPageSetting:
          format: int32
          type: integer
        indexPageCurrentValue:
          format: int32
          type: integer
      type: object
      xml:
        name: caches
    CalculationSettings:
      example:
        aggregateMissingValues: true
        createBlocksOnEquations: true
        twoPassCalculation: true
      properties:
        aggregateMissingValues:
          type: boolean
        createBlocksOnEquations:
          type: boolean
        twoPassCalculation:
          type: boolean
      type: object
      xml:
        name: calculation
    CompressionSettings:
      example:
        level0MB: 5.637376656633329
        isCompression: true
        averageBundleFill: 1.4658129805029452
        storedLevel0Members: 2.3021358869347655
        dimensionName: dimensionName
        averageValueLength: 5.962133916683182
      properties:
        dimensionName:
          type: string
        averageBundleFill:
          format: double
          type: number
        averageValueLength:
          format: double
          type: number
        isCompression:
          type: boolean
        level0MB:
          format: double
          type: number
        storedLevel0Members:
          format: double
          type: number
      type: object
    GeneralSettings:
      example:
        description: description
        queryTracking: true
      properties:
        description:
          type: string
        queryTracking:
          type: boolean
      type: object
      xml:
        name: general
    SettingsList:
      example:
        calculation:
          aggregateMissingValues: true
          createBlocksOnEquations: true
          twoPassCalculation: true
        general:
          description: description
          queryTracking: true
        caches:
          indexCacheSetting: 7
          dataCacheSetting: 4
          indexPageCurrentValue: 1
          indexPageSetting: 1
          dataFileCacheCurrentValue: 2
          indexCacheCurrentValue: 9
          dataFileCacheSetting: 3
          dataCacheCurrentValue: 7
          cacheMemoryLocking: true
        buffers:
          dataRetrievalBufferSize: 0
          dataRetrievalSortBufferSize: 6
        startup:
          startDatabaseWhenApplicationStarts: true
          allowUsersToStartDatabase: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        compression:
        - level0MB: 5.637376656633329
          isCompression: true
          averageBundleFill: 1.4658129805029452
          storedLevel0Members: 2.3021358869347655
          dimensionName: dimensionName
          averageValueLength: 5.962133916683182
        - level0MB: 5.637376656633329
          isCompression: true
          averageBundleFill: 1.4658129805029452
          storedLevel0Members: 2.3021358869347655
          dimensionName: dimensionName
          averageValueLength: 5.962133916683182
        transactions:
          commitRows: 7
          commitBlocks: 6
          concurrencyPreImageAccess: true
          committedAccess: true
          concurrencyWaitSeconds: 1
      properties:
        general:
          $ref: '#/components/schemas/GeneralSettings'
        startup:
          $ref: '#/components/schemas/StartupSettings'
        calculation:
          $ref: '#/components/schemas/CalculationSettings'
        buffers:
          $ref: '#/components/schemas/BufferSettings'
        compression:
          items:
            $ref: '#/components/schemas/CompressionSettings'
          type: array
        caches:
          $ref: '#/components/schemas/CacheSettings'
        transactions:
          $ref: '#/components/schemas/TransactionSettings'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: settings
    StartupSettings:
      example:
        startDatabaseWhenApplicationStarts: true
        allowUsersToStartDatabase: true
      properties:
        allowUsersToStartDatabase:
          type: boolean
        startDatabaseWhenApplicationStarts:
          type: boolean
      type: object
      xml:
        name: startup
    TransactionSettings:
      example:
        commitRows: 7
        commitBlocks: 6
        concurrencyPreImageAccess: true
        committedAccess: true
        concurrencyWaitSeconds: 1
      properties:
        committedAccess:
          type: boolean
        concurrencyWaitSeconds:
          format: int32
          type: integer
        concurrencyPreImageAccess:
          type: boolean
        commitBlocks:
          format: int64
          type: integer
        commitRows:
          format: int64
          type: integer
      type: object
      xml:
        name: transactions
    PatchElement:
      example:
        op: op
        path: path
        from: from
        value: '{}'
      properties:
        op:
          type: string
        path:
          type: string
        value:
          properties: {}
          type: object
        from:
          type: string
      type: object
    StatisticsDimensions:
      example:
        name: name
        bits: 0.8008281904610115
        levels: levels
      properties:
        name:
          type: string
        levels:
          type: string
        bits:
          format: double
          type: number
      type: object
    StorageStatistics:
      example:
        numberOfInputLevelCells: 5
        numberOfExistingBlocks: 1.2315135367772556
        pageFileSize: 9
        inputLevelDataSize: 4
        potentialNumberOfBlocks: 1.4894159098541704
        maxKeyLengthBits: 6
        numberOfIncrementalAggregateCells: 3
        aggregateDataSize: 7
        numberOfAggregateViews: 7
        existingUpperLevelBlocks: 7.457744773683766
        numberOfIncrementalDataSlices: 5
        percentageOfMaximumBlocksExisting: 4.965218492984954
        numberOfAggregateCells: 9
        blockSize: 1
        costOfQueryingIncrementalData: 2.027123023002322
        maxKeyLengthBytes: 1
        compressionRatio: 5.025004791520295
        existingLevelZeroBlocks: 6.84685269835264
        blockDensity: 1.1730742509559433
        averageClusteringRatio: 9.965781217890562
        indexFileSize: 6
        numberOfIncrementalInputCells: 2
        dimensions:
        - name: name
          bits: 0.8008281904610115
          levels: levels
        - name: name
          bits: 0.8008281904610115
          levels: levels
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/StatisticsDimensions'
          type: array
        maxKeyLengthBits:
          format: int32
          type: integer
        maxKeyLengthBytes:
          format: int32
          type: integer
        numberOfInputLevelCells:
          format: int32
          type: integer
        numberOfIncrementalDataSlices:
          format: int32
          type: integer
        numberOfIncrementalInputCells:
          format: int32
          type: integer
        numberOfAggregateViews:
          format: int32
          type: integer
        numberOfAggregateCells:
          format: int32
          type: integer
        numberOfIncrementalAggregateCells:
          format: int32
          type: integer
        costOfQueryingIncrementalData:
          format: double
          type: number
        inputLevelDataSize:
          format: int32
          type: integer
        aggregateDataSize:
          format: int32
          type: integer
        numberOfExistingBlocks:
          format: double
          type: number
        blockSize:
          format: int32
          type: integer
        potentialNumberOfBlocks:
          format: double
          type: number
        existingLevelZeroBlocks:
          format: double
          type: number
        existingUpperLevelBlocks:
          format: double
          type: number
        blockDensity:
          format: double
          type: number
        percentageOfMaximumBlocksExisting:
          format: double
          type: number
        compressionRatio:
          format: double
          type: number
        averageClusteringRatio:
          format: double
          type: number
        pageFileSize:
          format: int64
          type: integer
        indexFileSize:
          format: int64
          type: integer
      type: object
    RuntimeStatistics:
      example:
        pageWritesSinceLastStartup: 5.637376656633329
        numberOfIndexPageReads: 1.2315135367772556
        numberOfDataBlockReads: 1.4894159098541704
        numberOfDataBlockWrites: 6.84685269835264
        pageReadsSinceLastStartup: 5.962133916683182
        currentCacheSizeLimit: 1.4658129805029452
        pageSize: 2.3021358869347655
        currentCacheSize: 6.027456183070403
        temporaryDiskSpaceAllocated: 3.616076749251911
        cacheHitRatio: 0.8008281904610115
        numberOfIndexPageWrites: 1.0246457001441578
        diskSpaceAllocatedForData: 7.061401241503109
        temporaryDiskSpaceUsed: 2.027123023002322
        hitRatioOnIndexCache: 4.145608029883936
        hitRatioOnDataFileCache: 7.457744773683766
        diskSpaceUsedByData: 9.301444243932576
        hitRatioOnDataCache: 7.386281948385884
      properties:
        cacheHitRatio:
          format: double
          type: number
        currentCacheSize:
          format: double
          type: number
        currentCacheSizeLimit:
          format: double
          type: number
        pageReadsSinceLastStartup:
          format: double
          type: number
        pageWritesSinceLastStartup:
          format: double
          type: number
        pageSize:
          format: double
          type: number
        diskSpaceAllocatedForData:
          format: double
          type: number
        diskSpaceUsedByData:
          format: double
          type: number
        temporaryDiskSpaceAllocated:
          format: double
          type: number
        temporaryDiskSpaceUsed:
          format: double
          type: number
        hitRatioOnIndexCache:
          format: double
          type: number
        hitRatioOnDataCache:
          format: double
          type: number
        numberOfIndexPageReads:
          format: double
          type: number
        numberOfIndexPageWrites:
          format: double
          type: number
        numberOfDataBlockReads:
          format: double
          type: number
        numberOfDataBlockWrites:
          format: double
          type: number
        hitRatioOnDataFileCache:
          format: double
          type: number
      type: object
    AttributeOutlineSettings:
      example:
        numericRangesRepresent: numericRangesRepresent
        calcMinimumMember: calcMinimumMember
        dateMemberNames: dateMemberNames
        prefixSuffixValue: prefixSuffixValue
        calcCountMember: calcCountMember
        calcAverageMember: calcAverageMember
        falseMemberName: falseMemberName
        trueMemberName: trueMemberName
        calcSumMember: calcSumMember
        prefixSuffixSeparator: prefixSuffixSeparator
        calcDimensionName: calcDimensionName
        calcMaximumMember: calcMaximumMember
        prefixSuffixFormat: prefixSuffixFormat
      properties:
        prefixSuffixValue:
          type: string
        prefixSuffixSeparator:
          type: string
        prefixSuffixFormat:
          type: string
        trueMemberName:
          type: string
        falseMemberName:
          type: string
        dateMemberNames:
          type: string
        numericRangesRepresent:
          type: string
        calcDimensionName:
          type: string
        calcSumMember:
          type: string
        calcCountMember:
          type: string
        calcMinimumMember:
          type: string
        calcMaximumMember:
          type: string
        calcAverageMember:
          type: string
      type: object
      xml:
        name: attributes
    OutlineDateFormat:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
      xml:
        name: dateformats
    QueryTrackingInputs:
      example:
        fileName: fileName
      properties:
        fileName:
          type: string
      type: object
    GeneralStatistics:
      example:
        databaseElapsedTime: databaseElapsedTime
        loadStatus: loadStatus
        numberOfDimensions: 1
        numberOfConnections: 6
        databaseStartTime: 0
      properties:
        databaseStartTime:
          format: int64
          type: integer
        databaseElapsedTime:
          type: string
        numberOfConnections:
          format: int32
          type: integer
        numberOfDimensions:
          format: int32
          type: integer
        loadStatus:
          type: string
      type: object
    StatisticsList:
      example:
        general:
          databaseElapsedTime: databaseElapsedTime
          loadStatus: loadStatus
          numberOfDimensions: 1
          numberOfConnections: 6
          databaseStartTime: 0
        runtime:
          pageWritesSinceLastStartup: 5.637376656633329
          numberOfIndexPageReads: 1.2315135367772556
          numberOfDataBlockReads: 1.4894159098541704
          numberOfDataBlockWrites: 6.84685269835264
          pageReadsSinceLastStartup: 5.962133916683182
          currentCacheSizeLimit: 1.4658129805029452
          pageSize: 2.3021358869347655
          currentCacheSize: 6.027456183070403
          temporaryDiskSpaceAllocated: 3.616076749251911
          cacheHitRatio: 0.8008281904610115
          numberOfIndexPageWrites: 1.0246457001441578
          diskSpaceAllocatedForData: 7.061401241503109
          temporaryDiskSpaceUsed: 2.027123023002322
          hitRatioOnIndexCache: 4.145608029883936
          hitRatioOnDataFileCache: 7.457744773683766
          diskSpaceUsedByData: 9.301444243932576
          hitRatioOnDataCache: 7.386281948385884
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        storage:
          numberOfInputLevelCells: 5
          numberOfExistingBlocks: 1.2315135367772556
          pageFileSize: 9
          inputLevelDataSize: 4
          potentialNumberOfBlocks: 1.4894159098541704
          maxKeyLengthBits: 6
          numberOfIncrementalAggregateCells: 3
          aggregateDataSize: 7
          numberOfAggregateViews: 7
          existingUpperLevelBlocks: 7.457744773683766
          numberOfIncrementalDataSlices: 5
          percentageOfMaximumBlocksExisting: 4.965218492984954
          numberOfAggregateCells: 9
          blockSize: 1
          costOfQueryingIncrementalData: 2.027123023002322
          maxKeyLengthBytes: 1
          compressionRatio: 5.025004791520295
          existingLevelZeroBlocks: 6.84685269835264
          blockDensity: 1.1730742509559433
          averageClusteringRatio: 9.965781217890562
          indexFileSize: 6
          numberOfIncrementalInputCells: 2
          dimensions:
          - name: name
            bits: 0.8008281904610115
            levels: levels
          - name: name
            bits: 0.8008281904610115
            levels: levels
      properties:
        general:
          $ref: '#/components/schemas/GeneralStatistics'
        storage:
          $ref: '#/components/schemas/StorageStatistics'
        runtime:
          $ref: '#/components/schemas/RuntimeStatistics'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: statistics
    GeneralOutlineSettings:
      example:
        allowDuplicateMemberNames: true
        typeMeasuresEnabled: true
        varyingAttributesEnabled: true
        dateFormat: dateFormat
        outlineType: outlineType
        timeModified: 0
        caseSensitiveMembers: true
      properties:
        caseSensitiveMembers:
          type: boolean
        outlineType:
          type: string
        allowDuplicateMemberNames:
          type: boolean
        typeMeasuresEnabled:
          type: boolean
        dateFormat:
          type: string
        varyingAttributesEnabled:
          type: boolean
        timeModified:
          format: int64
          type: integer
      type: object
      xml:
        name: general
    OutlineSettingsList:
      example:
        general:
          allowDuplicateMemberNames: true
          typeMeasuresEnabled: true
          varyingAttributesEnabled: true
          dateFormat: dateFormat
          outlineType: outlineType
          timeModified: 0
          caseSensitiveMembers: true
        attributes:
          numericRangesRepresent: numericRangesRepresent
          calcMinimumMember: calcMinimumMember
          dateMemberNames: dateMemberNames
          prefixSuffixValue: prefixSuffixValue
          calcCountMember: calcCountMember
          calcAverageMember: calcAverageMember
          falseMemberName: falseMemberName
          trueMemberName: trueMemberName
          calcSumMember: calcSumMember
          prefixSuffixSeparator: prefixSuffixSeparator
          calcDimensionName: calcDimensionName
          calcMaximumMember: calcMaximumMember
          prefixSuffixFormat: prefixSuffixFormat
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        general:
          $ref: '#/components/schemas/GeneralOutlineSettings'
        attributes:
          $ref: '#/components/schemas/AttributeOutlineSettings'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: outlineSettings
    AppGeneralSettings:
      example:
        timeoutOnDataBlockLocks: 0
        logLevelAsString: logLevelAsString
        maxAttachmentFileSizeInKbs: 6
        description: description
        pendingCacheSizeLimitInMbs: 1
      properties:
        description:
          type: string
        logLevelAsString:
          type: string
        timeoutOnDataBlockLocks:
          format: int64
          type: integer
        maxAttachmentFileSizeInKbs:
          format: int64
          type: integer
        pendingCacheSizeLimitInMbs:
          format: int64
          type: integer
      type: object
      xml:
        name: general
    AppSecuritySettings:
      example:
        allowCommands: true
        allowConnects: true
        allowUpdates: true
      properties:
        allowCommands:
          type: boolean
        allowConnects:
          type: boolean
        allowUpdates:
          type: boolean
      type: object
      xml:
        name: security
    AppSettingsList:
      example:
        general:
          timeoutOnDataBlockLocks: 0
          logLevelAsString: logLevelAsString
          maxAttachmentFileSizeInKbs: 6
          description: description
          pendingCacheSizeLimitInMbs: 1
        security:
          allowCommands: true
          allowConnects: true
          allowUpdates: true
        startup:
          allowUsersToStartApplication: true
          startApplicationWhenServerStarts: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        general:
          $ref: '#/components/schemas/AppGeneralSettings'
        startup:
          $ref: '#/components/schemas/AppStartupSettings'
        security:
          $ref: '#/components/schemas/AppSecuritySettings'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: settings
    AppStartupSettings:
      example:
        allowUsersToStartApplication: true
        startApplicationWhenServerStarts: true
      properties:
        allowUsersToStartApplication:
          type: boolean
        startApplicationWhenServerStarts:
          type: boolean
      type: object
      xml:
        name: startup
    ApplicationStatistics:
      example:
        applicationElapsedTime: applicationElapsedTime
        applicationStartTime: 0
        loadStatus: loadStatus
        numberOfConnections: 6
      properties:
        applicationStartTime:
          format: int64
          type: integer
        applicationElapsedTime:
          type: string
        numberOfConnections:
          format: int32
          type: integer
        loadStatus:
          type: string
      type: object
    ExportOptions:
      example:
        tree: true
        aliasTable: aliasTable
        dimensions:
        - dimensions
        - dimensions
      properties:
        aliasTable:
          type: string
        dimensions:
          items:
            type: string
          type: array
        tree:
          type: boolean
      type: object
    MemberBean:
      example:
        activeAliasName: activeAliasName
        aliases:
          key: aliases
        memberHasUniqueName: true
        generationNumber: 1
        type: NONE
        dimensionName: dimensionName
        numberOfChildren: 0
        uniqueName: uniqueName
        name: name
        levelNumber: 6
        previousSiblingsCount: 2
        memberSolveOrder: 5
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        attribute: true
        dimension: true
        uniqueId: uniqueId
        descendantsCount: 5
        account: true
        memberId: memberId
      properties:
        name:
          type: string
        dimensionName:
          type: string
        numberOfChildren:
          format: int32
          type: integer
        levelNumber:
          format: int32
          type: integer
        generationNumber:
          format: int32
          type: integer
        aliases:
          additionalProperties:
            type: string
          type: object
        activeAliasName:
          type: string
        memberHasUniqueName:
          type: boolean
        uniqueName:
          type: string
        memberId:
          type: string
        uniqueId:
          type: string
        type:
          enum:
          - NONE
          - NUMERIC
          - SMARTLIST
          - DATE
          type: string
        memberSolveOrder:
          format: int32
          type: integer
        descendantsCount:
          format: int64
          type: integer
        previousSiblingsCount:
          format: int32
          type: integer
        dimension:
          type: boolean
        attribute:
          type: boolean
        account:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    RestCollectionResponse:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        limit: 6
        count: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - '{}'
        - '{}'
      properties:
        items:
          items:
            properties: {}
            type: object
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    AreaBean:
      example:
        sourceArea: sourceArea
        slices:
        - sourceMember: sourceMember
          targetMember: targetMember
        - sourceMember: sourceMember
          targetMember: targetMember
        targetArea: targetArea
        sourceCellCount: 5
        targetCellCount: 2
      properties:
        sourceArea:
          type: string
        targetArea:
          type: string
        sourceCellCount:
          format: int64
          type: integer
        targetCellCount:
          format: int64
          type: integer
        slices:
          items:
            $ref: '#/components/schemas/MemberMappingBean'
          type: array
      type: object
    ConnectionInfoBean:
      example:
        alterCredentials: true
        databaseName: databaseName
        measuresDimensionName: measuresDimensionName
        applicationLevelConnection: true
        serverName: serverName
        description: description
        userName: userName
        password: password
        essbaseToColumnMap:
          arr:
          - essbaseName: essbaseName
            columnName: columnName
          - essbaseName: essbaseName
            columnName: columnName
        connectionName: connectionName
        datasourceName: datasourceName
        applicationName: applicationName
        essbaseToDataSourceMap:
          dimensions:
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
        applicationLevelDatasource: true
      properties:
        connectionName:
          type: string
        serverName:
          type: string
        userName:
          type: string
        password:
          type: string
        description:
          type: string
        applicationName:
          type: string
        databaseName:
          type: string
        datasourceName:
          type: string
        measuresDimensionName:
          type: string
        essbaseToColumnMap:
          $ref: '#/components/schemas/EsbToColMap'
        essbaseToDataSourceMap:
          $ref: '#/components/schemas/EssToDsMapDTO'
        alterCredentials:
          type: boolean
        applicationLevelConnection:
          type: boolean
        applicationLevelDatasource:
          type: boolean
      type: object
    Dimension:
      example:
        sortOption: NONE
        hierarchyType: EXISTING
        added: true
        generations:
        - number: 0
          unique: true
          name: name
        - number: 0
          unique: true
          name: name
        memberName: memberName
        aggregateLevelUsage: 6
        allowUDAChanges: true
        configOption: EXISTING
        type: EXISTING
        allowFormulaChanges: true
        allowPropertyChanges: true
        addMemberOption: GENERATION
        allowassociationChanges: true
        share: true
        incrementalSort: true
        measureOptions:
          currencyName: currencyName
          timeBalanceOption: EXISTING
          twoPass: true
          skip: NONE
          currencyCategory: currencyCategory
          varianceReporting: EXISTING
          currencyConversion: EXISTING
        dimensionSolveOrder: 5
        updateOption: MERGE
        autoFixSharedMember: true
        flexible: true
        unique: EXISTING
        name: name
        attributeOptions:
          scadisAssociationMode: NOOVERWRITE
          scaassociationMode: NOOVERWRITE
          indepDimensions:
          - name: name
            type: CONTINUOUS
          - name: name
            type: CONTINUOUS
          modified: true
          type: NUMERIC
          baseDimension: baseDimension
        storageType: EXISTING
        createAttributeMembers: true
        levels:
        - number: 0
          unique: true
          name: name
        - number: 0
          unique: true
          name: name
        allowMoves: NOTOK
        solveOrder: 1
      properties:
        generations:
          items:
            $ref: '#/components/schemas/Level'
          type: array
        levels:
          items:
            $ref: '#/components/schemas/Level'
          type: array
        allowassociationChanges:
          type: boolean
        allowFormulaChanges:
          type: boolean
        allowPropertyChanges:
          type: boolean
        allowUDAChanges:
          type: boolean
        measureOptions:
          $ref: '#/components/schemas/MeasureOptions'
        aggregateLevelUsage:
          format: int32
          type: integer
        addMemberOption:
          enum:
          - GENERATION
          - SIBLING_LOWEST_LEVEL
          - CHILD
          - SIBLING_MATCHING_STRING
          - LEVEL
          - PARENT_CHILD
          - GEN_NULLS
          - LEVEL_NULLS
          type: string
        attributeOptions:
          $ref: '#/components/schemas/AttributeOptions'
        configOption:
          enum:
          - EXISTING
          - DENSE
          - SPARSE
          type: string
        unique:
          enum:
          - EXISTING
          - UNIQUE
          - DUPLICATE
          - NONE
          type: string
        hierarchyType:
          enum:
          - EXISTING
          - MULTIPLE
          - STORED
          - DYNAMIC
          type: string
        sortOption:
          enum:
          - NONE
          - ASCENDING
          - DESCENDING
          type: string
        storageType:
          enum:
          - EXISTING
          - STORE
          - NEVER_SHARE
          - LABEL_ONLY
          - DYNAMIC_CALC_STORE
          - DYNAMIC_CALC
          type: string
        type:
          enum:
          - EXISTING
          - NONE
          - ACCOUNTS
          - TIME
          - COUNTRY
          - ATTRIBUTES
          type: string
        updateOption:
          enum:
          - MERGE
          - REMOVE_UNSPECIFIED
          type: string
        allowMoves:
          enum:
          - NOTOK
          - OK
          - IGNORE
          - GEN2
          - NOTGEN2
          type: string
        solveOrder:
          format: int32
          type: integer
        createAttributeMembers:
          type: boolean
        share:
          type: boolean
        incrementalSort:
          type: boolean
        autoFixSharedMember:
          type: boolean
        flexible:
          type: boolean
        memberName:
          type: string
        name:
          type: string
        dimensionSolveOrder:
          format: int32
          type: integer
        added:
          type: boolean
      type: object
    EsbToColMap:
      example:
        arr:
        - essbaseName: essbaseName
          columnName: columnName
        - essbaseName: essbaseName
          columnName: columnName
      properties:
        arr:
          items:
            $ref: '#/components/schemas/EsbToColMapInfo'
          type: array
      type: object
    EsbToColMapInfo:
      example:
        essbaseName: essbaseName
        columnName: columnName
      properties:
        essbaseName:
          type: string
        columnName:
          type: string
      type: object
    EssToDsMapDTO:
      example:
        dimensions:
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
      required:
      - dimensions
      type: object
      xml:
        name: EssToDsMapDTO
    Generation:
      properties:
        generationNumber:
          format: int32
          type: integer
        columnName:
          type: string
      required:
      - columnName
      - generationNumber
      type: object
      xml:
        name: Generation
    MemberMappingBean:
      example:
        sourceMember: sourceMember
        targetMember: targetMember
      properties:
        sourceMember:
          type: string
        targetMember:
          type: string
      type: object
    PartitionBean:
      example:
        sourceInfo:
          alterCredentials: true
          databaseName: databaseName
          measuresDimensionName: measuresDimensionName
          applicationLevelConnection: true
          serverName: serverName
          description: description
          userName: userName
          password: password
          essbaseToColumnMap:
            arr:
            - essbaseName: essbaseName
              columnName: columnName
            - essbaseName: essbaseName
              columnName: columnName
          connectionName: connectionName
          datasourceName: datasourceName
          applicationName: applicationName
          essbaseToDataSourceMap:
            dimensions:
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
          applicationLevelDatasource: true
        mappings:
        - sourceMember: sourceMember
          targetMember: targetMember
        - sourceMember: sourceMember
          targetMember: targetMember
        targetInfo:
          alterCredentials: true
          databaseName: databaseName
          measuresDimensionName: measuresDimensionName
          applicationLevelConnection: true
          serverName: serverName
          description: description
          userName: userName
          password: password
          essbaseToColumnMap:
            arr:
            - essbaseName: essbaseName
              columnName: columnName
            - essbaseName: essbaseName
              columnName: columnName
          connectionName: connectionName
          datasourceName: datasourceName
          applicationName: applicationName
          essbaseToDataSourceMap:
            dimensions:
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
          applicationLevelDatasource: true
        errorMessage: errorMessage
        updatable: true
        areas:
        - sourceArea: sourceArea
          slices:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          targetArea: targetArea
          sourceCellCount: 5
          targetCellCount: 2
        - sourceArea: sourceArea
          slices:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          targetArea: targetArea
          sourceCellCount: 5
          targetCellCount: 2
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        isNew: true
        type: type
        locked: true
      properties:
        id:
          type: string
        type:
          type: string
        updatable:
          type: boolean
        isNew:
          type: boolean
        locked:
          type: boolean
        sourceInfo:
          $ref: '#/components/schemas/ConnectionInfoBean'
        targetInfo:
          $ref: '#/components/schemas/ConnectionInfoBean'
        areas:
          items:
            $ref: '#/components/schemas/AreaBean'
          type: array
        mappings:
          items:
            $ref: '#/components/schemas/MemberMappingBean'
          type: array
        errorMessage:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    PartitionList:
      example:
        totalResults: 3
        offset: 7
        limit: 9
        count: 2
        hasMore: true
        items:
        - sourceInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            serverName: serverName
            description: description
            userName: userName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          mappings:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          targetInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            serverName: serverName
            description: description
            userName: userName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          errorMessage: errorMessage
          updatable: true
          areas:
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          isNew: true
          type: type
          locked: true
        - sourceInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            serverName: serverName
            description: description
            userName: userName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          mappings:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          targetInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            serverName: serverName
            description: description
            userName: userName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          errorMessage: errorMessage
          updatable: true
          areas:
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          isNew: true
          type: type
          locked: true
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/PartitionBean'
          type: array
        offset:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    PropertyEntry:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    PropertyList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/PropertyEntry'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    DatabaseProvisionReportItem:
      example:
        database: database
        items:
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
      properties:
        database:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ProvisionReportItem'
          type: array
      type: object
    DatabaseProvisionReportItemList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - database: database
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
        - database: database
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatabaseProvisionReportItem'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ProvisionReportItem:
      example:
        name: name
        inheritedFromGroups:
        - inheritedFromGroups
        - inheritedFromGroups
      properties:
        name:
          type: string
        inheritedFromGroups:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ApplicationProvisionReportItem:
      example:
        roles:
          totalResults: 6
          offset: 5
          count: 0
          hasMore: true
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          properties:
            key: properties
        name: name
        filters:
          totalResults: 6
          offset: 5
          count: 0
          hasMore: true
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          properties:
            key: properties
        scripts:
          totalResults: 6
          offset: 5
          count: 0
          hasMore: true
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          properties:
            key: properties
      properties:
        name:
          type: string
        roles:
          $ref: '#/components/schemas/ProvisionReportItemList'
        filters:
          $ref: '#/components/schemas/DatabaseProvisionReportItemList'
        scripts:
          $ref: '#/components/schemas/DatabaseProvisionReportItemList'
      type: object
    ApplicationProvisionReportItemList:
      example:
        totalResults: 2
        offset: 9
        count: 5
        hasMore: true
        limit: 7
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - roles:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            properties:
              key: properties
          name: name
          filters:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
          scripts:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
        - roles:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            properties:
              key: properties
          name: name
          filters:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
          scripts:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationProvisionReportItem'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    MainProvisionReport:
      example:
        service:
          roles:
            totalResults: 6
            offset: 5
            count: 0
            hasMore: true
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            properties:
              key: properties
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        applications:
          totalResults: 2
          offset: 9
          count: 5
          hasMore: true
          limit: 7
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - roles:
              totalResults: 6
              offset: 5
              count: 0
              hasMore: true
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              properties:
                key: properties
            name: name
            filters:
              totalResults: 6
              offset: 5
              count: 0
              hasMore: true
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
            scripts:
              totalResults: 6
              offset: 5
              count: 0
              hasMore: true
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
          - roles:
              totalResults: 6
              offset: 5
              count: 0
              hasMore: true
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              properties:
                key: properties
            name: name
            filters:
              totalResults: 6
              offset: 5
              count: 0
              hasMore: true
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
            scripts:
              totalResults: 6
              offset: 5
              count: 0
              hasMore: true
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
          properties:
            key: properties
      properties:
        service:
          $ref: '#/components/schemas/ServiceProvisionReportItem'
        applications:
          $ref: '#/components/schemas/ApplicationProvisionReportItemList'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    ProvisionReportItemList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ProvisionReportItem'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ServiceProvisionReportItem:
      example:
        roles:
          totalResults: 6
          offset: 5
          count: 0
          hasMore: true
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          properties:
            key: properties
      properties:
        roles:
          $ref: '#/components/schemas/ProvisionReportItemList'
      type: object
    RulePreviewOutput:
      example:
        data:
        - - data
          - data
        - - data
          - data
      properties:
        data:
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    AttributeBuildProperties:
      example:
        removeAll: true
        useRanges: true
        rangeIncrementValue: 2.3021358869347655
        rangeStartValue: 7.061401241503109
      properties:
        rangeIncrementValue:
          format: double
          type: number
        rangeStartValue:
          format: double
          type: number
        removeAll:
          type: boolean
        useRanges:
          type: boolean
      type: object
    AttributeOptions:
      example:
        scadisAssociationMode: NOOVERWRITE
        scaassociationMode: NOOVERWRITE
        indepDimensions:
        - name: name
          type: CONTINUOUS
        - name: name
          type: CONTINUOUS
        modified: true
        type: NUMERIC
        baseDimension: baseDimension
      properties:
        indepDimensions:
          items:
            $ref: '#/components/schemas/IndepDimension'
          type: array
        type:
          enum:
          - NUMERIC
          - BOOLEAN
          - TEXT
          - DATE
          - EXISTING
          type: string
        baseDimension:
          type: string
        modified:
          type: boolean
        scaassociationMode:
          enum:
          - NOOVERWRITE
          - OVERWRITE
          type: string
        scadisAssociationMode:
          enum:
          - NOOVERWRITE
          - OVERWRITE
          - EXTEND
          type: string
      type: object
    ColumnOperation:
      example:
        updateColumns: true
        position: 6
        type: CREATE
      properties:
        updateColumns:
          type: boolean
        type:
          enum:
          - CREATE
          - JOIN
          - SPLIT
          - MOVE
          - CREATETEXT
          - SUBSTRING
          type: string
        position:
          format: int32
          type: integer
      type: object
    DataLoadOptions:
      example:
        clearCombinations:
        - clearCombinations
        - clearCombinations
        removeAll: 6
        signFlipDimension: signFlipDimension
        signFlipUDA: signFlipUDA
        option: NONE
      properties:
        clearCombinations:
          items:
            type: string
          type: array
        option:
          enum:
          - NONE
          - OVERWRITE
          - ADD
          - SUBTRACT
          type: string
        removeAll:
          format: int32
          type: integer
        signFlipDimension:
          type: string
        signFlipUDA:
          type: string
      type: object
    DataSource:
      example:
        sqlProperties:
          server: server
          database: database
          dictionary: dictionary
          select: select
          application: application
          from: from
          where: where
        name: name
        fileProperties:
          dataloadRecordNumber: 6
          headerRecordNumber: 1
          dimensionBuildRecordNumber: 7
          delimiter: delimiter
          width: 1
          lineSkipCount: 4
        header: header
        tokens:
        - tokens
        - tokens
        tokensCombineOption: AND
      properties:
        header:
          type: string
        name:
          type: string
        tokens:
          items:
            type: string
          type: array
        tokensCombineOption:
          enum:
          - AND
          - OR
          type: string
        sqlProperties:
          $ref: '#/components/schemas/SQLProperties'
        fileProperties:
          $ref: '#/components/schemas/FileProperties'
      type: object
    DimBuildOptions:
      example:
        smartLists:
        - outOfRangeName: outOfRangeName
          startNumber: 9
          name: name
          missingName: missingName
          incrementalNumber: 5
          removeUnspecified: 9
        - outOfRangeName: outOfRangeName
          startNumber: 9
          name: name
          missingName: missingName
          incrementalNumber: 5
          removeUnspecified: 9
        autoConfig: true
        aliasTable: aliasTable
        arrangeDimensions: true
      properties:
        autoConfig:
          type: boolean
        arrangeDimensions:
          type: boolean
        aliasTable:
          type: string
        smartLists:
          items:
            $ref: '#/components/schemas/SmartList'
          type: array
      type: object
    EditorOptions:
      example:
        server: server
        dataFileDatabase: dataFileDatabase
        dataFileType: NONE
        startRecord: 8
        viewGridLines: true
        viewRawData: true
        viewIgnored: true
        viewMode: DIMBUILD
        viewToolbar: true
        database: database
        application: application
        dataFileApplication: dataFileApplication
        dataFileServer: dataFileServer
        dataFile: dataFile
        viewCount: 9
        object: object
      properties:
        application:
          type: string
        database:
          type: string
        server:
          type: string
        object:
          type: string
        dataFile:
          type: string
        dataFileApplication:
          type: string
        dataFileDatabase:
          type: string
        dataFileServer:
          type: string
        startRecord:
          format: int32
          type: integer
        viewCount:
          format: int32
          type: integer
        viewGridLines:
          type: boolean
        viewIgnored:
          type: boolean
        viewRawData:
          type: boolean
        viewToolbar:
          type: boolean
        viewMode:
          enum:
          - DIMBUILD
          - DATALOAD
          type: string
        dataFileType:
          enum:
          - NONE
          - EXCEL
          - LOTUS2
          - LOTUS3
          - LOTUS4
          - TEXT
          type: string
      type: object
    EssbaseInfo:
      example:
        server: server
        database: database
        password: password
        application: application
        user: user
      properties:
        server:
          type: string
        application:
          type: string
        database:
          type: string
        user:
          type: string
        password:
          type: string
      type: object
    Field:
      example:
        dateFormat: dateFormat
        prefix: prefix
        suffix: suffix
        dataloadOptions:
          storeTypeCountMissing: true
          storeType: MIN
          data: true
          referOption: 7
          useReference: true
          referNumber: 4
          ignore: true
          scale: true
          scalingfactor: 1.2315135367772556
          referDimension: referDimension
        smartList: smartList
        dimensionBuildOptions:
          attributeBuildProperties:
            removeAll: true
            useRanges: true
            rangeIncrementValue: 2.3021358869347655
            rangeStartValue: 7.061401241503109
          generation: 2
          parent: 6
          shared: 5
          generationType: NONE
          attributeDimension: attributeDimension
          endIndepColumns:
          - 9
          - 9
          staticField: true
          referIndex: 5
          refer: 1
          startIndepColumns:
          - 3
          - 3
          alias: alias
          ignore: true
          dimension: dimension
          generationProperty: NONE
        selectFilters:
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        replaceInformation:
        - matchWholeWord: true
          find: find
          caseSensitive: true
          replace: replace
          replaceAll: true
        - matchWholeWord: true
          find: find
          caseSensitive: true
          replace: replace
          replaceAll: true
        transform:
          nodes:
          - null
          - null
          type: COLUMN
        rejectFilterJoinOption: AND
        trim: true
        selectFilterJoinOption: AND
        name: name
        width: 0.8008281904610115
        convertSpaceToUnderScore: true
        case: NOOP
        rejectFilters:
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        option: option
      properties:
        rejectFilters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        selectFilters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        replaceInformation:
          items:
            $ref: '#/components/schemas/ReplaceInfo'
          type: array
        selectFilterJoinOption:
          enum:
          - AND
          - OR
          type: string
        rejectFilterJoinOption:
          enum:
          - AND
          - OR
          type: string
        dateFormat:
          type: string
        name:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        option:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        convertSpaceToUnderScore:
          type: boolean
        trim:
          type: boolean
        width:
          format: double
          type: number
        smartList:
          type: string
        dimensionBuildOptions:
          $ref: '#/components/schemas/FieldDimBuildOptions'
        dataloadOptions:
          $ref: '#/components/schemas/FieldDataLoadOptions'
        transform:
          $ref: '#/components/schemas/Transform'
        case:
          enum:
          - NOOP
          - LOWER_CASE
          - UPPER_CASE
          - FIRST_CAPITAL_CASE
          type: string
      type: object
    FieldDataLoadOptions:
      example:
        storeTypeCountMissing: true
        storeType: MIN
        data: true
        referOption: 7
        useReference: true
        referNumber: 4
        ignore: true
        scale: true
        scalingfactor: 1.2315135367772556
        referDimension: referDimension
      properties:
        referDimension:
          type: string
        referNumber:
          format: int32
          type: integer
        referOption:
          format: int32
          type: integer
        ignore:
          type: boolean
        scale:
          type: boolean
        useReference:
          type: boolean
        data:
          type: boolean
        scalingfactor:
          format: double
          type: number
        storeType:
          enum:
          - MIN
          - MAX
          - AVG
          - SUM
          - COUNT
          type: string
        storeTypeCountMissing:
          type: boolean
      type: object
    FieldDimBuildOptions:
      example:
        attributeBuildProperties:
          removeAll: true
          useRanges: true
          rangeIncrementValue: 2.3021358869347655
          rangeStartValue: 7.061401241503109
        generation: 2
        parent: 6
        shared: 5
        generationType: NONE
        attributeDimension: attributeDimension
        endIndepColumns:
        - 9
        - 9
        staticField: true
        referIndex: 5
        refer: 1
        startIndepColumns:
        - 3
        - 3
        alias: alias
        ignore: true
        dimension: dimension
        generationProperty: NONE
      properties:
        parent:
          format: int32
          type: integer
        generationType:
          enum:
          - NONE
          - PARENT
          - CHILD
          - GENERATION
          - LEVEL
          - ATTRIBUTE_MEMBER
          - ALIAS
          - PROPERTY
          - FORMULA
          - MEMBER_ID
          - SOLVE_ORDER
          - UDA
          - DUPGEN
          - DUPLEVEL
          - DUPGEN_ALIAS
          - DUPLEVEL_ALIAS
          - CURRENCY_NAME
          - CURRENCY_CATEGORY
          - NUMTYPES
          - ATTRIBUTE_DIM_LABEL
          - ATTRIBUTE_PARENT
          - DUPGEN_CAPTION
          - DUPLEVEL_CAPTION
          - AGGLEVELUSAGE
          - ATTR_ASSOCIATE
          - REFMEMBER
          - GEN_RIGHTJOIN
          - COMMENT
          - SHARED_GEN
          - GEN_NATUREJOIN
          - GEN_LEFTJOIN
          - GEN_OTLMBR
          - COMMENT_EX
          - REFMEMBERID
          - SMARTLISTID
          - SMARTLISTTEXT
          - FORMATSTRING
          type: string
        refer:
          format: int32
          type: integer
        referIndex:
          format: int32
          type: integer
        shared:
          format: int32
          type: integer
        attributeBuildProperties:
          $ref: '#/components/schemas/AttributeBuildProperties'
        dimension:
          type: string
        attributeDimension:
          type: string
        alias:
          type: string
        endIndepColumns:
          items:
            format: int32
            type: integer
          type: array
        startIndepColumns:
          items:
            format: int32
            type: integer
          type: array
        generationProperty:
          enum:
          - NONE
          - CONSOLIDATIONTYPE
          - STORAGETYPE
          - TIMEBALANCE
          - SKIP
          - VARIANCEREPORT
          - TWOPASSCALC
          - HIERARCHYTYPE
          type: string
        generation:
          format: int32
          type: integer
        ignore:
          type: boolean
        staticField:
          type: boolean
      type: object
    FileProperties:
      example:
        dataloadRecordNumber: 6
        headerRecordNumber: 1
        dimensionBuildRecordNumber: 7
        delimiter: delimiter
        width: 1
        lineSkipCount: 4
      properties:
        delimiter:
          type: string
        width:
          format: int32
          type: integer
        dataloadRecordNumber:
          format: int32
          type: integer
        dimensionBuildRecordNumber:
          format: int32
          type: integer
        headerRecordNumber:
          format: int32
          type: integer
        lineSkipCount:
          format: int32
          type: integer
      type: object
    Filter:
      example:
        condition: EQUAL_TO
        caseSensitive: true
        stringFilter: true
        type: REJECT
        value: value
      properties:
        stringFilter:
          type: boolean
        value:
          type: string
        condition:
          enum:
          - EQUAL_TO
          - NOT_EQUAL_TO
          - GREATER_THAN
          - GREATER_THAN_EQUAL_TO
          - LESS_THAN
          - LESS_THAN_EQUAL_TO
          - CONTAIN
          - DOES_NOT_CONTAIN
          type: string
        caseSensitive:
          type: boolean
        type:
          enum:
          - REJECT
          - SELECT
          type: string
      type: object
    IndepDimension:
      example:
        name: name
        type: CONTINUOUS
      properties:
        name:
          type: string
        type:
          enum:
          - CONTINUOUS
          - DISCRETE
          type: string
      type: object
    Level:
      example:
        number: 0
        unique: true
        name: name
      properties:
        name:
          type: string
        number:
          format: int32
          type: integer
        unique:
          type: boolean
      type: object
    MeasureOptions:
      example:
        currencyName: currencyName
        timeBalanceOption: EXISTING
        twoPass: true
        skip: NONE
        currencyCategory: currencyCategory
        varianceReporting: EXISTING
        currencyConversion: EXISTING
      properties:
        currencyCategory:
          type: string
        currencyName:
          type: string
        currencyConversion:
          enum:
          - EXISTING
          - NONE
          - CATEGORY
          - NO_CONVERSION
          type: string
        skip:
          enum:
          - NONE
          - NA
          - MISSING
          - ZERO
          - MISSING_ZERO
          type: string
        timeBalanceOption:
          enum:
          - EXISTING
          - NONE
          - FIRST
          - LAST
          - AVERAGE
          type: string
        varianceReporting:
          enum:
          - EXISTING
          - NON_EXPENSE
          - EXPENSE
          type: string
        twoPass:
          type: boolean
      type: object
    ReplaceInfo:
      example:
        matchWholeWord: true
        find: find
        caseSensitive: true
        replace: replace
        replaceAll: true
      properties:
        find:
          type: string
        replace:
          type: string
        matchWholeWord:
          type: boolean
        replaceAll:
          type: boolean
        caseSensitive:
          type: boolean
      type: object
    RulePreviewInput:
      example:
        data:
        - - data
          - data
        - - data
          - data
        rules:
          studio: true
          dataLoadOptions:
            clearCombinations:
            - clearCombinations
            - clearCombinations
            removeAll: 6
            signFlipDimension: signFlipDimension
            signFlipUDA: signFlipUDA
            option: NONE
          editorOptions:
            server: server
            dataFileDatabase: dataFileDatabase
            dataFileType: NONE
            startRecord: 8
            viewGridLines: true
            viewRawData: true
            viewIgnored: true
            viewMode: DIMBUILD
            viewToolbar: true
            database: database
            application: application
            dataFileApplication: dataFileApplication
            dataFileServer: dataFileServer
            dataFile: dataFile
            viewCount: 9
            object: object
          xolap: true
          encoding: NONE
          locale: locale
          bibpm: true
          dimensionBuildOptions:
            smartLists:
            - outOfRangeName: outOfRangeName
              startNumber: 9
              name: name
              missingName: missingName
              incrementalNumber: 5
              removeUnspecified: 9
            - outOfRangeName: outOfRangeName
              startNumber: 9
              name: name
              missingName: missingName
              incrementalNumber: 5
              removeUnspecified: 9
            autoConfig: true
            aliasTable: aliasTable
            arrangeDimensions: true
          flatFileBased: true
          timeStamp: 1
          essbaseInfo:
            server: server
            database: database
            password: password
            application: application
            user: user
          name: name
          columnOperations:
          - updateColumns: true
            position: 6
            type: CREATE
          - updateColumns: true
            position: 6
            type: CREATE
          fields:
          - dateFormat: dateFormat
            prefix: prefix
            suffix: suffix
            dataloadOptions:
              storeTypeCountMissing: true
              storeType: MIN
              data: true
              referOption: 7
              useReference: true
              referNumber: 4
              ignore: true
              scale: true
              scalingfactor: 1.2315135367772556
              referDimension: referDimension
            smartList: smartList
            dimensionBuildOptions:
              attributeBuildProperties:
                removeAll: true
                useRanges: true
                rangeIncrementValue: 2.3021358869347655
                rangeStartValue: 7.061401241503109
              generation: 2
              parent: 6
              shared: 5
              generationType: NONE
              attributeDimension: attributeDimension
              endIndepColumns:
              - 9
              - 9
              staticField: true
              referIndex: 5
              refer: 1
              startIndepColumns:
              - 3
              - 3
              alias: alias
              ignore: true
              dimension: dimension
              generationProperty: NONE
            selectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            replaceInformation:
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            transform:
              nodes:
              - null
              - null
              type: COLUMN
            rejectFilterJoinOption: AND
            trim: true
            selectFilterJoinOption: AND
            name: name
            width: 0.8008281904610115
            convertSpaceToUnderScore: true
            case: NOOP
            rejectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            option: option
          - dateFormat: dateFormat
            prefix: prefix
            suffix: suffix
            dataloadOptions:
              storeTypeCountMissing: true
              storeType: MIN
              data: true
              referOption: 7
              useReference: true
              referNumber: 4
              ignore: true
              scale: true
              scalingfactor: 1.2315135367772556
              referDimension: referDimension
            smartList: smartList
            dimensionBuildOptions:
              attributeBuildProperties:
                removeAll: true
                useRanges: true
                rangeIncrementValue: 2.3021358869347655
                rangeStartValue: 7.061401241503109
              generation: 2
              parent: 6
              shared: 5
              generationType: NONE
              attributeDimension: attributeDimension
              endIndepColumns:
              - 9
              - 9
              staticField: true
              referIndex: 5
              refer: 1
              startIndepColumns:
              - 3
              - 3
              alias: alias
              ignore: true
              dimension: dimension
              generationProperty: NONE
            selectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            replaceInformation:
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            transform:
              nodes:
              - null
              - null
              type: COLUMN
            rejectFilterJoinOption: AND
            trim: true
            selectFilterJoinOption: AND
            name: name
            width: 0.8008281904610115
            convertSpaceToUnderScore: true
            case: NOOP
            rejectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            option: option
          dataSource:
            sqlProperties:
              server: server
              database: database
              dictionary: dictionary
              select: select
              application: application
              from: from
              where: where
            name: name
            fileProperties:
              dataloadRecordNumber: 6
              headerRecordNumber: 1
              dimensionBuildRecordNumber: 7
              delimiter: delimiter
              width: 1
              lineSkipCount: 4
            header: header
            tokens:
            - tokens
            - tokens
            tokensCombineOption: AND
          dimensions:
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
      properties:
        data:
          items:
            items:
              type: string
            type: array
          type: array
        rules:
          $ref: '#/components/schemas/Rules'
      type: object
    Rules:
      example:
        studio: true
        dataLoadOptions:
          clearCombinations:
          - clearCombinations
          - clearCombinations
          removeAll: 6
          signFlipDimension: signFlipDimension
          signFlipUDA: signFlipUDA
          option: NONE
        editorOptions:
          server: server
          dataFileDatabase: dataFileDatabase
          dataFileType: NONE
          startRecord: 8
          viewGridLines: true
          viewRawData: true
          viewIgnored: true
          viewMode: DIMBUILD
          viewToolbar: true
          database: database
          application: application
          dataFileApplication: dataFileApplication
          dataFileServer: dataFileServer
          dataFile: dataFile
          viewCount: 9
          object: object
        xolap: true
        encoding: NONE
        locale: locale
        bibpm: true
        dimensionBuildOptions:
          smartLists:
          - outOfRangeName: outOfRangeName
            startNumber: 9
            name: name
            missingName: missingName
            incrementalNumber: 5
            removeUnspecified: 9
          - outOfRangeName: outOfRangeName
            startNumber: 9
            name: name
            missingName: missingName
            incrementalNumber: 5
            removeUnspecified: 9
          autoConfig: true
          aliasTable: aliasTable
          arrangeDimensions: true
        flatFileBased: true
        timeStamp: 1
        essbaseInfo:
          server: server
          database: database
          password: password
          application: application
          user: user
        name: name
        columnOperations:
        - updateColumns: true
          position: 6
          type: CREATE
        - updateColumns: true
          position: 6
          type: CREATE
        fields:
        - dateFormat: dateFormat
          prefix: prefix
          suffix: suffix
          dataloadOptions:
            storeTypeCountMissing: true
            storeType: MIN
            data: true
            referOption: 7
            useReference: true
            referNumber: 4
            ignore: true
            scale: true
            scalingfactor: 1.2315135367772556
            referDimension: referDimension
          smartList: smartList
          dimensionBuildOptions:
            attributeBuildProperties:
              removeAll: true
              useRanges: true
              rangeIncrementValue: 2.3021358869347655
              rangeStartValue: 7.061401241503109
            generation: 2
            parent: 6
            shared: 5
            generationType: NONE
            attributeDimension: attributeDimension
            endIndepColumns:
            - 9
            - 9
            staticField: true
            referIndex: 5
            refer: 1
            startIndepColumns:
            - 3
            - 3
            alias: alias
            ignore: true
            dimension: dimension
            generationProperty: NONE
          selectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          replaceInformation:
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          transform:
            nodes:
            - null
            - null
            type: COLUMN
          rejectFilterJoinOption: AND
          trim: true
          selectFilterJoinOption: AND
          name: name
          width: 0.8008281904610115
          convertSpaceToUnderScore: true
          case: NOOP
          rejectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          option: option
        - dateFormat: dateFormat
          prefix: prefix
          suffix: suffix
          dataloadOptions:
            storeTypeCountMissing: true
            storeType: MIN
            data: true
            referOption: 7
            useReference: true
            referNumber: 4
            ignore: true
            scale: true
            scalingfactor: 1.2315135367772556
            referDimension: referDimension
          smartList: smartList
          dimensionBuildOptions:
            attributeBuildProperties:
              removeAll: true
              useRanges: true
              rangeIncrementValue: 2.3021358869347655
              rangeStartValue: 7.061401241503109
            generation: 2
            parent: 6
            shared: 5
            generationType: NONE
            attributeDimension: attributeDimension
            endIndepColumns:
            - 9
            - 9
            staticField: true
            referIndex: 5
            refer: 1
            startIndepColumns:
            - 3
            - 3
            alias: alias
            ignore: true
            dimension: dimension
            generationProperty: NONE
          selectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          replaceInformation:
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          transform:
            nodes:
            - null
            - null
            type: COLUMN
          rejectFilterJoinOption: AND
          trim: true
          selectFilterJoinOption: AND
          name: name
          width: 0.8008281904610115
          convertSpaceToUnderScore: true
          case: NOOP
          rejectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          option: option
        dataSource:
          sqlProperties:
            server: server
            database: database
            dictionary: dictionary
            select: select
            application: application
            from: from
            where: where
          name: name
          fileProperties:
            dataloadRecordNumber: 6
            headerRecordNumber: 1
            dimensionBuildRecordNumber: 7
            delimiter: delimiter
            width: 1
            lineSkipCount: 4
          header: header
          tokens:
          - tokens
          - tokens
          tokensCombineOption: AND
        dimensions:
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
        timeStamp:
          format: int64
          type: integer
        dataSource:
          $ref: '#/components/schemas/DataSource'
        dimensionBuildOptions:
          $ref: '#/components/schemas/DimBuildOptions'
        dataLoadOptions:
          $ref: '#/components/schemas/DataLoadOptions'
        editorOptions:
          $ref: '#/components/schemas/EditorOptions'
        encoding:
          enum:
          - NONE
          - NONUNICODE
          - UTF8
          type: string
        name:
          type: string
        locale:
          type: string
        studio:
          type: boolean
        bibpm:
          type: boolean
        xolap:
          type: boolean
        flatFileBased:
          type: boolean
        essbaseInfo:
          $ref: '#/components/schemas/EssbaseInfo'
        columnOperations:
          items:
            $ref: '#/components/schemas/ColumnOperation'
          type: array
      type: object
    SQLProperties:
      example:
        server: server
        database: database
        dictionary: dictionary
        select: select
        application: application
        from: from
        where: where
      properties:
        server:
          type: string
        application:
          type: string
        database:
          type: string
        dictionary:
          type: string
        select:
          type: string
        from:
          type: string
        where:
          type: string
      type: object
    SmartList:
      example:
        outOfRangeName: outOfRangeName
        startNumber: 9
        name: name
        missingName: missingName
        incrementalNumber: 5
        removeUnspecified: 9
      properties:
        incrementalNumber:
          format: int32
          type: integer
        startNumber:
          format: int32
          type: integer
        missingName:
          type: string
        name:
          type: string
        outOfRangeName:
          type: string
        removeUnspecified:
          format: int32
          type: integer
      type: object
    Transform:
      example:
        nodes:
        - null
        - null
        type: COLUMN
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Transform'
          type: array
        type:
          enum:
          - COLUMN
          - SUBSTR
          - CONCAT
          - STATICSTR
          - IGNORE
          type: string
      type: object
    SandboxDetail:
      example:
        total: 0
        available: 6
        assigned: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        total:
          format: int32
          type: integer
        available:
          format: int32
          type: integer
        assigned:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    SandboxRequestPayload:
      example:
        size: 0
      properties:
        size:
          format: int32
          type: integer
      type: object
    ParticipantBean:
      example:
        name: name
        id: id
        email: email
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: Participant
    ParticipantListResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - name: name
          id: id
          email: email
        - name: name
          id: id
          email: email
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ParticipantBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Participants
    ApproverBean:
      example:
        approved: true
        name: name
        time: 3
        id: id
        email: email
      properties:
        email:
          type: string
        approved:
          type: boolean
        time:
          format: int64
          type: integer
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: Approver
    ScenarioBean:
      example:
        owner: owner
        appliedTime: 2
        submittedTime: 5
        dueDate: 2
        sandbox: sandbox
        description: description
        approvers:
        - approved: true
          name: name
          time: 3
          id: id
          email: email
        - approved: true
          name: name
          time: 3
          id: id
          email: email
        useCalculatedValues: true
        priority: LOW
        scenarioUser: true
        database: database
        refreshedTime: 7
        application: application
        overdue: true
        commentsCount: 9
        name: name
        createdTime: 5
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        state: NEW
        id: 4
        scripts:
        - type: REFRESH
          content: content
        - type: REFRESH
          content: content
        participants:
        - name: name
          id: id
          email: email
        - name: name
          id: id
          email: email
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        scenarioUser:
          type: boolean
        scripts:
          items:
            $ref: '#/components/schemas/ScriptBean'
          type: array
        database:
          type: string
        application:
          type: string
        participants:
          items:
            $ref: '#/components/schemas/ParticipantBean'
          type: array
        description:
          type: string
        createdTime:
          format: int64
          type: integer
        overdue:
          type: boolean
        submittedTime:
          format: int64
          type: integer
        appliedTime:
          format: int64
          type: integer
        refreshedTime:
          format: int64
          type: integer
        commentsCount:
          format: int32
          type: integer
        useCalculatedValues:
          type: boolean
        owner:
          type: string
        approvers:
          items:
            $ref: '#/components/schemas/ApproverBean'
          type: array
        sandbox:
          type: string
        dueDate:
          format: int64
          type: integer
        state:
          enum:
          - NEW
          - SUBMITTED
          - APPROVED
          - REJECTED
          - APPLIED
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
      type: object
      xml:
        name: Scenario
    ScenarioCollectionResponse:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        count: 7
        hasMore: true
        items:
        - owner: owner
          appliedTime: 2
          submittedTime: 5
          dueDate: 2
          sandbox: sandbox
          description: description
          approvers:
          - approved: true
            name: name
            time: 3
            id: id
            email: email
          - approved: true
            name: name
            time: 3
            id: id
            email: email
          useCalculatedValues: true
          priority: LOW
          scenarioUser: true
          database: database
          refreshedTime: 7
          application: application
          overdue: true
          commentsCount: 9
          name: name
          createdTime: 5
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          state: NEW
          id: 4
          scripts:
          - type: REFRESH
            content: content
          - type: REFRESH
            content: content
          participants:
          - name: name
            id: id
            email: email
          - name: name
            id: id
            email: email
        - owner: owner
          appliedTime: 2
          submittedTime: 5
          dueDate: 2
          sandbox: sandbox
          description: description
          approvers:
          - approved: true
            name: name
            time: 3
            id: id
            email: email
          - approved: true
            name: name
            time: 3
            id: id
            email: email
          useCalculatedValues: true
          priority: LOW
          scenarioUser: true
          database: database
          refreshedTime: 7
          application: application
          overdue: true
          commentsCount: 9
          name: name
          createdTime: 5
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          state: NEW
          id: 4
          scripts:
          - type: REFRESH
            content: content
          - type: REFRESH
            content: content
          participants:
          - name: name
            id: id
            email: email
          - name: name
            id: id
            email: email
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ScenarioBean'
          type: array
        count:
          format: int64
          type: integer
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: Scenarios
    ScriptBean:
      example:
        type: REFRESH
        content: content
      properties:
        content:
          type: string
        type:
          enum:
          - REFRESH
          - CLEAR
          - APPLY
          type: string
      type: object
      xml:
        name: Script
    CopyOptions:
      example:
        comments: true
        data: true
        keyMetrics: true
        slice: true
        approvers: true
        layouts: true
        properties: true
        tasks: true
        participants: true
      properties:
        properties:
          type: boolean
        comments:
          type: boolean
        data:
          type: boolean
        tasks:
          type: boolean
        keyMetrics:
          type: boolean
        slice:
          type: boolean
        layouts:
          type: boolean
        approvers:
          type: boolean
        participants:
          type: boolean
      type: object
    ScenarioActionPayload:
      example:
        comment: comment
        to: to
        copyOptions:
          comments: true
          data: true
          keyMetrics: true
          slice: true
          approvers: true
          layouts: true
          properties: true
          tasks: true
          participants: true
      properties:
        comment:
          type: string
        to:
          type: string
        copyOptions:
          $ref: '#/components/schemas/CopyOptions'
      type: object
    ScenarioCubes:
      example:
        databases:
        - databases
        - databases
        application: application
        databaseAdmin: true
        participateInScenario: true
        createScenario: true
      properties:
        application:
          type: string
        databases:
          items:
            type: string
          type: array
        createScenario:
          type: boolean
        participateInScenario:
          type: boolean
        databaseAdmin:
          type: boolean
      type: object
      xml:
        name: Database
    ScenarioCubesList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - databases:
          - databases
          - databases
          application: application
          databaseAdmin: true
          participateInScenario: true
          createScenario: true
        - databases:
          - databases
          - databases
          application: application
          databaseAdmin: true
          participateInScenario: true
          createScenario: true
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScenarioCubes'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Databases
    ScenarioChangesListResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - key: '{}'
        - key: '{}'
        properties:
          key: properties
      properties:
        items:
          items:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: ScenarioChanges
    ScriptListResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - type: REFRESH
          content: content
        - type: REFRESH
          content: content
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScriptBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Comments
    ApproverListResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - approved: true
          name: name
          time: 3
          id: id
          email: email
        - approved: true
          name: name
          time: 3
          id: id
          email: email
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApproverBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Approvers
    CommentBean:
      example:
        owner:
          name: name
          id: id
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        time: 0
        id: 6
        message: message
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        owner:
          $ref: '#/components/schemas/Owner'
        time:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        message:
          type: string
      type: object
      xml:
        name: Comment
    Owner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: Owner
    CommentListResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - owner:
            name: name
            id: id
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          id: 6
          message: message
        - owner:
            name: name
            id: id
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          id: 6
          message: message
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/CommentBean'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Comments
    ScenarioEditBean:
      example:
        owner: owner
        dueDate: 0
        description: description
        priority: LOW
      properties:
        dueDate:
          format: int64
          type: integer
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
        owner:
          type: string
        description:
          type: string
      type: object
    Script:
      example:
        modifiedTime: 0
        sizeInBytes: 6
        lockedBy: lockedBy
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        locked: true
        content: content
        lockedTime: 1
      properties:
        content:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        modifiedTime:
          format: int64
          type: integer
        sizeInBytes:
          format: int64
          type: integer
        lockedBy:
          type: string
        locked:
          type: boolean
        lockedTime:
          format: int64
          type: integer
        name:
          type: string
      type: object
    ScriptList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          content: content
          lockedTime: 1
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          content: content
          lockedTime: 1
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Script'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ScriptCopy:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
      type: object
    RTSVList:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: '{}'
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: '{}'
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/RTSV'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: result
    SessionAttributes:
      example:
        request: request
        database: database
        requestTimeInSeconds: requestTimeInSeconds
        connectionSource: connectionSource
        application: application
        requestState: requestState
        loginTimeInSeconds: loginTimeInSeconds
        dbConnectTimeInSeconds: dbConnectTimeInSeconds
        sessionId: sessionId
        userId: userId
      properties:
        userId:
          type: string
        sessionId:
          type: string
        loginTimeInSeconds:
          type: string
        application:
          type: string
        database:
          type: string
        dbConnectTimeInSeconds:
          type: string
        request:
          type: string
        requestTimeInSeconds:
          type: string
        connectionSource:
          type: string
        requestState:
          type: string
      type: object
    StreamProcessStartResponse:
      example:
        streamId: streamId
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        streamId:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    StreamProcessEndResponse:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        status: status
      properties:
        status:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    DataLoadStartPayload:
      example:
        delimiter: delimiter
        ruleFileName: ruleFileName
      properties:
        ruleFileName:
          type: string
        delimiter:
          description: Currently only Comma is supported as delimiter
          type: string
      type: object
    DimBuildStartPayload:
      example:
        restructureOption: PRESERVE_ALL_DATA
      properties:
        restructureOption:
          enum:
          - PRESERVE_ALL_DATA
          - PRESERVE_LEAFLEVEL_DATA
          - PRESERVE_INPUT_DATA
          - PRESERVE_NO_DATA
          type: string
      type: object
    Variable:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    VariableList:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
        count:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Limit:
      example:
        unlimited: true
        name: name
        description: description
        showUnlimited: true
        maximum: 6
        id: id
        value: value
        minimum: 0
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        description:
          type: string
        unlimited:
          type: boolean
        showUnlimited:
          type: boolean
        minimum:
          format: int64
          type: integer
        maximum:
          format: int64
          type: integer
      type: object
    Limits:
      example:
        dataSegmentSize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        virtualMemorySize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        webLogicHeapSize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        openFiles:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        maxMemory:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        userMaxProcesses:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        coreFileSize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
      properties:
        coreFileSize:
          $ref: '#/components/schemas/Limit'
        dataSegmentSize:
          $ref: '#/components/schemas/Limit'
        maxMemory:
          $ref: '#/components/schemas/Limit'
        openFiles:
          $ref: '#/components/schemas/Limit'
        userMaxProcesses:
          $ref: '#/components/schemas/Limit'
        virtualMemorySize:
          $ref: '#/components/schemas/Limit'
        webLogicHeapSize:
          $ref: '#/components/schemas/Limit'
      type: object
    SystemMaintainableResource:
      properties:
        available:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        id:
          type: string
      type: object
    SystemMaintenanceLimits:
      properties:
        disk:
          $ref: '#/components/schemas/SystemMaintainableResource'
        ram:
          $ref: '#/components/schemas/SystemMaintainableResource'
      type: object
    DatabaseSettings:
      example:
        password: password
        user: user
      properties:
        user:
          type: string
        password:
          type: string
      type: object
    Settings:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
x-original-swagger-version: "2.0"

